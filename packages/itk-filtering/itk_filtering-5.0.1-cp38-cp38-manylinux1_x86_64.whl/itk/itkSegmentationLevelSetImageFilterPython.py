# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSegmentationLevelSetImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSegmentationLevelSetImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkSegmentationLevelSetImageFilterPython
            return _itkSegmentationLevelSetImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSegmentationLevelSetImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSegmentationLevelSetImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSegmentationLevelSetImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSegmentationLevelSetFunctionPython
import itkSizePython
import pyBasePython
import itkImagePython
import itkRGBAPixelPython
import itkFixedArrayPython
import itkOffsetPython
import itkIndexPython
import itkSymmetricSecondRankTensorPython
import itkMatrixPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import itkPointPython
import vnl_vector_refPython
import itkVectorPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkRGBPixelPython
import ITKCommonBasePython
import itkImageRegionPython
import itkLevelSetFunctionPython
import itkFiniteDifferenceFunctionPython
import itkSparseFieldLevelSetImageFilterPython
import itkFiniteDifferenceImageFilterPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkSegmentationLevelSetImageFilterIF3IVF33F_New():
  return itkSegmentationLevelSetImageFilterIF3IVF33F.New()


def itkSegmentationLevelSetImageFilterIF3IF3F_New():
  return itkSegmentationLevelSetImageFilterIF3IF3F.New()


def itkSegmentationLevelSetImageFilterIF2IVF22F_New():
  return itkSegmentationLevelSetImageFilterIF2IVF22F.New()


def itkSegmentationLevelSetImageFilterIF2IF2F_New():
  return itkSegmentationLevelSetImageFilterIF2IF2F.New()

class itkSegmentationLevelSetImageFilterIF2IF2F(itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2):
    """


    A base class which defines the API for implementing a special class of
    image segmentation filters using level set methods.

    OVERVIEW This object defines the framework for a class of segmentation
    filters which use level set methods. These filters work by
    constructing a "feature image" onto which the evolving level set
    locks as it moves. In the feature image, values that are close to zero
    are associated with object boundaries. An original (or preprocessed)
    image is given to the filter as the feature image and a seed for the
    level set is given as the input of the filter. The seed is converted
    into a level set embedding which propagates according to the features
    calculated from the original image. TEMPLATE PARAMETERS There are two
    required and one optional template parameter for these filters.
    TInputImage is the image type of the initial model you will input to
    the filter using SetInput() or SetInitialImage().

    TFeatureImage is the image type of the image from which the filter
    will calculate the speed term for segmentation (see INPUTS).

    TOutputPixelType is the data type used for the output image phi, the
    implicit level set image. This should really only ever be set as float
    (default) or double.

    INPUTS The input to any subclass of this filter is the seed image for
    the initial level set embedding. As with other subclasses of the
    SparseLevelSetImageFilter, the type of the input image is is not
    important. The (RequestedRegion) size of the seed image must, however,
    match the (RequestedRegion) size of the feature image.  You must
    identify the initial front (surface) in the input image. You do this
    by specifying its isovalue through the method SetIsoSurfaceValue(float
    f). The algorithm will then initialize its solution using the front
    represented by value f. Note that the front is always represented by
    isosurface zero in the output and not the isosurface you specified for
    the input. This is because, for simplicity, the filter will shift your
    input image so that the active front has zero values.

    Depending on the particular application and filter that you are using,
    the feature image should be preprocessed with some type of noise
    reduction filtering. The feature image input can be of any type, but
    it will be cast to floating point before calculations are done.
    OUTPUTS The output of any subclass of this filter is a level set
    embedding as described in SparseFieldLevelSetImageFilter. The zero
    crossings of the output image give the pixels closest to the level set
    boundary. By ITK convention, NEGATIVE values are pixels INSIDE the
    segmented region and POSITIVE values are pixels OUTSIDE the segmented
    region. PARAMETERS The MaximumRMSChange parameter is used to determine
    when the solution has converged. A lower value will result in a
    tighter-fitting solution, but will require more computations. Too low
    a value could put the solver into an infinite loop unless a reasonable
    NumberOfIterations parameter is set. Values should always be greater
    than 0.0 and less than 1.0.

    The NumberOfIterations parameter can be used to halt the solution
    after a specified number of iterations, overriding the
    MaximumRMSChange halting criteria.

    The standard convention for ITK level-set segmentation filters is that
    POSITIVE propagation (speed) and advection terms cause the surface to
    EXPAND while negative terms cause the surface to CONTRACT. When the
    ReverseExpansionDirection parameter is set to TRUE (on), it tells the
    function object to reverse the standard ITK convention so that
    NEGATIVE terms cause EXPANSION and positive terms cause CONTRACTION.
    This parameter can be safely changed as appropriate for a particular
    application or data set to achieve the desired behavior.

    The FeatureScaling parameter controls the magnitude of the features
    calculated for use in the level set propagation and advection speeds.
    This value simply sets both parameters to equal values at once. Some
    filters may only use on of these two terms and this method is a
    generic way to set either or both without having to know which is in
    use.

    The CurvatureScaling parameter controls the magnitude of the curvature
    values which are calculated on the evolving isophote. This is
    important in controlling the relative effect of curvature in the
    calculation. Default value is 1.0. Higher values relative to the other
    level set equation terms (propagation and advection) will give a
    smoother result.

    The PropagationScaling parameter controls the scaling of the scalar
    propagation (speed) term relative to other terms in the level set
    equation. Setting this value will override any value already set by
    FeatureScaling.

    The AdvectionScaling parameter controls the scaling of the vector
    advection field term relative to other terms in the level set
    equation. Setting this value will override any value already set by
    FeatureScaling.

    WARNING:  This is an abstract class. It is not intended to be
    instantiated by itself. Instead, you should use the derived classes.
    This is the reason why the New() operator (itkNewMacro) is missing
    from the class API.

    See LevelSetFunction for more information.

    C++ includes: itkSegmentationLevelSetImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetMaximumIterations(self, i: 'unsigned int') -> "void":
        """
        SetMaximumIterations(itkSegmentationLevelSetImageFilterIF2IF2F self, unsigned int i)

        Set/Get the
        maximum number of iterations allowed for the solver. This prevents
        infinite loops if a solution "bounces". 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetMaximumIterations(self, i)


    def GetMaximumIterations(self) -> "unsigned int":
        """GetMaximumIterations(itkSegmentationLevelSetImageFilterIF2IF2F self) -> unsigned int"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetMaximumIterations(self)


    def SetFeatureImage(self, f: 'itkImageF2') -> "void":
        """
        SetFeatureImage(itkSegmentationLevelSetImageFilterIF2IF2F self, itkImageF2 f)

        Set/Get the feature
        image to be used for speed function of the level set equation.
        Equivalent to calling Set/GetInput(1, ..) 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetFeatureImage(self, f)


    def GetFeatureImage(self) -> "itkImageF2 const *":
        """GetFeatureImage(itkSegmentationLevelSetImageFilterIF2IF2F self) -> itkImageF2"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetFeatureImage(self)


    def SetInitialImage(self, _arg: 'itkImageF2') -> "void":
        """SetInitialImage(itkSegmentationLevelSetImageFilterIF2IF2F self, itkImageF2 _arg)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetInitialImage(self, _arg)


    def GetInitialImage(self) -> "itkImageF2 const *":
        """GetInitialImage(itkSegmentationLevelSetImageFilterIF2IF2F self) -> itkImageF2"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetInitialImage(self)


    def SetInput2(self, input: 'itkImageF2') -> "void":
        """
        SetInput2(itkSegmentationLevelSetImageFilterIF2IF2F self, itkImageF2 input)

        Set the feature image 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetInput2(self, input)


    def SetSpeedImage(self, s: 'itkImageF2') -> "void":
        """
        SetSpeedImage(itkSegmentationLevelSetImageFilterIF2IF2F self, itkImageF2 s)

        This function is for
        advanced applications. Set the image sampled as the speed term of this
        segmentation method. In general, the speed image is generated
        automatically by a subclass of this filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetSpeedImage(self, s)


    def SetAdvectionImage(self, v: 'itkImageFAF22') -> "void":
        """
        SetAdvectionImage(itkSegmentationLevelSetImageFilterIF2IF2F self, itkImageFAF22 v)

        This function is
        for advanced applications. Set the image sampled as the advection term
        of this segmentation method. In general, the advection image is
        generated automatically by a subclass of this filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetAdvectionImage(self, v)


    def GetSpeedImage(self) -> "itkImageF2 const *":
        """
        GetSpeedImage(itkSegmentationLevelSetImageFilterIF2IF2F self) -> itkImageF2

        Return a pointer to
        the image sampled as the speed term of the segmentation algorithm. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetSpeedImage(self)


    def GetAdvectionImage(self) -> "itkImageFAF22 const *":
        """
        GetAdvectionImage(itkSegmentationLevelSetImageFilterIF2IF2F self) -> itkImageFAF22

        Return a pointer
        to the image sampled as the advection term of the segmentation
        algorithm. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetAdvectionImage(self)


    def SetUseNegativeFeaturesOn(self) -> "void":
        """
        SetUseNegativeFeaturesOn(itkSegmentationLevelSetImageFilterIF2IF2F self)

        THIS
        METHOD IS DEPRECATED AND SHOULD NOT BE USED. This method reverses the
        speed function direction, effectively changing inside feature values
        to outside feature values and vice versa. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetUseNegativeFeaturesOn(self)


    def SetUseNegativeFeaturesOff(self) -> "void":
        """SetUseNegativeFeaturesOff(itkSegmentationLevelSetImageFilterIF2IF2F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetUseNegativeFeaturesOff(self)


    def SetUseNegativeFeatures(self, u: 'bool') -> "void":
        """
        SetUseNegativeFeatures(itkSegmentationLevelSetImageFilterIF2IF2F self, bool u)

        THIS METHOD
        IS DEPRECATED AND SHOULD NOT BE USED. Set/Get the value of the
        UseNegativeFeatures flag. This method is deprecated. Use Set/Get
        ReverseExpansionDirection instead. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetUseNegativeFeatures(self, u)


    def GetUseNegativeFeatures(self) -> "bool":
        """GetUseNegativeFeatures(itkSegmentationLevelSetImageFilterIF2IF2F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetUseNegativeFeatures(self)


    def SetReverseExpansionDirection(self, _arg: 'bool const') -> "void":
        """
        SetReverseExpansionDirection(itkSegmentationLevelSetImageFilterIF2IF2F self, bool const _arg)

        Turn
        On/Off the flag which determines whether Positive or Negative speed
        terms will cause surface expansion. If set to TRUE then negative speed
        terms will cause the surface to expand and positive speed terms will
        cause the surface to contract. If set to FALSE (default) then positive
        speed terms will cause the surface to expand and negative speed terms
        will cause the surface to contract. This method can be safely used to
        reverse the expansion/contraction as appropriate to a particular
        application or data set. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetReverseExpansionDirection(self, _arg)


    def GetReverseExpansionDirection(self) -> "bool":
        """GetReverseExpansionDirection(itkSegmentationLevelSetImageFilterIF2IF2F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetReverseExpansionDirection(self)


    def ReverseExpansionDirectionOn(self) -> "void":
        """ReverseExpansionDirectionOn(itkSegmentationLevelSetImageFilterIF2IF2F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_ReverseExpansionDirectionOn(self)


    def ReverseExpansionDirectionOff(self) -> "void":
        """ReverseExpansionDirectionOff(itkSegmentationLevelSetImageFilterIF2IF2F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_ReverseExpansionDirectionOff(self)


    def SetAutoGenerateSpeedAdvection(self, _arg: 'bool const') -> "void":
        """
        SetAutoGenerateSpeedAdvection(itkSegmentationLevelSetImageFilterIF2IF2F self, bool const _arg)

        Turn
        On/Off automatic generation of Speed and Advection terms when Update
        is called. If set to Off, the Speed and Advection images must be set
        explicitly using SetSpeedImage, SetAdvectionImage OR the methods
        GenerateSpeedImage() and GenerateAdvectionImage() should be called
        prior to updating the filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetAutoGenerateSpeedAdvection(self, _arg)


    def GetAutoGenerateSpeedAdvection(self) -> "bool":
        """GetAutoGenerateSpeedAdvection(itkSegmentationLevelSetImageFilterIF2IF2F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetAutoGenerateSpeedAdvection(self)


    def AutoGenerateSpeedAdvectionOn(self) -> "void":
        """AutoGenerateSpeedAdvectionOn(itkSegmentationLevelSetImageFilterIF2IF2F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_AutoGenerateSpeedAdvectionOn(self)


    def AutoGenerateSpeedAdvectionOff(self) -> "void":
        """AutoGenerateSpeedAdvectionOff(itkSegmentationLevelSetImageFilterIF2IF2F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_AutoGenerateSpeedAdvectionOff(self)


    def SetFeatureScaling(self, v: 'float') -> "void":
        """
        SetFeatureScaling(itkSegmentationLevelSetImageFilterIF2IF2F self, float v)

        Combined scaling
        of the propagation and advection speed terms. You should use either
        this -or- Get/SetPropagationScaling and Get/SetAdvectionScaling (if
        appropriate). See subclasses for details on when and whether to set
        these parameters. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetFeatureScaling(self, v)


    def SetPropagationScaling(self, v: 'float') -> "void":
        """
        SetPropagationScaling(itkSegmentationLevelSetImageFilterIF2IF2F self, float v)

        Set/Get the
        scaling of the propagation speed. Setting the FeatureScaling parameter
        overrides any previous values set for PropagationScaling. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetPropagationScaling(self, v)


    def GetPropagationScaling(self) -> "float":
        """GetPropagationScaling(itkSegmentationLevelSetImageFilterIF2IF2F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetPropagationScaling(self)


    def SetAdvectionScaling(self, v: 'float') -> "void":
        """
        SetAdvectionScaling(itkSegmentationLevelSetImageFilterIF2IF2F self, float v)

        Set/Get the
        scaling of the advection field. Setting the FeatureScaling parameter
        will override any existing value for AdvectionScaling. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetAdvectionScaling(self, v)


    def GetAdvectionScaling(self) -> "float":
        """GetAdvectionScaling(itkSegmentationLevelSetImageFilterIF2IF2F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetAdvectionScaling(self)


    def SetCurvatureScaling(self, v: 'float') -> "void":
        """
        SetCurvatureScaling(itkSegmentationLevelSetImageFilterIF2IF2F self, float v)

        Set/Get the
        scaling of the curvature. Use this parameter to increase the influence
        of curvature on the movement of the surface. Higher values relative to
        Advection and Propagation values will give smoother surfaces. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetCurvatureScaling(self, v)


    def GetCurvatureScaling(self) -> "float":
        """GetCurvatureScaling(itkSegmentationLevelSetImageFilterIF2IF2F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetCurvatureScaling(self)


    def SetUseMinimalCurvature(self, b: 'bool') -> "void":
        """SetUseMinimalCurvature(itkSegmentationLevelSetImageFilterIF2IF2F self, bool b)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetUseMinimalCurvature(self, b)


    def GetUseMinimalCurvature(self) -> "bool":
        """GetUseMinimalCurvature(itkSegmentationLevelSetImageFilterIF2IF2F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetUseMinimalCurvature(self)


    def UseMinimalCurvatureOn(self) -> "void":
        """UseMinimalCurvatureOn(itkSegmentationLevelSetImageFilterIF2IF2F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_UseMinimalCurvatureOn(self)


    def UseMinimalCurvatureOff(self) -> "void":
        """UseMinimalCurvatureOff(itkSegmentationLevelSetImageFilterIF2IF2F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_UseMinimalCurvatureOff(self)


    def SetSegmentationFunction(self, s: 'itkSegmentationLevelSetFunctionIF2IF2') -> "void":
        """
        SetSegmentationFunction(itkSegmentationLevelSetImageFilterIF2IF2F self, itkSegmentationLevelSetFunctionIF2IF2 s)

        Set the
        segmentation function. In general, this should only be called by a
        subclass of this object. It is made public to allow itk::Command
        objects access. The method is inline to avoid a problem with the gcc
        2.95 compiler matching the declaration with the definition. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetSegmentationFunction(self, s)


    def GetSegmentationFunction(self) -> "itkSegmentationLevelSetFunctionIF2IF2 *":
        """GetSegmentationFunction(itkSegmentationLevelSetImageFilterIF2IF2F self) -> itkSegmentationLevelSetFunctionIF2IF2"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetSegmentationFunction(self)


    def SetMaximumCurvatureTimeStep(self, n: 'double') -> "void":
        """
        SetMaximumCurvatureTimeStep(itkSegmentationLevelSetImageFilterIF2IF2F self, double n)

        Set/Get
        the maximum constraint for the curvature term factor in the time step
        calculation. Changing this value from the default is not recommended
        or necessary but could be used to speed up the surface evolution at
        the risk of creating an unstable solution. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetMaximumCurvatureTimeStep(self, n)


    def GetMaximumCurvatureTimeStep(self) -> "double":
        """GetMaximumCurvatureTimeStep(itkSegmentationLevelSetImageFilterIF2IF2F self) -> double"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetMaximumCurvatureTimeStep(self)


    def SetMaximumPropagationTimeStep(self, n: 'double') -> "void":
        """
        SetMaximumPropagationTimeStep(itkSegmentationLevelSetImageFilterIF2IF2F self, double n)

        Set/Get the maximum constraint for the scalar/vector term factor of
        the time step calculation. Changing this value from the default is not
        recommended or necessary but could be used to speed up the surface
        evolution at the risk of creating an unstable solution. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetMaximumPropagationTimeStep(self, n)


    def GetMaximumPropagationTimeStep(self) -> "double":
        """GetMaximumPropagationTimeStep(itkSegmentationLevelSetImageFilterIF2IF2F self) -> double"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetMaximumPropagationTimeStep(self)


    def GenerateSpeedImage(self) -> "void":
        """
        GenerateSpeedImage(itkSegmentationLevelSetImageFilterIF2IF2F self)

        Allocate and
        calculate the speed term image in the SegmentationFunction object.
        This method is called automatically on filter execution unless
        AutoGenerateSpeedAdvection is set to Off. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GenerateSpeedImage(self)


    def GenerateAdvectionImage(self) -> "void":
        """
        GenerateAdvectionImage(itkSegmentationLevelSetImageFilterIF2IF2F self)

        Allocate and
        calculate the advection term image in the SegmentationFunction object
        This method is called automatically on filter execution unless
        AutoGenerateSpeedAdvection is set to Off. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GenerateAdvectionImage(self)

    OutputHasNumericTraitsCheck = _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkSegmentationLevelSetImageFilterPython.delete_itkSegmentationLevelSetImageFilterIF2IF2F

    def cast(obj: 'itkLightObject') -> "itkSegmentationLevelSetImageFilterIF2IF2F *":
        """cast(itkLightObject obj) -> itkSegmentationLevelSetImageFilterIF2IF2F"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSegmentationLevelSetImageFilterIF2IF2F

        Create a new object of the class itkSegmentationLevelSetImageFilterIF2IF2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSegmentationLevelSetImageFilterIF2IF2F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSegmentationLevelSetImageFilterIF2IF2F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSegmentationLevelSetImageFilterIF2IF2F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSegmentationLevelSetImageFilterIF2IF2F.SetMaximumIterations = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetMaximumIterations, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetMaximumIterations = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetMaximumIterations, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetFeatureImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetFeatureImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetFeatureImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetFeatureImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetInitialImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetInitialImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetInitialImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetInitialImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetInput2 = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetInput2, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetSpeedImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetAdvectionImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetSpeedImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetAdvectionImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetUseNegativeFeaturesOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetUseNegativeFeaturesOn, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetUseNegativeFeaturesOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetUseNegativeFeaturesOff, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetUseNegativeFeatures = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetUseNegativeFeatures, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetUseNegativeFeatures = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetUseNegativeFeatures, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetReverseExpansionDirection, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetReverseExpansionDirection, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.ReverseExpansionDirectionOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_ReverseExpansionDirectionOn, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.ReverseExpansionDirectionOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_ReverseExpansionDirectionOff, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetAutoGenerateSpeedAdvection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetAutoGenerateSpeedAdvection, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetAutoGenerateSpeedAdvection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetAutoGenerateSpeedAdvection, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.AutoGenerateSpeedAdvectionOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_AutoGenerateSpeedAdvectionOn, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.AutoGenerateSpeedAdvectionOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_AutoGenerateSpeedAdvectionOff, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetFeatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetFeatureScaling, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetPropagationScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetPropagationScaling, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetPropagationScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetPropagationScaling, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetAdvectionScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetAdvectionScaling, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetAdvectionScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetAdvectionScaling, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetCurvatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetCurvatureScaling, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetCurvatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetCurvatureScaling, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetUseMinimalCurvature = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetUseMinimalCurvature, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetUseMinimalCurvature = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetUseMinimalCurvature, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.UseMinimalCurvatureOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_UseMinimalCurvatureOn, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.UseMinimalCurvatureOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_UseMinimalCurvatureOff, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetSegmentationFunction = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetSegmentationFunction, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetSegmentationFunction = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetSegmentationFunction, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetMaximumCurvatureTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetMaximumCurvatureTimeStep, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetMaximumCurvatureTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetMaximumCurvatureTimeStep, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.SetMaximumPropagationTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_SetMaximumPropagationTimeStep, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GetMaximumPropagationTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GetMaximumPropagationTimeStep, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GenerateSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GenerateSpeedImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F.GenerateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_GenerateAdvectionImage, None, itkSegmentationLevelSetImageFilterIF2IF2F)
itkSegmentationLevelSetImageFilterIF2IF2F_swigregister = _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_swigregister
itkSegmentationLevelSetImageFilterIF2IF2F_swigregister(itkSegmentationLevelSetImageFilterIF2IF2F)

def itkSegmentationLevelSetImageFilterIF2IF2F_cast(obj: 'itkLightObject') -> "itkSegmentationLevelSetImageFilterIF2IF2F *":
    """itkSegmentationLevelSetImageFilterIF2IF2F_cast(itkLightObject obj) -> itkSegmentationLevelSetImageFilterIF2IF2F"""
    return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IF2F_cast(obj)

class itkSegmentationLevelSetImageFilterIF2IVF22F(itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2):
    """


    A base class which defines the API for implementing a special class of
    image segmentation filters using level set methods.

    OVERVIEW This object defines the framework for a class of segmentation
    filters which use level set methods. These filters work by
    constructing a "feature image" onto which the evolving level set
    locks as it moves. In the feature image, values that are close to zero
    are associated with object boundaries. An original (or preprocessed)
    image is given to the filter as the feature image and a seed for the
    level set is given as the input of the filter. The seed is converted
    into a level set embedding which propagates according to the features
    calculated from the original image. TEMPLATE PARAMETERS There are two
    required and one optional template parameter for these filters.
    TInputImage is the image type of the initial model you will input to
    the filter using SetInput() or SetInitialImage().

    TFeatureImage is the image type of the image from which the filter
    will calculate the speed term for segmentation (see INPUTS).

    TOutputPixelType is the data type used for the output image phi, the
    implicit level set image. This should really only ever be set as float
    (default) or double.

    INPUTS The input to any subclass of this filter is the seed image for
    the initial level set embedding. As with other subclasses of the
    SparseLevelSetImageFilter, the type of the input image is is not
    important. The (RequestedRegion) size of the seed image must, however,
    match the (RequestedRegion) size of the feature image.  You must
    identify the initial front (surface) in the input image. You do this
    by specifying its isovalue through the method SetIsoSurfaceValue(float
    f). The algorithm will then initialize its solution using the front
    represented by value f. Note that the front is always represented by
    isosurface zero in the output and not the isosurface you specified for
    the input. This is because, for simplicity, the filter will shift your
    input image so that the active front has zero values.

    Depending on the particular application and filter that you are using,
    the feature image should be preprocessed with some type of noise
    reduction filtering. The feature image input can be of any type, but
    it will be cast to floating point before calculations are done.
    OUTPUTS The output of any subclass of this filter is a level set
    embedding as described in SparseFieldLevelSetImageFilter. The zero
    crossings of the output image give the pixels closest to the level set
    boundary. By ITK convention, NEGATIVE values are pixels INSIDE the
    segmented region and POSITIVE values are pixels OUTSIDE the segmented
    region. PARAMETERS The MaximumRMSChange parameter is used to determine
    when the solution has converged. A lower value will result in a
    tighter-fitting solution, but will require more computations. Too low
    a value could put the solver into an infinite loop unless a reasonable
    NumberOfIterations parameter is set. Values should always be greater
    than 0.0 and less than 1.0.

    The NumberOfIterations parameter can be used to halt the solution
    after a specified number of iterations, overriding the
    MaximumRMSChange halting criteria.

    The standard convention for ITK level-set segmentation filters is that
    POSITIVE propagation (speed) and advection terms cause the surface to
    EXPAND while negative terms cause the surface to CONTRACT. When the
    ReverseExpansionDirection parameter is set to TRUE (on), it tells the
    function object to reverse the standard ITK convention so that
    NEGATIVE terms cause EXPANSION and positive terms cause CONTRACTION.
    This parameter can be safely changed as appropriate for a particular
    application or data set to achieve the desired behavior.

    The FeatureScaling parameter controls the magnitude of the features
    calculated for use in the level set propagation and advection speeds.
    This value simply sets both parameters to equal values at once. Some
    filters may only use on of these two terms and this method is a
    generic way to set either or both without having to know which is in
    use.

    The CurvatureScaling parameter controls the magnitude of the curvature
    values which are calculated on the evolving isophote. This is
    important in controlling the relative effect of curvature in the
    calculation. Default value is 1.0. Higher values relative to the other
    level set equation terms (propagation and advection) will give a
    smoother result.

    The PropagationScaling parameter controls the scaling of the scalar
    propagation (speed) term relative to other terms in the level set
    equation. Setting this value will override any value already set by
    FeatureScaling.

    The AdvectionScaling parameter controls the scaling of the vector
    advection field term relative to other terms in the level set
    equation. Setting this value will override any value already set by
    FeatureScaling.

    WARNING:  This is an abstract class. It is not intended to be
    instantiated by itself. Instead, you should use the derived classes.
    This is the reason why the New() operator (itkNewMacro) is missing
    from the class API.

    See LevelSetFunction for more information.

    C++ includes: itkSegmentationLevelSetImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetMaximumIterations(self, i: 'unsigned int') -> "void":
        """
        SetMaximumIterations(itkSegmentationLevelSetImageFilterIF2IVF22F self, unsigned int i)

        Set/Get the
        maximum number of iterations allowed for the solver. This prevents
        infinite loops if a solution "bounces". 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetMaximumIterations(self, i)


    def GetMaximumIterations(self) -> "unsigned int":
        """GetMaximumIterations(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> unsigned int"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetMaximumIterations(self)


    def SetFeatureImage(self, f: 'itkImageVF22') -> "void":
        """
        SetFeatureImage(itkSegmentationLevelSetImageFilterIF2IVF22F self, itkImageVF22 f)

        Set/Get the feature
        image to be used for speed function of the level set equation.
        Equivalent to calling Set/GetInput(1, ..) 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetFeatureImage(self, f)


    def GetFeatureImage(self) -> "itkImageVF22 const *":
        """GetFeatureImage(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> itkImageVF22"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetFeatureImage(self)


    def SetInitialImage(self, _arg: 'itkImageF2') -> "void":
        """SetInitialImage(itkSegmentationLevelSetImageFilterIF2IVF22F self, itkImageF2 _arg)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetInitialImage(self, _arg)


    def GetInitialImage(self) -> "itkImageF2 const *":
        """GetInitialImage(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> itkImageF2"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetInitialImage(self)


    def SetInput2(self, input: 'itkImageVF22') -> "void":
        """
        SetInput2(itkSegmentationLevelSetImageFilterIF2IVF22F self, itkImageVF22 input)

        Set the feature image 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetInput2(self, input)


    def SetSpeedImage(self, s: 'itkImageF2') -> "void":
        """
        SetSpeedImage(itkSegmentationLevelSetImageFilterIF2IVF22F self, itkImageF2 s)

        This function is for
        advanced applications. Set the image sampled as the speed term of this
        segmentation method. In general, the speed image is generated
        automatically by a subclass of this filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetSpeedImage(self, s)


    def SetAdvectionImage(self, v: 'itkImageFAF22') -> "void":
        """
        SetAdvectionImage(itkSegmentationLevelSetImageFilterIF2IVF22F self, itkImageFAF22 v)

        This function is
        for advanced applications. Set the image sampled as the advection term
        of this segmentation method. In general, the advection image is
        generated automatically by a subclass of this filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetAdvectionImage(self, v)


    def GetSpeedImage(self) -> "itkImageF2 const *":
        """
        GetSpeedImage(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> itkImageF2

        Return a pointer to
        the image sampled as the speed term of the segmentation algorithm. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetSpeedImage(self)


    def GetAdvectionImage(self) -> "itkImageFAF22 const *":
        """
        GetAdvectionImage(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> itkImageFAF22

        Return a pointer
        to the image sampled as the advection term of the segmentation
        algorithm. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetAdvectionImage(self)


    def SetUseNegativeFeaturesOn(self) -> "void":
        """
        SetUseNegativeFeaturesOn(itkSegmentationLevelSetImageFilterIF2IVF22F self)

        THIS
        METHOD IS DEPRECATED AND SHOULD NOT BE USED. This method reverses the
        speed function direction, effectively changing inside feature values
        to outside feature values and vice versa. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetUseNegativeFeaturesOn(self)


    def SetUseNegativeFeaturesOff(self) -> "void":
        """SetUseNegativeFeaturesOff(itkSegmentationLevelSetImageFilterIF2IVF22F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetUseNegativeFeaturesOff(self)


    def SetUseNegativeFeatures(self, u: 'bool') -> "void":
        """
        SetUseNegativeFeatures(itkSegmentationLevelSetImageFilterIF2IVF22F self, bool u)

        THIS METHOD
        IS DEPRECATED AND SHOULD NOT BE USED. Set/Get the value of the
        UseNegativeFeatures flag. This method is deprecated. Use Set/Get
        ReverseExpansionDirection instead. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetUseNegativeFeatures(self, u)


    def GetUseNegativeFeatures(self) -> "bool":
        """GetUseNegativeFeatures(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetUseNegativeFeatures(self)


    def SetReverseExpansionDirection(self, _arg: 'bool const') -> "void":
        """
        SetReverseExpansionDirection(itkSegmentationLevelSetImageFilterIF2IVF22F self, bool const _arg)

        Turn
        On/Off the flag which determines whether Positive or Negative speed
        terms will cause surface expansion. If set to TRUE then negative speed
        terms will cause the surface to expand and positive speed terms will
        cause the surface to contract. If set to FALSE (default) then positive
        speed terms will cause the surface to expand and negative speed terms
        will cause the surface to contract. This method can be safely used to
        reverse the expansion/contraction as appropriate to a particular
        application or data set. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetReverseExpansionDirection(self, _arg)


    def GetReverseExpansionDirection(self) -> "bool":
        """GetReverseExpansionDirection(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetReverseExpansionDirection(self)


    def ReverseExpansionDirectionOn(self) -> "void":
        """ReverseExpansionDirectionOn(itkSegmentationLevelSetImageFilterIF2IVF22F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_ReverseExpansionDirectionOn(self)


    def ReverseExpansionDirectionOff(self) -> "void":
        """ReverseExpansionDirectionOff(itkSegmentationLevelSetImageFilterIF2IVF22F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_ReverseExpansionDirectionOff(self)


    def SetAutoGenerateSpeedAdvection(self, _arg: 'bool const') -> "void":
        """
        SetAutoGenerateSpeedAdvection(itkSegmentationLevelSetImageFilterIF2IVF22F self, bool const _arg)

        Turn
        On/Off automatic generation of Speed and Advection terms when Update
        is called. If set to Off, the Speed and Advection images must be set
        explicitly using SetSpeedImage, SetAdvectionImage OR the methods
        GenerateSpeedImage() and GenerateAdvectionImage() should be called
        prior to updating the filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetAutoGenerateSpeedAdvection(self, _arg)


    def GetAutoGenerateSpeedAdvection(self) -> "bool":
        """GetAutoGenerateSpeedAdvection(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetAutoGenerateSpeedAdvection(self)


    def AutoGenerateSpeedAdvectionOn(self) -> "void":
        """AutoGenerateSpeedAdvectionOn(itkSegmentationLevelSetImageFilterIF2IVF22F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_AutoGenerateSpeedAdvectionOn(self)


    def AutoGenerateSpeedAdvectionOff(self) -> "void":
        """AutoGenerateSpeedAdvectionOff(itkSegmentationLevelSetImageFilterIF2IVF22F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_AutoGenerateSpeedAdvectionOff(self)


    def SetFeatureScaling(self, v: 'float') -> "void":
        """
        SetFeatureScaling(itkSegmentationLevelSetImageFilterIF2IVF22F self, float v)

        Combined scaling
        of the propagation and advection speed terms. You should use either
        this -or- Get/SetPropagationScaling and Get/SetAdvectionScaling (if
        appropriate). See subclasses for details on when and whether to set
        these parameters. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetFeatureScaling(self, v)


    def SetPropagationScaling(self, v: 'float') -> "void":
        """
        SetPropagationScaling(itkSegmentationLevelSetImageFilterIF2IVF22F self, float v)

        Set/Get the
        scaling of the propagation speed. Setting the FeatureScaling parameter
        overrides any previous values set for PropagationScaling. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetPropagationScaling(self, v)


    def GetPropagationScaling(self) -> "float":
        """GetPropagationScaling(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetPropagationScaling(self)


    def SetAdvectionScaling(self, v: 'float') -> "void":
        """
        SetAdvectionScaling(itkSegmentationLevelSetImageFilterIF2IVF22F self, float v)

        Set/Get the
        scaling of the advection field. Setting the FeatureScaling parameter
        will override any existing value for AdvectionScaling. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetAdvectionScaling(self, v)


    def GetAdvectionScaling(self) -> "float":
        """GetAdvectionScaling(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetAdvectionScaling(self)


    def SetCurvatureScaling(self, v: 'float') -> "void":
        """
        SetCurvatureScaling(itkSegmentationLevelSetImageFilterIF2IVF22F self, float v)

        Set/Get the
        scaling of the curvature. Use this parameter to increase the influence
        of curvature on the movement of the surface. Higher values relative to
        Advection and Propagation values will give smoother surfaces. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetCurvatureScaling(self, v)


    def GetCurvatureScaling(self) -> "float":
        """GetCurvatureScaling(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetCurvatureScaling(self)


    def SetUseMinimalCurvature(self, b: 'bool') -> "void":
        """SetUseMinimalCurvature(itkSegmentationLevelSetImageFilterIF2IVF22F self, bool b)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetUseMinimalCurvature(self, b)


    def GetUseMinimalCurvature(self) -> "bool":
        """GetUseMinimalCurvature(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetUseMinimalCurvature(self)


    def UseMinimalCurvatureOn(self) -> "void":
        """UseMinimalCurvatureOn(itkSegmentationLevelSetImageFilterIF2IVF22F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_UseMinimalCurvatureOn(self)


    def UseMinimalCurvatureOff(self) -> "void":
        """UseMinimalCurvatureOff(itkSegmentationLevelSetImageFilterIF2IVF22F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_UseMinimalCurvatureOff(self)


    def SetSegmentationFunction(self, s: 'itk::SegmentationLevelSetFunction< itk::Image< float,2 >,itk::Image< itk::Vector< float,2 >,2 > > *') -> "void":
        """
        SetSegmentationFunction(itkSegmentationLevelSetImageFilterIF2IVF22F self, itk::SegmentationLevelSetFunction< itk::Image< float,2 >,itk::Image< itk::Vector< float,2 >,2 > > * s)

        Set the
        segmentation function. In general, this should only be called by a
        subclass of this object. It is made public to allow itk::Command
        objects access. The method is inline to avoid a problem with the gcc
        2.95 compiler matching the declaration with the definition. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetSegmentationFunction(self, s)


    def GetSegmentationFunction(self) -> "itk::SegmentationLevelSetFunction< itk::Image< float,2 >,itk::Image< itk::Vector< float,2 >,2 > > *":
        """GetSegmentationFunction(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> itk::SegmentationLevelSetFunction< itk::Image< float,2 >,itk::Image< itk::Vector< float,2 >,2 > > *"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetSegmentationFunction(self)


    def SetMaximumCurvatureTimeStep(self, n: 'double') -> "void":
        """
        SetMaximumCurvatureTimeStep(itkSegmentationLevelSetImageFilterIF2IVF22F self, double n)

        Set/Get
        the maximum constraint for the curvature term factor in the time step
        calculation. Changing this value from the default is not recommended
        or necessary but could be used to speed up the surface evolution at
        the risk of creating an unstable solution. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetMaximumCurvatureTimeStep(self, n)


    def GetMaximumCurvatureTimeStep(self) -> "double":
        """GetMaximumCurvatureTimeStep(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> double"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetMaximumCurvatureTimeStep(self)


    def SetMaximumPropagationTimeStep(self, n: 'double') -> "void":
        """
        SetMaximumPropagationTimeStep(itkSegmentationLevelSetImageFilterIF2IVF22F self, double n)

        Set/Get the maximum constraint for the scalar/vector term factor of
        the time step calculation. Changing this value from the default is not
        recommended or necessary but could be used to speed up the surface
        evolution at the risk of creating an unstable solution. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetMaximumPropagationTimeStep(self, n)


    def GetMaximumPropagationTimeStep(self) -> "double":
        """GetMaximumPropagationTimeStep(itkSegmentationLevelSetImageFilterIF2IVF22F self) -> double"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetMaximumPropagationTimeStep(self)


    def GenerateSpeedImage(self) -> "void":
        """
        GenerateSpeedImage(itkSegmentationLevelSetImageFilterIF2IVF22F self)

        Allocate and
        calculate the speed term image in the SegmentationFunction object.
        This method is called automatically on filter execution unless
        AutoGenerateSpeedAdvection is set to Off. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GenerateSpeedImage(self)


    def GenerateAdvectionImage(self) -> "void":
        """
        GenerateAdvectionImage(itkSegmentationLevelSetImageFilterIF2IVF22F self)

        Allocate and
        calculate the advection term image in the SegmentationFunction object
        This method is called automatically on filter execution unless
        AutoGenerateSpeedAdvection is set to Off. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GenerateAdvectionImage(self)

    OutputHasNumericTraitsCheck = _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkSegmentationLevelSetImageFilterPython.delete_itkSegmentationLevelSetImageFilterIF2IVF22F

    def cast(obj: 'itkLightObject') -> "itkSegmentationLevelSetImageFilterIF2IVF22F *":
        """cast(itkLightObject obj) -> itkSegmentationLevelSetImageFilterIF2IVF22F"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSegmentationLevelSetImageFilterIF2IVF22F

        Create a new object of the class itkSegmentationLevelSetImageFilterIF2IVF22F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSegmentationLevelSetImageFilterIF2IVF22F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSegmentationLevelSetImageFilterIF2IVF22F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSegmentationLevelSetImageFilterIF2IVF22F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSegmentationLevelSetImageFilterIF2IVF22F.SetMaximumIterations = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetMaximumIterations, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetMaximumIterations = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetMaximumIterations, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetFeatureImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetFeatureImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetFeatureImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetFeatureImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetInitialImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetInitialImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetInitialImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetInitialImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetInput2 = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetInput2, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetSpeedImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetAdvectionImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetSpeedImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetAdvectionImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetUseNegativeFeaturesOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetUseNegativeFeaturesOn, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetUseNegativeFeaturesOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetUseNegativeFeaturesOff, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetUseNegativeFeatures = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetUseNegativeFeatures, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetUseNegativeFeatures = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetUseNegativeFeatures, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetReverseExpansionDirection, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetReverseExpansionDirection, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.ReverseExpansionDirectionOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_ReverseExpansionDirectionOn, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.ReverseExpansionDirectionOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_ReverseExpansionDirectionOff, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetAutoGenerateSpeedAdvection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetAutoGenerateSpeedAdvection, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetAutoGenerateSpeedAdvection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetAutoGenerateSpeedAdvection, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.AutoGenerateSpeedAdvectionOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_AutoGenerateSpeedAdvectionOn, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.AutoGenerateSpeedAdvectionOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_AutoGenerateSpeedAdvectionOff, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetFeatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetFeatureScaling, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetPropagationScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetPropagationScaling, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetPropagationScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetPropagationScaling, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetAdvectionScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetAdvectionScaling, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetAdvectionScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetAdvectionScaling, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetCurvatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetCurvatureScaling, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetCurvatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetCurvatureScaling, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetUseMinimalCurvature = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetUseMinimalCurvature, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetUseMinimalCurvature = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetUseMinimalCurvature, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.UseMinimalCurvatureOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_UseMinimalCurvatureOn, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.UseMinimalCurvatureOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_UseMinimalCurvatureOff, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetSegmentationFunction = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetSegmentationFunction, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetSegmentationFunction = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetSegmentationFunction, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetMaximumCurvatureTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetMaximumCurvatureTimeStep, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetMaximumCurvatureTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetMaximumCurvatureTimeStep, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.SetMaximumPropagationTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_SetMaximumPropagationTimeStep, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GetMaximumPropagationTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GetMaximumPropagationTimeStep, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GenerateSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GenerateSpeedImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F.GenerateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_GenerateAdvectionImage, None, itkSegmentationLevelSetImageFilterIF2IVF22F)
itkSegmentationLevelSetImageFilterIF2IVF22F_swigregister = _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_swigregister
itkSegmentationLevelSetImageFilterIF2IVF22F_swigregister(itkSegmentationLevelSetImageFilterIF2IVF22F)

def itkSegmentationLevelSetImageFilterIF2IVF22F_cast(obj: 'itkLightObject') -> "itkSegmentationLevelSetImageFilterIF2IVF22F *":
    """itkSegmentationLevelSetImageFilterIF2IVF22F_cast(itkLightObject obj) -> itkSegmentationLevelSetImageFilterIF2IVF22F"""
    return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF2IVF22F_cast(obj)

class itkSegmentationLevelSetImageFilterIF3IF3F(itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3):
    """


    A base class which defines the API for implementing a special class of
    image segmentation filters using level set methods.

    OVERVIEW This object defines the framework for a class of segmentation
    filters which use level set methods. These filters work by
    constructing a "feature image" onto which the evolving level set
    locks as it moves. In the feature image, values that are close to zero
    are associated with object boundaries. An original (or preprocessed)
    image is given to the filter as the feature image and a seed for the
    level set is given as the input of the filter. The seed is converted
    into a level set embedding which propagates according to the features
    calculated from the original image. TEMPLATE PARAMETERS There are two
    required and one optional template parameter for these filters.
    TInputImage is the image type of the initial model you will input to
    the filter using SetInput() or SetInitialImage().

    TFeatureImage is the image type of the image from which the filter
    will calculate the speed term for segmentation (see INPUTS).

    TOutputPixelType is the data type used for the output image phi, the
    implicit level set image. This should really only ever be set as float
    (default) or double.

    INPUTS The input to any subclass of this filter is the seed image for
    the initial level set embedding. As with other subclasses of the
    SparseLevelSetImageFilter, the type of the input image is is not
    important. The (RequestedRegion) size of the seed image must, however,
    match the (RequestedRegion) size of the feature image.  You must
    identify the initial front (surface) in the input image. You do this
    by specifying its isovalue through the method SetIsoSurfaceValue(float
    f). The algorithm will then initialize its solution using the front
    represented by value f. Note that the front is always represented by
    isosurface zero in the output and not the isosurface you specified for
    the input. This is because, for simplicity, the filter will shift your
    input image so that the active front has zero values.

    Depending on the particular application and filter that you are using,
    the feature image should be preprocessed with some type of noise
    reduction filtering. The feature image input can be of any type, but
    it will be cast to floating point before calculations are done.
    OUTPUTS The output of any subclass of this filter is a level set
    embedding as described in SparseFieldLevelSetImageFilter. The zero
    crossings of the output image give the pixels closest to the level set
    boundary. By ITK convention, NEGATIVE values are pixels INSIDE the
    segmented region and POSITIVE values are pixels OUTSIDE the segmented
    region. PARAMETERS The MaximumRMSChange parameter is used to determine
    when the solution has converged. A lower value will result in a
    tighter-fitting solution, but will require more computations. Too low
    a value could put the solver into an infinite loop unless a reasonable
    NumberOfIterations parameter is set. Values should always be greater
    than 0.0 and less than 1.0.

    The NumberOfIterations parameter can be used to halt the solution
    after a specified number of iterations, overriding the
    MaximumRMSChange halting criteria.

    The standard convention for ITK level-set segmentation filters is that
    POSITIVE propagation (speed) and advection terms cause the surface to
    EXPAND while negative terms cause the surface to CONTRACT. When the
    ReverseExpansionDirection parameter is set to TRUE (on), it tells the
    function object to reverse the standard ITK convention so that
    NEGATIVE terms cause EXPANSION and positive terms cause CONTRACTION.
    This parameter can be safely changed as appropriate for a particular
    application or data set to achieve the desired behavior.

    The FeatureScaling parameter controls the magnitude of the features
    calculated for use in the level set propagation and advection speeds.
    This value simply sets both parameters to equal values at once. Some
    filters may only use on of these two terms and this method is a
    generic way to set either or both without having to know which is in
    use.

    The CurvatureScaling parameter controls the magnitude of the curvature
    values which are calculated on the evolving isophote. This is
    important in controlling the relative effect of curvature in the
    calculation. Default value is 1.0. Higher values relative to the other
    level set equation terms (propagation and advection) will give a
    smoother result.

    The PropagationScaling parameter controls the scaling of the scalar
    propagation (speed) term relative to other terms in the level set
    equation. Setting this value will override any value already set by
    FeatureScaling.

    The AdvectionScaling parameter controls the scaling of the vector
    advection field term relative to other terms in the level set
    equation. Setting this value will override any value already set by
    FeatureScaling.

    WARNING:  This is an abstract class. It is not intended to be
    instantiated by itself. Instead, you should use the derived classes.
    This is the reason why the New() operator (itkNewMacro) is missing
    from the class API.

    See LevelSetFunction for more information.

    C++ includes: itkSegmentationLevelSetImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetMaximumIterations(self, i: 'unsigned int') -> "void":
        """
        SetMaximumIterations(itkSegmentationLevelSetImageFilterIF3IF3F self, unsigned int i)

        Set/Get the
        maximum number of iterations allowed for the solver. This prevents
        infinite loops if a solution "bounces". 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetMaximumIterations(self, i)


    def GetMaximumIterations(self) -> "unsigned int":
        """GetMaximumIterations(itkSegmentationLevelSetImageFilterIF3IF3F self) -> unsigned int"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetMaximumIterations(self)


    def SetFeatureImage(self, f: 'itkImageF3') -> "void":
        """
        SetFeatureImage(itkSegmentationLevelSetImageFilterIF3IF3F self, itkImageF3 f)

        Set/Get the feature
        image to be used for speed function of the level set equation.
        Equivalent to calling Set/GetInput(1, ..) 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetFeatureImage(self, f)


    def GetFeatureImage(self) -> "itkImageF3 const *":
        """GetFeatureImage(itkSegmentationLevelSetImageFilterIF3IF3F self) -> itkImageF3"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetFeatureImage(self)


    def SetInitialImage(self, _arg: 'itkImageF3') -> "void":
        """SetInitialImage(itkSegmentationLevelSetImageFilterIF3IF3F self, itkImageF3 _arg)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetInitialImage(self, _arg)


    def GetInitialImage(self) -> "itkImageF3 const *":
        """GetInitialImage(itkSegmentationLevelSetImageFilterIF3IF3F self) -> itkImageF3"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetInitialImage(self)


    def SetInput2(self, input: 'itkImageF3') -> "void":
        """
        SetInput2(itkSegmentationLevelSetImageFilterIF3IF3F self, itkImageF3 input)

        Set the feature image 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetInput2(self, input)


    def SetSpeedImage(self, s: 'itkImageF3') -> "void":
        """
        SetSpeedImage(itkSegmentationLevelSetImageFilterIF3IF3F self, itkImageF3 s)

        This function is for
        advanced applications. Set the image sampled as the speed term of this
        segmentation method. In general, the speed image is generated
        automatically by a subclass of this filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetSpeedImage(self, s)


    def SetAdvectionImage(self, v: 'itkImageFAF33') -> "void":
        """
        SetAdvectionImage(itkSegmentationLevelSetImageFilterIF3IF3F self, itkImageFAF33 v)

        This function is
        for advanced applications. Set the image sampled as the advection term
        of this segmentation method. In general, the advection image is
        generated automatically by a subclass of this filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetAdvectionImage(self, v)


    def GetSpeedImage(self) -> "itkImageF3 const *":
        """
        GetSpeedImage(itkSegmentationLevelSetImageFilterIF3IF3F self) -> itkImageF3

        Return a pointer to
        the image sampled as the speed term of the segmentation algorithm. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetSpeedImage(self)


    def GetAdvectionImage(self) -> "itkImageFAF33 const *":
        """
        GetAdvectionImage(itkSegmentationLevelSetImageFilterIF3IF3F self) -> itkImageFAF33

        Return a pointer
        to the image sampled as the advection term of the segmentation
        algorithm. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetAdvectionImage(self)


    def SetUseNegativeFeaturesOn(self) -> "void":
        """
        SetUseNegativeFeaturesOn(itkSegmentationLevelSetImageFilterIF3IF3F self)

        THIS
        METHOD IS DEPRECATED AND SHOULD NOT BE USED. This method reverses the
        speed function direction, effectively changing inside feature values
        to outside feature values and vice versa. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetUseNegativeFeaturesOn(self)


    def SetUseNegativeFeaturesOff(self) -> "void":
        """SetUseNegativeFeaturesOff(itkSegmentationLevelSetImageFilterIF3IF3F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetUseNegativeFeaturesOff(self)


    def SetUseNegativeFeatures(self, u: 'bool') -> "void":
        """
        SetUseNegativeFeatures(itkSegmentationLevelSetImageFilterIF3IF3F self, bool u)

        THIS METHOD
        IS DEPRECATED AND SHOULD NOT BE USED. Set/Get the value of the
        UseNegativeFeatures flag. This method is deprecated. Use Set/Get
        ReverseExpansionDirection instead. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetUseNegativeFeatures(self, u)


    def GetUseNegativeFeatures(self) -> "bool":
        """GetUseNegativeFeatures(itkSegmentationLevelSetImageFilterIF3IF3F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetUseNegativeFeatures(self)


    def SetReverseExpansionDirection(self, _arg: 'bool const') -> "void":
        """
        SetReverseExpansionDirection(itkSegmentationLevelSetImageFilterIF3IF3F self, bool const _arg)

        Turn
        On/Off the flag which determines whether Positive or Negative speed
        terms will cause surface expansion. If set to TRUE then negative speed
        terms will cause the surface to expand and positive speed terms will
        cause the surface to contract. If set to FALSE (default) then positive
        speed terms will cause the surface to expand and negative speed terms
        will cause the surface to contract. This method can be safely used to
        reverse the expansion/contraction as appropriate to a particular
        application or data set. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetReverseExpansionDirection(self, _arg)


    def GetReverseExpansionDirection(self) -> "bool":
        """GetReverseExpansionDirection(itkSegmentationLevelSetImageFilterIF3IF3F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetReverseExpansionDirection(self)


    def ReverseExpansionDirectionOn(self) -> "void":
        """ReverseExpansionDirectionOn(itkSegmentationLevelSetImageFilterIF3IF3F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_ReverseExpansionDirectionOn(self)


    def ReverseExpansionDirectionOff(self) -> "void":
        """ReverseExpansionDirectionOff(itkSegmentationLevelSetImageFilterIF3IF3F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_ReverseExpansionDirectionOff(self)


    def SetAutoGenerateSpeedAdvection(self, _arg: 'bool const') -> "void":
        """
        SetAutoGenerateSpeedAdvection(itkSegmentationLevelSetImageFilterIF3IF3F self, bool const _arg)

        Turn
        On/Off automatic generation of Speed and Advection terms when Update
        is called. If set to Off, the Speed and Advection images must be set
        explicitly using SetSpeedImage, SetAdvectionImage OR the methods
        GenerateSpeedImage() and GenerateAdvectionImage() should be called
        prior to updating the filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetAutoGenerateSpeedAdvection(self, _arg)


    def GetAutoGenerateSpeedAdvection(self) -> "bool":
        """GetAutoGenerateSpeedAdvection(itkSegmentationLevelSetImageFilterIF3IF3F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetAutoGenerateSpeedAdvection(self)


    def AutoGenerateSpeedAdvectionOn(self) -> "void":
        """AutoGenerateSpeedAdvectionOn(itkSegmentationLevelSetImageFilterIF3IF3F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_AutoGenerateSpeedAdvectionOn(self)


    def AutoGenerateSpeedAdvectionOff(self) -> "void":
        """AutoGenerateSpeedAdvectionOff(itkSegmentationLevelSetImageFilterIF3IF3F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_AutoGenerateSpeedAdvectionOff(self)


    def SetFeatureScaling(self, v: 'float') -> "void":
        """
        SetFeatureScaling(itkSegmentationLevelSetImageFilterIF3IF3F self, float v)

        Combined scaling
        of the propagation and advection speed terms. You should use either
        this -or- Get/SetPropagationScaling and Get/SetAdvectionScaling (if
        appropriate). See subclasses for details on when and whether to set
        these parameters. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetFeatureScaling(self, v)


    def SetPropagationScaling(self, v: 'float') -> "void":
        """
        SetPropagationScaling(itkSegmentationLevelSetImageFilterIF3IF3F self, float v)

        Set/Get the
        scaling of the propagation speed. Setting the FeatureScaling parameter
        overrides any previous values set for PropagationScaling. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetPropagationScaling(self, v)


    def GetPropagationScaling(self) -> "float":
        """GetPropagationScaling(itkSegmentationLevelSetImageFilterIF3IF3F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetPropagationScaling(self)


    def SetAdvectionScaling(self, v: 'float') -> "void":
        """
        SetAdvectionScaling(itkSegmentationLevelSetImageFilterIF3IF3F self, float v)

        Set/Get the
        scaling of the advection field. Setting the FeatureScaling parameter
        will override any existing value for AdvectionScaling. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetAdvectionScaling(self, v)


    def GetAdvectionScaling(self) -> "float":
        """GetAdvectionScaling(itkSegmentationLevelSetImageFilterIF3IF3F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetAdvectionScaling(self)


    def SetCurvatureScaling(self, v: 'float') -> "void":
        """
        SetCurvatureScaling(itkSegmentationLevelSetImageFilterIF3IF3F self, float v)

        Set/Get the
        scaling of the curvature. Use this parameter to increase the influence
        of curvature on the movement of the surface. Higher values relative to
        Advection and Propagation values will give smoother surfaces. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetCurvatureScaling(self, v)


    def GetCurvatureScaling(self) -> "float":
        """GetCurvatureScaling(itkSegmentationLevelSetImageFilterIF3IF3F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetCurvatureScaling(self)


    def SetUseMinimalCurvature(self, b: 'bool') -> "void":
        """SetUseMinimalCurvature(itkSegmentationLevelSetImageFilterIF3IF3F self, bool b)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetUseMinimalCurvature(self, b)


    def GetUseMinimalCurvature(self) -> "bool":
        """GetUseMinimalCurvature(itkSegmentationLevelSetImageFilterIF3IF3F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetUseMinimalCurvature(self)


    def UseMinimalCurvatureOn(self) -> "void":
        """UseMinimalCurvatureOn(itkSegmentationLevelSetImageFilterIF3IF3F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_UseMinimalCurvatureOn(self)


    def UseMinimalCurvatureOff(self) -> "void":
        """UseMinimalCurvatureOff(itkSegmentationLevelSetImageFilterIF3IF3F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_UseMinimalCurvatureOff(self)


    def SetSegmentationFunction(self, s: 'itkSegmentationLevelSetFunctionIF3IF3') -> "void":
        """
        SetSegmentationFunction(itkSegmentationLevelSetImageFilterIF3IF3F self, itkSegmentationLevelSetFunctionIF3IF3 s)

        Set the
        segmentation function. In general, this should only be called by a
        subclass of this object. It is made public to allow itk::Command
        objects access. The method is inline to avoid a problem with the gcc
        2.95 compiler matching the declaration with the definition. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetSegmentationFunction(self, s)


    def GetSegmentationFunction(self) -> "itkSegmentationLevelSetFunctionIF3IF3 *":
        """GetSegmentationFunction(itkSegmentationLevelSetImageFilterIF3IF3F self) -> itkSegmentationLevelSetFunctionIF3IF3"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetSegmentationFunction(self)


    def SetMaximumCurvatureTimeStep(self, n: 'double') -> "void":
        """
        SetMaximumCurvatureTimeStep(itkSegmentationLevelSetImageFilterIF3IF3F self, double n)

        Set/Get
        the maximum constraint for the curvature term factor in the time step
        calculation. Changing this value from the default is not recommended
        or necessary but could be used to speed up the surface evolution at
        the risk of creating an unstable solution. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetMaximumCurvatureTimeStep(self, n)


    def GetMaximumCurvatureTimeStep(self) -> "double":
        """GetMaximumCurvatureTimeStep(itkSegmentationLevelSetImageFilterIF3IF3F self) -> double"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetMaximumCurvatureTimeStep(self)


    def SetMaximumPropagationTimeStep(self, n: 'double') -> "void":
        """
        SetMaximumPropagationTimeStep(itkSegmentationLevelSetImageFilterIF3IF3F self, double n)

        Set/Get the maximum constraint for the scalar/vector term factor of
        the time step calculation. Changing this value from the default is not
        recommended or necessary but could be used to speed up the surface
        evolution at the risk of creating an unstable solution. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetMaximumPropagationTimeStep(self, n)


    def GetMaximumPropagationTimeStep(self) -> "double":
        """GetMaximumPropagationTimeStep(itkSegmentationLevelSetImageFilterIF3IF3F self) -> double"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetMaximumPropagationTimeStep(self)


    def GenerateSpeedImage(self) -> "void":
        """
        GenerateSpeedImage(itkSegmentationLevelSetImageFilterIF3IF3F self)

        Allocate and
        calculate the speed term image in the SegmentationFunction object.
        This method is called automatically on filter execution unless
        AutoGenerateSpeedAdvection is set to Off. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GenerateSpeedImage(self)


    def GenerateAdvectionImage(self) -> "void":
        """
        GenerateAdvectionImage(itkSegmentationLevelSetImageFilterIF3IF3F self)

        Allocate and
        calculate the advection term image in the SegmentationFunction object
        This method is called automatically on filter execution unless
        AutoGenerateSpeedAdvection is set to Off. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GenerateAdvectionImage(self)

    OutputHasNumericTraitsCheck = _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkSegmentationLevelSetImageFilterPython.delete_itkSegmentationLevelSetImageFilterIF3IF3F

    def cast(obj: 'itkLightObject') -> "itkSegmentationLevelSetImageFilterIF3IF3F *":
        """cast(itkLightObject obj) -> itkSegmentationLevelSetImageFilterIF3IF3F"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSegmentationLevelSetImageFilterIF3IF3F

        Create a new object of the class itkSegmentationLevelSetImageFilterIF3IF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSegmentationLevelSetImageFilterIF3IF3F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSegmentationLevelSetImageFilterIF3IF3F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSegmentationLevelSetImageFilterIF3IF3F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSegmentationLevelSetImageFilterIF3IF3F.SetMaximumIterations = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetMaximumIterations, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetMaximumIterations = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetMaximumIterations, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetFeatureImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetFeatureImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetFeatureImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetFeatureImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetInitialImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetInitialImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetInitialImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetInitialImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetInput2 = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetInput2, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetSpeedImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetAdvectionImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetSpeedImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetAdvectionImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetUseNegativeFeaturesOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetUseNegativeFeaturesOn, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetUseNegativeFeaturesOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetUseNegativeFeaturesOff, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetUseNegativeFeatures = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetUseNegativeFeatures, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetUseNegativeFeatures = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetUseNegativeFeatures, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetReverseExpansionDirection, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetReverseExpansionDirection, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.ReverseExpansionDirectionOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_ReverseExpansionDirectionOn, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.ReverseExpansionDirectionOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_ReverseExpansionDirectionOff, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetAutoGenerateSpeedAdvection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetAutoGenerateSpeedAdvection, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetAutoGenerateSpeedAdvection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetAutoGenerateSpeedAdvection, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.AutoGenerateSpeedAdvectionOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_AutoGenerateSpeedAdvectionOn, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.AutoGenerateSpeedAdvectionOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_AutoGenerateSpeedAdvectionOff, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetFeatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetFeatureScaling, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetPropagationScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetPropagationScaling, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetPropagationScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetPropagationScaling, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetAdvectionScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetAdvectionScaling, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetAdvectionScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetAdvectionScaling, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetCurvatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetCurvatureScaling, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetCurvatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetCurvatureScaling, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetUseMinimalCurvature = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetUseMinimalCurvature, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetUseMinimalCurvature = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetUseMinimalCurvature, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.UseMinimalCurvatureOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_UseMinimalCurvatureOn, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.UseMinimalCurvatureOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_UseMinimalCurvatureOff, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetSegmentationFunction = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetSegmentationFunction, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetSegmentationFunction = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetSegmentationFunction, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetMaximumCurvatureTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetMaximumCurvatureTimeStep, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetMaximumCurvatureTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetMaximumCurvatureTimeStep, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.SetMaximumPropagationTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_SetMaximumPropagationTimeStep, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GetMaximumPropagationTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GetMaximumPropagationTimeStep, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GenerateSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GenerateSpeedImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F.GenerateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_GenerateAdvectionImage, None, itkSegmentationLevelSetImageFilterIF3IF3F)
itkSegmentationLevelSetImageFilterIF3IF3F_swigregister = _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_swigregister
itkSegmentationLevelSetImageFilterIF3IF3F_swigregister(itkSegmentationLevelSetImageFilterIF3IF3F)

def itkSegmentationLevelSetImageFilterIF3IF3F_cast(obj: 'itkLightObject') -> "itkSegmentationLevelSetImageFilterIF3IF3F *":
    """itkSegmentationLevelSetImageFilterIF3IF3F_cast(itkLightObject obj) -> itkSegmentationLevelSetImageFilterIF3IF3F"""
    return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IF3F_cast(obj)

class itkSegmentationLevelSetImageFilterIF3IVF33F(itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3):
    """


    A base class which defines the API for implementing a special class of
    image segmentation filters using level set methods.

    OVERVIEW This object defines the framework for a class of segmentation
    filters which use level set methods. These filters work by
    constructing a "feature image" onto which the evolving level set
    locks as it moves. In the feature image, values that are close to zero
    are associated with object boundaries. An original (or preprocessed)
    image is given to the filter as the feature image and a seed for the
    level set is given as the input of the filter. The seed is converted
    into a level set embedding which propagates according to the features
    calculated from the original image. TEMPLATE PARAMETERS There are two
    required and one optional template parameter for these filters.
    TInputImage is the image type of the initial model you will input to
    the filter using SetInput() or SetInitialImage().

    TFeatureImage is the image type of the image from which the filter
    will calculate the speed term for segmentation (see INPUTS).

    TOutputPixelType is the data type used for the output image phi, the
    implicit level set image. This should really only ever be set as float
    (default) or double.

    INPUTS The input to any subclass of this filter is the seed image for
    the initial level set embedding. As with other subclasses of the
    SparseLevelSetImageFilter, the type of the input image is is not
    important. The (RequestedRegion) size of the seed image must, however,
    match the (RequestedRegion) size of the feature image.  You must
    identify the initial front (surface) in the input image. You do this
    by specifying its isovalue through the method SetIsoSurfaceValue(float
    f). The algorithm will then initialize its solution using the front
    represented by value f. Note that the front is always represented by
    isosurface zero in the output and not the isosurface you specified for
    the input. This is because, for simplicity, the filter will shift your
    input image so that the active front has zero values.

    Depending on the particular application and filter that you are using,
    the feature image should be preprocessed with some type of noise
    reduction filtering. The feature image input can be of any type, but
    it will be cast to floating point before calculations are done.
    OUTPUTS The output of any subclass of this filter is a level set
    embedding as described in SparseFieldLevelSetImageFilter. The zero
    crossings of the output image give the pixels closest to the level set
    boundary. By ITK convention, NEGATIVE values are pixels INSIDE the
    segmented region and POSITIVE values are pixels OUTSIDE the segmented
    region. PARAMETERS The MaximumRMSChange parameter is used to determine
    when the solution has converged. A lower value will result in a
    tighter-fitting solution, but will require more computations. Too low
    a value could put the solver into an infinite loop unless a reasonable
    NumberOfIterations parameter is set. Values should always be greater
    than 0.0 and less than 1.0.

    The NumberOfIterations parameter can be used to halt the solution
    after a specified number of iterations, overriding the
    MaximumRMSChange halting criteria.

    The standard convention for ITK level-set segmentation filters is that
    POSITIVE propagation (speed) and advection terms cause the surface to
    EXPAND while negative terms cause the surface to CONTRACT. When the
    ReverseExpansionDirection parameter is set to TRUE (on), it tells the
    function object to reverse the standard ITK convention so that
    NEGATIVE terms cause EXPANSION and positive terms cause CONTRACTION.
    This parameter can be safely changed as appropriate for a particular
    application or data set to achieve the desired behavior.

    The FeatureScaling parameter controls the magnitude of the features
    calculated for use in the level set propagation and advection speeds.
    This value simply sets both parameters to equal values at once. Some
    filters may only use on of these two terms and this method is a
    generic way to set either or both without having to know which is in
    use.

    The CurvatureScaling parameter controls the magnitude of the curvature
    values which are calculated on the evolving isophote. This is
    important in controlling the relative effect of curvature in the
    calculation. Default value is 1.0. Higher values relative to the other
    level set equation terms (propagation and advection) will give a
    smoother result.

    The PropagationScaling parameter controls the scaling of the scalar
    propagation (speed) term relative to other terms in the level set
    equation. Setting this value will override any value already set by
    FeatureScaling.

    The AdvectionScaling parameter controls the scaling of the vector
    advection field term relative to other terms in the level set
    equation. Setting this value will override any value already set by
    FeatureScaling.

    WARNING:  This is an abstract class. It is not intended to be
    instantiated by itself. Instead, you should use the derived classes.
    This is the reason why the New() operator (itkNewMacro) is missing
    from the class API.

    See LevelSetFunction for more information.

    C++ includes: itkSegmentationLevelSetImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetMaximumIterations(self, i: 'unsigned int') -> "void":
        """
        SetMaximumIterations(itkSegmentationLevelSetImageFilterIF3IVF33F self, unsigned int i)

        Set/Get the
        maximum number of iterations allowed for the solver. This prevents
        infinite loops if a solution "bounces". 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetMaximumIterations(self, i)


    def GetMaximumIterations(self) -> "unsigned int":
        """GetMaximumIterations(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> unsigned int"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetMaximumIterations(self)


    def SetFeatureImage(self, f: 'itkImageVF33') -> "void":
        """
        SetFeatureImage(itkSegmentationLevelSetImageFilterIF3IVF33F self, itkImageVF33 f)

        Set/Get the feature
        image to be used for speed function of the level set equation.
        Equivalent to calling Set/GetInput(1, ..) 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetFeatureImage(self, f)


    def GetFeatureImage(self) -> "itkImageVF33 const *":
        """GetFeatureImage(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> itkImageVF33"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetFeatureImage(self)


    def SetInitialImage(self, _arg: 'itkImageF3') -> "void":
        """SetInitialImage(itkSegmentationLevelSetImageFilterIF3IVF33F self, itkImageF3 _arg)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetInitialImage(self, _arg)


    def GetInitialImage(self) -> "itkImageF3 const *":
        """GetInitialImage(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> itkImageF3"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetInitialImage(self)


    def SetInput2(self, input: 'itkImageVF33') -> "void":
        """
        SetInput2(itkSegmentationLevelSetImageFilterIF3IVF33F self, itkImageVF33 input)

        Set the feature image 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetInput2(self, input)


    def SetSpeedImage(self, s: 'itkImageF3') -> "void":
        """
        SetSpeedImage(itkSegmentationLevelSetImageFilterIF3IVF33F self, itkImageF3 s)

        This function is for
        advanced applications. Set the image sampled as the speed term of this
        segmentation method. In general, the speed image is generated
        automatically by a subclass of this filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetSpeedImage(self, s)


    def SetAdvectionImage(self, v: 'itkImageFAF33') -> "void":
        """
        SetAdvectionImage(itkSegmentationLevelSetImageFilterIF3IVF33F self, itkImageFAF33 v)

        This function is
        for advanced applications. Set the image sampled as the advection term
        of this segmentation method. In general, the advection image is
        generated automatically by a subclass of this filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetAdvectionImage(self, v)


    def GetSpeedImage(self) -> "itkImageF3 const *":
        """
        GetSpeedImage(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> itkImageF3

        Return a pointer to
        the image sampled as the speed term of the segmentation algorithm. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetSpeedImage(self)


    def GetAdvectionImage(self) -> "itkImageFAF33 const *":
        """
        GetAdvectionImage(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> itkImageFAF33

        Return a pointer
        to the image sampled as the advection term of the segmentation
        algorithm. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetAdvectionImage(self)


    def SetUseNegativeFeaturesOn(self) -> "void":
        """
        SetUseNegativeFeaturesOn(itkSegmentationLevelSetImageFilterIF3IVF33F self)

        THIS
        METHOD IS DEPRECATED AND SHOULD NOT BE USED. This method reverses the
        speed function direction, effectively changing inside feature values
        to outside feature values and vice versa. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetUseNegativeFeaturesOn(self)


    def SetUseNegativeFeaturesOff(self) -> "void":
        """SetUseNegativeFeaturesOff(itkSegmentationLevelSetImageFilterIF3IVF33F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetUseNegativeFeaturesOff(self)


    def SetUseNegativeFeatures(self, u: 'bool') -> "void":
        """
        SetUseNegativeFeatures(itkSegmentationLevelSetImageFilterIF3IVF33F self, bool u)

        THIS METHOD
        IS DEPRECATED AND SHOULD NOT BE USED. Set/Get the value of the
        UseNegativeFeatures flag. This method is deprecated. Use Set/Get
        ReverseExpansionDirection instead. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetUseNegativeFeatures(self, u)


    def GetUseNegativeFeatures(self) -> "bool":
        """GetUseNegativeFeatures(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetUseNegativeFeatures(self)


    def SetReverseExpansionDirection(self, _arg: 'bool const') -> "void":
        """
        SetReverseExpansionDirection(itkSegmentationLevelSetImageFilterIF3IVF33F self, bool const _arg)

        Turn
        On/Off the flag which determines whether Positive or Negative speed
        terms will cause surface expansion. If set to TRUE then negative speed
        terms will cause the surface to expand and positive speed terms will
        cause the surface to contract. If set to FALSE (default) then positive
        speed terms will cause the surface to expand and negative speed terms
        will cause the surface to contract. This method can be safely used to
        reverse the expansion/contraction as appropriate to a particular
        application or data set. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetReverseExpansionDirection(self, _arg)


    def GetReverseExpansionDirection(self) -> "bool":
        """GetReverseExpansionDirection(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetReverseExpansionDirection(self)


    def ReverseExpansionDirectionOn(self) -> "void":
        """ReverseExpansionDirectionOn(itkSegmentationLevelSetImageFilterIF3IVF33F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_ReverseExpansionDirectionOn(self)


    def ReverseExpansionDirectionOff(self) -> "void":
        """ReverseExpansionDirectionOff(itkSegmentationLevelSetImageFilterIF3IVF33F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_ReverseExpansionDirectionOff(self)


    def SetAutoGenerateSpeedAdvection(self, _arg: 'bool const') -> "void":
        """
        SetAutoGenerateSpeedAdvection(itkSegmentationLevelSetImageFilterIF3IVF33F self, bool const _arg)

        Turn
        On/Off automatic generation of Speed and Advection terms when Update
        is called. If set to Off, the Speed and Advection images must be set
        explicitly using SetSpeedImage, SetAdvectionImage OR the methods
        GenerateSpeedImage() and GenerateAdvectionImage() should be called
        prior to updating the filter. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetAutoGenerateSpeedAdvection(self, _arg)


    def GetAutoGenerateSpeedAdvection(self) -> "bool":
        """GetAutoGenerateSpeedAdvection(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetAutoGenerateSpeedAdvection(self)


    def AutoGenerateSpeedAdvectionOn(self) -> "void":
        """AutoGenerateSpeedAdvectionOn(itkSegmentationLevelSetImageFilterIF3IVF33F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_AutoGenerateSpeedAdvectionOn(self)


    def AutoGenerateSpeedAdvectionOff(self) -> "void":
        """AutoGenerateSpeedAdvectionOff(itkSegmentationLevelSetImageFilterIF3IVF33F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_AutoGenerateSpeedAdvectionOff(self)


    def SetFeatureScaling(self, v: 'float') -> "void":
        """
        SetFeatureScaling(itkSegmentationLevelSetImageFilterIF3IVF33F self, float v)

        Combined scaling
        of the propagation and advection speed terms. You should use either
        this -or- Get/SetPropagationScaling and Get/SetAdvectionScaling (if
        appropriate). See subclasses for details on when and whether to set
        these parameters. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetFeatureScaling(self, v)


    def SetPropagationScaling(self, v: 'float') -> "void":
        """
        SetPropagationScaling(itkSegmentationLevelSetImageFilterIF3IVF33F self, float v)

        Set/Get the
        scaling of the propagation speed. Setting the FeatureScaling parameter
        overrides any previous values set for PropagationScaling. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetPropagationScaling(self, v)


    def GetPropagationScaling(self) -> "float":
        """GetPropagationScaling(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetPropagationScaling(self)


    def SetAdvectionScaling(self, v: 'float') -> "void":
        """
        SetAdvectionScaling(itkSegmentationLevelSetImageFilterIF3IVF33F self, float v)

        Set/Get the
        scaling of the advection field. Setting the FeatureScaling parameter
        will override any existing value for AdvectionScaling. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetAdvectionScaling(self, v)


    def GetAdvectionScaling(self) -> "float":
        """GetAdvectionScaling(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetAdvectionScaling(self)


    def SetCurvatureScaling(self, v: 'float') -> "void":
        """
        SetCurvatureScaling(itkSegmentationLevelSetImageFilterIF3IVF33F self, float v)

        Set/Get the
        scaling of the curvature. Use this parameter to increase the influence
        of curvature on the movement of the surface. Higher values relative to
        Advection and Propagation values will give smoother surfaces. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetCurvatureScaling(self, v)


    def GetCurvatureScaling(self) -> "float":
        """GetCurvatureScaling(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> float"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetCurvatureScaling(self)


    def SetUseMinimalCurvature(self, b: 'bool') -> "void":
        """SetUseMinimalCurvature(itkSegmentationLevelSetImageFilterIF3IVF33F self, bool b)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetUseMinimalCurvature(self, b)


    def GetUseMinimalCurvature(self) -> "bool":
        """GetUseMinimalCurvature(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> bool"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetUseMinimalCurvature(self)


    def UseMinimalCurvatureOn(self) -> "void":
        """UseMinimalCurvatureOn(itkSegmentationLevelSetImageFilterIF3IVF33F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_UseMinimalCurvatureOn(self)


    def UseMinimalCurvatureOff(self) -> "void":
        """UseMinimalCurvatureOff(itkSegmentationLevelSetImageFilterIF3IVF33F self)"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_UseMinimalCurvatureOff(self)


    def SetSegmentationFunction(self, s: 'itk::SegmentationLevelSetFunction< itk::Image< float,3 >,itk::Image< itk::Vector< float,3 >,3 > > *') -> "void":
        """
        SetSegmentationFunction(itkSegmentationLevelSetImageFilterIF3IVF33F self, itk::SegmentationLevelSetFunction< itk::Image< float,3 >,itk::Image< itk::Vector< float,3 >,3 > > * s)

        Set the
        segmentation function. In general, this should only be called by a
        subclass of this object. It is made public to allow itk::Command
        objects access. The method is inline to avoid a problem with the gcc
        2.95 compiler matching the declaration with the definition. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetSegmentationFunction(self, s)


    def GetSegmentationFunction(self) -> "itk::SegmentationLevelSetFunction< itk::Image< float,3 >,itk::Image< itk::Vector< float,3 >,3 > > *":
        """GetSegmentationFunction(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> itk::SegmentationLevelSetFunction< itk::Image< float,3 >,itk::Image< itk::Vector< float,3 >,3 > > *"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetSegmentationFunction(self)


    def SetMaximumCurvatureTimeStep(self, n: 'double') -> "void":
        """
        SetMaximumCurvatureTimeStep(itkSegmentationLevelSetImageFilterIF3IVF33F self, double n)

        Set/Get
        the maximum constraint for the curvature term factor in the time step
        calculation. Changing this value from the default is not recommended
        or necessary but could be used to speed up the surface evolution at
        the risk of creating an unstable solution. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetMaximumCurvatureTimeStep(self, n)


    def GetMaximumCurvatureTimeStep(self) -> "double":
        """GetMaximumCurvatureTimeStep(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> double"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetMaximumCurvatureTimeStep(self)


    def SetMaximumPropagationTimeStep(self, n: 'double') -> "void":
        """
        SetMaximumPropagationTimeStep(itkSegmentationLevelSetImageFilterIF3IVF33F self, double n)

        Set/Get the maximum constraint for the scalar/vector term factor of
        the time step calculation. Changing this value from the default is not
        recommended or necessary but could be used to speed up the surface
        evolution at the risk of creating an unstable solution. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetMaximumPropagationTimeStep(self, n)


    def GetMaximumPropagationTimeStep(self) -> "double":
        """GetMaximumPropagationTimeStep(itkSegmentationLevelSetImageFilterIF3IVF33F self) -> double"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetMaximumPropagationTimeStep(self)


    def GenerateSpeedImage(self) -> "void":
        """
        GenerateSpeedImage(itkSegmentationLevelSetImageFilterIF3IVF33F self)

        Allocate and
        calculate the speed term image in the SegmentationFunction object.
        This method is called automatically on filter execution unless
        AutoGenerateSpeedAdvection is set to Off. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GenerateSpeedImage(self)


    def GenerateAdvectionImage(self) -> "void":
        """
        GenerateAdvectionImage(itkSegmentationLevelSetImageFilterIF3IVF33F self)

        Allocate and
        calculate the advection term image in the SegmentationFunction object
        This method is called automatically on filter execution unless
        AutoGenerateSpeedAdvection is set to Off. 
        """
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GenerateAdvectionImage(self)

    OutputHasNumericTraitsCheck = _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_OutputHasNumericTraitsCheck
    __swig_destroy__ = _itkSegmentationLevelSetImageFilterPython.delete_itkSegmentationLevelSetImageFilterIF3IVF33F

    def cast(obj: 'itkLightObject') -> "itkSegmentationLevelSetImageFilterIF3IVF33F *":
        """cast(itkLightObject obj) -> itkSegmentationLevelSetImageFilterIF3IVF33F"""
        return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkSegmentationLevelSetImageFilterIF3IVF33F

        Create a new object of the class itkSegmentationLevelSetImageFilterIF3IVF33F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSegmentationLevelSetImageFilterIF3IVF33F.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkSegmentationLevelSetImageFilterIF3IVF33F.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkSegmentationLevelSetImageFilterIF3IVF33F.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkSegmentationLevelSetImageFilterIF3IVF33F.SetMaximumIterations = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetMaximumIterations, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetMaximumIterations = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetMaximumIterations, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetFeatureImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetFeatureImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetFeatureImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetFeatureImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetInitialImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetInitialImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetInitialImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetInitialImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetInput2 = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetInput2, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetSpeedImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetAdvectionImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetSpeedImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetAdvectionImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetUseNegativeFeaturesOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetUseNegativeFeaturesOn, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetUseNegativeFeaturesOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetUseNegativeFeaturesOff, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetUseNegativeFeatures = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetUseNegativeFeatures, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetUseNegativeFeatures = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetUseNegativeFeatures, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetReverseExpansionDirection, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetReverseExpansionDirection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetReverseExpansionDirection, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.ReverseExpansionDirectionOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_ReverseExpansionDirectionOn, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.ReverseExpansionDirectionOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_ReverseExpansionDirectionOff, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetAutoGenerateSpeedAdvection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetAutoGenerateSpeedAdvection, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetAutoGenerateSpeedAdvection = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetAutoGenerateSpeedAdvection, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.AutoGenerateSpeedAdvectionOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_AutoGenerateSpeedAdvectionOn, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.AutoGenerateSpeedAdvectionOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_AutoGenerateSpeedAdvectionOff, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetFeatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetFeatureScaling, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetPropagationScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetPropagationScaling, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetPropagationScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetPropagationScaling, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetAdvectionScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetAdvectionScaling, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetAdvectionScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetAdvectionScaling, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetCurvatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetCurvatureScaling, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetCurvatureScaling = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetCurvatureScaling, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetUseMinimalCurvature = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetUseMinimalCurvature, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetUseMinimalCurvature = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetUseMinimalCurvature, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.UseMinimalCurvatureOn = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_UseMinimalCurvatureOn, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.UseMinimalCurvatureOff = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_UseMinimalCurvatureOff, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetSegmentationFunction = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetSegmentationFunction, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetSegmentationFunction = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetSegmentationFunction, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetMaximumCurvatureTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetMaximumCurvatureTimeStep, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetMaximumCurvatureTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetMaximumCurvatureTimeStep, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.SetMaximumPropagationTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_SetMaximumPropagationTimeStep, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GetMaximumPropagationTimeStep = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GetMaximumPropagationTimeStep, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GenerateSpeedImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GenerateSpeedImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F.GenerateAdvectionImage = new_instancemethod(_itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_GenerateAdvectionImage, None, itkSegmentationLevelSetImageFilterIF3IVF33F)
itkSegmentationLevelSetImageFilterIF3IVF33F_swigregister = _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_swigregister
itkSegmentationLevelSetImageFilterIF3IVF33F_swigregister(itkSegmentationLevelSetImageFilterIF3IVF33F)

def itkSegmentationLevelSetImageFilterIF3IVF33F_cast(obj: 'itkLightObject') -> "itkSegmentationLevelSetImageFilterIF3IVF33F *":
    """itkSegmentationLevelSetImageFilterIF3IVF33F_cast(itkLightObject obj) -> itkSegmentationLevelSetImageFilterIF3IVF33F"""
    return _itkSegmentationLevelSetImageFilterPython.itkSegmentationLevelSetImageFilterIF3IVF33F_cast(obj)


def segmentation_level_set_image_filter(*args, **kwargs):
    """Procedural interface for SegmentationLevelSetImageFilter"""
    import itk
    instance = itk.SegmentationLevelSetImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def segmentation_level_set_image_filter_init_docstring():
    import itk
    import itkTemplate
    if isinstance(itk.SegmentationLevelSetImageFilter, itkTemplate.itkTemplate):
        segmentation_level_set_image_filter.__doc__ = itk.SegmentationLevelSetImageFilter.values()[0].__doc__
    else:
        segmentation_level_set_image_filter.__doc__ = itk.SegmentationLevelSetImageFilter.__doc__




