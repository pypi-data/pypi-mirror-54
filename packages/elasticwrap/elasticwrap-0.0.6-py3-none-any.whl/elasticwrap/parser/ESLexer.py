# Generated from ES.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\31")
        buf.write("\u0127\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3")
        buf.write("\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5")
        buf.write("\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3")
        buf.write("\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b")
        buf.write("\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13")
        buf.write("\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f")
        buf.write("\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20")
        buf.write("\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\5\22\u00df\n\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\5")
        buf.write("\22\u00e8\n\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\5\22\u00f3\n\22\3\22\3\22\3\22\5\22\u00f8\n\22\3")
        buf.write("\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\5\23")
        buf.write("\u0104\n\23\3\23\3\23\3\24\7\24\u0109\n\24\f\24\16\24")
        buf.write("\u010c\13\24\3\25\7\25\u010f\n\25\f\25\16\25\u0112\13")
        buf.write("\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\5\26")
        buf.write("\u011d\n\26\3\27\3\27\3\30\6\30\u0122\n\30\r\30\16\30")
        buf.write("\u0123\3\30\3\30\2\2\31\3\3\5\4\7\5\t\6\13\7\r\b\17\t")
        buf.write("\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\3\2\5\16\2\"\"\60\60\62;C\\")
        buf.write("aac|\u00e3\u00e3\u00eb\u00eb\u00ef\u00ef\u00f3\u00f3\u00f5")
        buf.write("\u00f5\u00fc\u00fc\16\2\"\"..\61;C\\aac|\u00e3\u00e3\u00eb")
        buf.write("\u00eb\u00ef\u00ef\u00f3\u00f3\u00f5\u00f5\u00fc\u00fc")
        buf.write("\5\2\13\f\17\17\"\"\2\u012f\2\3\3\2\2\2\2\5\3\2\2\2\2")
        buf.write("\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3")
        buf.write("\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2")
        buf.write("\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2")
        buf.write("\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2")
        buf.write("\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\3\61\3\2\2\2\5;")
        buf.write("\3\2\2\2\7>\3\2\2\2\t@\3\2\2\2\13M\3\2\2\2\rO\3\2\2\2")
        buf.write("\17]\3\2\2\2\21h\3\2\2\2\23t\3\2\2\2\25}\3\2\2\2\27\u0087")
        buf.write("\3\2\2\2\31\u0092\3\2\2\2\33\u00a2\3\2\2\2\35\u00ae\3")
        buf.write("\2\2\2\37\u00b9\3\2\2\2!\u00c3\3\2\2\2#\u00f7\3\2\2\2")
        buf.write("%\u00f9\3\2\2\2\'\u010a\3\2\2\2)\u0110\3\2\2\2+\u011c")
        buf.write("\3\2\2\2-\u011e\3\2\2\2/\u0121\3\2\2\2\61\62\7}\2\2\62")
        buf.write("\63\7$\2\2\63\64\7d\2\2\64\65\7q\2\2\65\66\7q\2\2\66\67")
        buf.write("\7n\2\2\678\7$\2\289\7<\2\29:\7}\2\2:\4\3\2\2\2;<\7\177")
        buf.write("\2\2<=\7\177\2\2=\6\3\2\2\2>?\7.\2\2?\b\3\2\2\2@A\7$\2")
        buf.write("\2AB\7o\2\2BC\7w\2\2CD\7u\2\2DE\7v\2\2EF\7a\2\2FG\7p\2")
        buf.write("\2GH\7q\2\2HI\7v\2\2IJ\7$\2\2JK\7<\2\2KL\7]\2\2L\n\3\2")
        buf.write("\2\2MN\7_\2\2N\f\3\2\2\2OP\7$\2\2PQ\7o\2\2QR\7w\2\2RS")
        buf.write("\7u\2\2ST\7v\2\2TU\7a\2\2UV\7p\2\2VW\7q\2\2WX\7v\2\2X")
        buf.write("Y\7$\2\2YZ\7<\2\2Z[\7]\2\2[\\\7_\2\2\\\16\3\2\2\2]^\7")
        buf.write("$\2\2^_\7u\2\2_`\7j\2\2`a\7q\2\2ab\7w\2\2bc\7n\2\2cd\7")
        buf.write("f\2\2de\7$\2\2ef\7<\2\2fg\7]\2\2g\20\3\2\2\2hi\7$\2\2")
        buf.write("ij\7u\2\2jk\7j\2\2kl\7q\2\2lm\7w\2\2mn\7n\2\2no\7f\2\2")
        buf.write("op\7$\2\2pq\7<\2\2qr\7]\2\2rs\7_\2\2s\22\3\2\2\2tu\7$")
        buf.write("\2\2uv\7o\2\2vw\7w\2\2wx\7u\2\2xy\7v\2\2yz\7$\2\2z{\7")
        buf.write("<\2\2{|\7]\2\2|\24\3\2\2\2}~\7$\2\2~\177\7o\2\2\177\u0080")
        buf.write("\7w\2\2\u0080\u0081\7u\2\2\u0081\u0082\7v\2\2\u0082\u0083")
        buf.write("\7$\2\2\u0083\u0084\7<\2\2\u0084\u0085\7]\2\2\u0085\u0086")
        buf.write("\7_\2\2\u0086\26\3\2\2\2\u0087\u0088\7}\2\2\u0088\u0089")
        buf.write("\7$\2\2\u0089\u008a\7o\2\2\u008a\u008b\7c\2\2\u008b\u008c")
        buf.write("\7v\2\2\u008c\u008d\7e\2\2\u008d\u008e\7j\2\2\u008e\u008f")
        buf.write("\7$\2\2\u008f\u0090\7<\2\2\u0090\u0091\7}\2\2\u0091\30")
        buf.write("\3\2\2\2\u0092\u0093\7}\2\2\u0093\u0094\7$\2\2\u0094\u0095")
        buf.write("\7p\2\2\u0095\u0096\7q\2\2\u0096\u0097\7v\2\2\u0097\u0098")
        buf.write("\7a\2\2\u0098\u0099\7g\2\2\u0099\u009a\7z\2\2\u009a\u009b")
        buf.write("\7k\2\2\u009b\u009c\7u\2\2\u009c\u009d\7v\2\2\u009d\u009e")
        buf.write("\7u\2\2\u009e\u009f\7$\2\2\u009f\u00a0\7<\2\2\u00a0\u00a1")
        buf.write("\7}\2\2\u00a1\32\3\2\2\2\u00a2\u00a3\7}\2\2\u00a3\u00a4")
        buf.write("\7$\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7z\2\2\u00a6\u00a7")
        buf.write("\7k\2\2\u00a7\u00a8\7u\2\2\u00a8\u00a9\7v\2\2\u00a9\u00aa")
        buf.write("\7u\2\2\u00aa\u00ab\7$\2\2\u00ab\u00ac\7<\2\2\u00ac\u00ad")
        buf.write("\7}\2\2\u00ad\34\3\2\2\2\u00ae\u00af\7}\2\2\u00af\u00b0")
        buf.write("\7$\2\2\u00b0\u00b1\7t\2\2\u00b1\u00b2\7c\2\2\u00b2\u00b3")
        buf.write("\7p\2\2\u00b3\u00b4\7i\2\2\u00b4\u00b5\7g\2\2\u00b5\u00b6")
        buf.write("\7$\2\2\u00b6\u00b7\7<\2\2\u00b7\u00b8\7}\2\2\u00b8\36")
        buf.write("\3\2\2\2\u00b9\u00ba\7}\2\2\u00ba\u00bb\7$\2\2\u00bb\u00bc")
        buf.write("\7v\2\2\u00bc\u00bd\7g\2\2\u00bd\u00be\7t\2\2\u00be\u00bf")
        buf.write("\7o\2\2\u00bf\u00c0\7$\2\2\u00c0\u00c1\7<\2\2\u00c1\u00c2")
        buf.write("\7}\2\2\u00c2 \3\2\2\2\u00c3\u00c4\7}\2\2\u00c4\u00c5")
        buf.write("\7$\2\2\u00c5\u00c6\7s\2\2\u00c6\u00c7\7w\2\2\u00c7\u00c8")
        buf.write("\7g\2\2\u00c8\u00c9\7t\2\2\u00c9\u00ca\7{\2\2\u00ca\u00cb")
        buf.write("\7a\2\2\u00cb\u00cc\7u\2\2\u00cc\u00cd\7v\2\2\u00cd\u00ce")
        buf.write("\7t\2\2\u00ce\u00cf\7k\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1")
        buf.write("\7i\2\2\u00d1\u00d2\7$\2\2\u00d2\u00d3\7<\2\2\u00d3\u00d4")
        buf.write("\7}\2\2\u00d4\"\3\2\2\2\u00d5\u00d6\7$\2\2\u00d6\u00d7")
        buf.write("\5\'\24\2\u00d7\u00d8\7$\2\2\u00d8\u00de\5-\27\2\u00d9")
        buf.write("\u00da\7$\2\2\u00da\u00db\5)\25\2\u00db\u00dc\7$\2\2\u00dc")
        buf.write("\u00df\3\2\2\2\u00dd\u00df\5+\26\2\u00de\u00d9\3\2\2\2")
        buf.write("\u00de\u00dd\3\2\2\2\u00df\u00e8\3\2\2\2\u00e0\u00e1\7")
        buf.write("$\2\2\u00e1\u00e2\5\'\24\2\u00e2\u00e3\7$\2\2\u00e3\u00e4")
        buf.write("\7<\2\2\u00e4\u00e5\3\2\2\2\u00e5\u00e6\5%\23\2\u00e6")
        buf.write("\u00e8\3\2\2\2\u00e7\u00d5\3\2\2\2\u00e7\u00e0\3\2\2\2")
        buf.write("\u00e8\u00f8\3\2\2\2\u00e9\u00ea\7$\2\2\u00ea\u00eb\5")
        buf.write("\'\24\2\u00eb\u00ec\7$\2\2\u00ec\u00f2\5-\27\2\u00ed\u00ee")
        buf.write("\7$\2\2\u00ee\u00ef\5)\25\2\u00ef\u00f0\7$\2\2\u00f0\u00f3")
        buf.write("\3\2\2\2\u00f1\u00f3\5+\26\2\u00f2\u00ed\3\2\2\2\u00f2")
        buf.write("\u00f1\3\2\2\2\u00f3\u00f4\3\2\2\2\u00f4\u00f5\7.\2\2")
        buf.write("\u00f5\u00f6\5#\22\2\u00f6\u00f8\3\2\2\2\u00f7\u00e7\3")
        buf.write("\2\2\2\u00f7\u00e9\3\2\2\2\u00f8$\3\2\2\2\u00f9\u00fa")
        buf.write("\7}\2\2\u00fa\u00fb\7$\2\2\u00fb\u00fc\5\'\24\2\u00fc")
        buf.write("\u00fd\7$\2\2\u00fd\u0103\5-\27\2\u00fe\u00ff\7$\2\2\u00ff")
        buf.write("\u0100\5)\25\2\u0100\u0101\7$\2\2\u0101\u0104\3\2\2\2")
        buf.write("\u0102\u0104\5+\26\2\u0103\u00fe\3\2\2\2\u0103\u0102\3")
        buf.write("\2\2\2\u0104\u0105\3\2\2\2\u0105\u0106\7\177\2\2\u0106")
        buf.write("&\3\2\2\2\u0107\u0109\t\2\2\2\u0108\u0107\3\2\2\2\u0109")
        buf.write("\u010c\3\2\2\2\u010a\u0108\3\2\2\2\u010a\u010b\3\2\2\2")
        buf.write("\u010b(\3\2\2\2\u010c\u010a\3\2\2\2\u010d\u010f\t\3\2")
        buf.write("\2\u010e\u010d\3\2\2\2\u010f\u0112\3\2\2\2\u0110\u010e")
        buf.write("\3\2\2\2\u0110\u0111\3\2\2\2\u0111*\3\2\2\2\u0112\u0110")
        buf.write("\3\2\2\2\u0113\u0114\7v\2\2\u0114\u0115\7t\2\2\u0115\u0116")
        buf.write("\7w\2\2\u0116\u011d\7g\2\2\u0117\u0118\7h\2\2\u0118\u0119")
        buf.write("\7c\2\2\u0119\u011a\7n\2\2\u011a\u011b\7u\2\2\u011b\u011d")
        buf.write("\7g\2\2\u011c\u0113\3\2\2\2\u011c\u0117\3\2\2\2\u011d")
        buf.write(",\3\2\2\2\u011e\u011f\7<\2\2\u011f.\3\2\2\2\u0120\u0122")
        buf.write("\t\4\2\2\u0121\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123")
        buf.write("\u0121\3\2\2\2\u0123\u0124\3\2\2\2\u0124\u0125\3\2\2\2")
        buf.write("\u0125\u0126\b\30\2\2\u0126\60\3\2\2\2\f\2\u00de\u00e7")
        buf.write("\u00f2\u00f7\u0103\u010a\u0110\u011c\u0123\3\b\2\2")
        return buf.getvalue()


class ESLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    KVPAIR = 17
    DICT = 18
    KEY = 19
    VALUE = 20
    BOOLEAN = 21
    EQ = 22
    WS = 23

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'{\"bool\":{'", "'}}'", "','", "'\"must_not\":['", "']'", "'\"must_not\":[]'", 
            "'\"should\":['", "'\"should\":[]'", "'\"must\":['", "'\"must\":[]'", 
            "'{\"match\":{'", "'{\"not_exists\":{'", "'{\"exists\":{'", 
            "'{\"range\":{'", "'{\"term\":{'", "'{\"query_string\":{'", 
            "':'" ]

    symbolicNames = [ "<INVALID>",
            "KVPAIR", "DICT", "KEY", "VALUE", "BOOLEAN", "EQ", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "KVPAIR", "DICT", "KEY", "VALUE", "BOOLEAN", 
                  "EQ", "WS" ]

    grammarFileName = "ES.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


