# coding: utf-8

"""
    Limestone Networks API

    LSN API Documentation  # noqa: E501

    The version of the OpenAPI document: 2.0.0
    Contact: support@limestonenetworks.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class JobStatus(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'created_at': 'str',
        'update_time': 'str',
        'status': 'str',
        'job_identifier': 'str',
        'metadata': 'list[Metadata]'
    }

    attribute_map = {
        'created_at': 'created_at',
        'update_time': 'update_time',
        'status': 'status',
        'job_identifier': 'job_identifier',
        'metadata': 'metadata'
    }

    def __init__(self, created_at=None, update_time=None, status=None, job_identifier=None, metadata=None):  # noqa: E501
        """JobStatus - a model defined in OpenAPI"""  # noqa: E501

        self._created_at = None
        self._update_time = None
        self._status = None
        self._job_identifier = None
        self._metadata = None
        self.discriminator = None

        if created_at is not None:
            self.created_at = created_at
        if update_time is not None:
            self.update_time = update_time
        if status is not None:
            self.status = status
        if job_identifier is not None:
            self.job_identifier = job_identifier
        if metadata is not None:
            self.metadata = metadata

    @property
    def created_at(self):
        """Gets the created_at of this JobStatus.  # noqa: E501

        The create time of this update  # noqa: E501

        :return: The created_at of this JobStatus.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this JobStatus.

        The create time of this update  # noqa: E501

        :param created_at: The created_at of this JobStatus.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def update_time(self):
        """Gets the update_time of this JobStatus.  # noqa: E501

        The update time of this update  # noqa: E501

        :return: The update_time of this JobStatus.  # noqa: E501
        :rtype: str
        """
        return self._update_time

    @update_time.setter
    def update_time(self, update_time):
        """Sets the update_time of this JobStatus.

        The update time of this update  # noqa: E501

        :param update_time: The update_time of this JobStatus.  # noqa: E501
        :type: str
        """

        self._update_time = update_time

    @property
    def status(self):
        """Gets the status of this JobStatus.  # noqa: E501

        The status of this update  # noqa: E501

        :return: The status of this JobStatus.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this JobStatus.

        The status of this update  # noqa: E501

        :param status: The status of this JobStatus.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def job_identifier(self):
        """Gets the job_identifier of this JobStatus.  # noqa: E501

        The unique identifier of this update  # noqa: E501

        :return: The job_identifier of this JobStatus.  # noqa: E501
        :rtype: str
        """
        return self._job_identifier

    @job_identifier.setter
    def job_identifier(self, job_identifier):
        """Sets the job_identifier of this JobStatus.

        The unique identifier of this update  # noqa: E501

        :param job_identifier: The job_identifier of this JobStatus.  # noqa: E501
        :type: str
        """

        self._job_identifier = job_identifier

    @property
    def metadata(self):
        """Gets the metadata of this JobStatus.  # noqa: E501


        :return: The metadata of this JobStatus.  # noqa: E501
        :rtype: list[Metadata]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this JobStatus.


        :param metadata: The metadata of this JobStatus.  # noqa: E501
        :type: list[Metadata]
        """

        self._metadata = metadata

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, JobStatus):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
