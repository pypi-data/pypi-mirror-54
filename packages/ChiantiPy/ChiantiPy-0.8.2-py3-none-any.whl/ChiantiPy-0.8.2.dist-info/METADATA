Metadata-Version: 2.0
Name: ChiantiPy
Version: 0.8.2
Summary: a Python interface to the CHIANTI atomic database for astrophysical spectroscopy
Home-page: https://github.com/chianti-atomic/ChiantiPy
Author: Ken Dere
Author-email: kdere@gmu.edu
License: ISC
Description-Content-Type: UNKNOWN
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: ISC License (ISCL)
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering :: Astronomy
Classifier: Topic :: Scientific/Engineering :: Physics

ChiantiPy - this version is only a release candidate for the next version of CHIANTI
====================================================================================


ChiantiPy is the Python interface to the `CHIANTI atomic
database <http://www.chiantidatabase.org>`__ for astrophysical
spectroscopy. It provides the capability to calculate the emission line
and continuum spectrum of an optically thin plasma based on the data in
the CHIANTI database.

What is CHIANTI?
----------------

CHIANTI provides a database of atomic data that can be used to interpret
the emission of spectral lines and continuua emitted from
high-temperature, optically-thin astrophysical sources.

Installation
------------

The following dependencies are required to run ChiantiPy,

-  `Python <https://www.python.org/>`__ (Python 3 is now required as of version 0.8.0)
-  `Numpy <http://www.numpy.org/>`__
-  `Scipy <https://www.scipy.org/>`__
-  `Matplotlib <http://matplotlib.org/>`__
-  `ipyparallel <https://github.com/ipython/ipyparallel>`__

The following two are extremely useful for running Python programs

-  `IPython <http://ipython.org>`__
-  `Jupyter <http://jupyter.org/>`__

Optionally, if you'd like to use the GUI interfaces,

-  `PyQt5 <https://riverbankcomputing.com/software/pyqt/intro>`

If you are not familiar with installing Python and the needed
dependencies, we recommend the `Anaconda
platform <https://www.continuum.io/downloads>`__. Next, download the
`CHIANTI
database <http://www.chiantidatabase.org/chianti_download.html>`__.
Assuming you've placed the CHIANTI tree in ``$HOME``, set the
environment variable in your ``.bashrc`` file,

.. code:: shell

    export XUVTOP=$HOME/chianti/dbase

Finally, clone and install the source from GitHub,

.. code:: shell

    $ git clone --recursive https://github.com/chianti-atomic/ChiantiPy.git
    $ cd ChiantiPy
    $ python setup.py install

Usage
-----

As a quick example, we'll calculate the populations of the top 10 levels
of Fe XIV as a function of temperature at constant density and plot
them:

.. code:: python

    >>> import ChiantiPy.core as ch
    >>> import numpy as np
    >>> import matplotlib.pyplot as plt
    >>> temperature = np.logspace(5.8,6.8,21)
    >>> fe14 = ch.ion('fe_14',temperature=temperature,eDensity=1.e+9,em=1.e+27)
    >>> fe14.popPlot()
    >>> plt.show()

Help
----

For more information about installing and using either ChiantiPy or the
CHIANTI atomic database, check out the following links:

-  `ChiantiPy Documentation <http://chianti-atomic.github.io/>`__
-  `Chianti Google Mailing List <https://groups.google.com/forum/#!forum/chianti>`__
-  `CHIANTI Atomic Database Webpage <http://www.chiantidatabase.org/>`__




