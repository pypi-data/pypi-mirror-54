# coding: utf-8

"""
    

        # noqa: E501

    The version of the OpenAPI document: 
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import rebrickable.api
from rebrickable.api.api.users_api import UsersApi  # noqa: E501
from rebrickable.api.rest import ApiException


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    def setUp(self):
        self.api = rebrickable.api.api.users_api.UsersApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_users_allparts_list(self):
        """Test case for users_allparts_list

        Get a list of all the Parts in all the user's Part Lists as well as the Parts inside Sets in the user's Set Lists.  # noqa: E501
        """
        pass

    def test_users_badges_list(self):
        """Test case for users_badges_list

        Get a list of all the available Badges  # noqa: E501
        """
        pass

    def test_users_badges_read(self):
        """Test case for users_badges_read

        Get details about a specific Badge  # noqa: E501
        """
        pass

    def test_users_build_read(self):
        """Test case for users_build_read

        Find out how many parts the user needs to build the specified Set.  # noqa: E501
        """
        pass

    def test_users_lost_parts_create(self):
        """Test case for users_lost_parts_create

        Add one or more Lost Parts to the user.  # noqa: E501
        """
        pass

    def test_users_lost_parts_delete(self):
        """Test case for users_lost_parts_delete

        Remove the Lost Part from the user.  # noqa: E501
        """
        pass

    def test_users_lost_parts_list(self):
        """Test case for users_lost_parts_list

        Get a list of all the Lost Parts from the user's LEGO collection.  # noqa: E501
        """
        pass

    def test_users_partlists_create(self):
        """Test case for users_partlists_create

        Add a new Part List.  # noqa: E501
        """
        pass

    def test_users_partlists_delete(self):
        """Test case for users_partlists_delete

        Delete a Part List and all it's Parts.  # noqa: E501
        """
        pass

    def test_users_partlists_list(self):
        """Test case for users_partlists_list

        Get a list of all the user's Part Lists.  # noqa: E501
        """
        pass

    def test_users_partlists_partial_update(self):
        """Test case for users_partlists_partial_update

        Update an existing Part List's details.  # noqa: E501
        """
        pass

    def test_users_partlists_parts_create(self):
        """Test case for users_partlists_parts_create

        Add one or more Parts to the Part List.  # noqa: E501
        """
        pass

    def test_users_partlists_parts_delete(self):
        """Test case for users_partlists_parts_delete

        Delete a Part from the Part List.  # noqa: E501
        """
        pass

    def test_users_partlists_parts_list(self):
        """Test case for users_partlists_parts_list

        Get a list of all the Parts in a specific Part List.  # noqa: E501
        """
        pass

    def test_users_partlists_parts_read(self):
        """Test case for users_partlists_parts_read

        Get details about a specific Part in the Part List.  # noqa: E501
        """
        pass

    def test_users_partlists_parts_update(self):
        """Test case for users_partlists_parts_update

        Replace an existing Part's details in the Part List.  # noqa: E501
        """
        pass

    def test_users_partlists_read(self):
        """Test case for users_partlists_read

        Get details about a specific Part List.  # noqa: E501
        """
        pass

    def test_users_partlists_update(self):
        """Test case for users_partlists_update

        Replace an existing Part List's details.  # noqa: E501
        """
        pass

    def test_users_parts_list(self):
        """Test case for users_parts_list

        Get a list of all the Parts in all the user's Part Lists.  # noqa: E501
        """
        pass

    def test_users_profile_list(self):
        """Test case for users_profile_list

        Get details about a specific user.  # noqa: E501
        """
        pass

    def test_users_setlists_create(self):
        """Test case for users_setlists_create

        Add a new Set List.  # noqa: E501
        """
        pass

    def test_users_setlists_delete(self):
        """Test case for users_setlists_delete

        Delete a Set List and all it's Sets.  # noqa: E501
        """
        pass

    def test_users_setlists_list(self):
        """Test case for users_setlists_list

        Get a list of all the user's Set Lists.  # noqa: E501
        """
        pass

    def test_users_setlists_partial_update(self):
        """Test case for users_setlists_partial_update

        Update an existing Set List's details.  # noqa: E501
        """
        pass

    def test_users_setlists_read(self):
        """Test case for users_setlists_read

        Get details about a specific Set List.  # noqa: E501
        """
        pass

    def test_users_setlists_sets_create(self):
        """Test case for users_setlists_sets_create

        Add one or more Sets to the Set List. Existing Sets are unaffected.  # noqa: E501
        """
        pass

    def test_users_setlists_sets_delete(self):
        """Test case for users_setlists_sets_delete

        Delete a Set from the Set List.  # noqa: E501
        """
        pass

    def test_users_setlists_sets_list(self):
        """Test case for users_setlists_sets_list

        Get a list of all the Sets in a specific Set List.  # noqa: E501
        """
        pass

    def test_users_setlists_sets_partial_update(self):
        """Test case for users_setlists_sets_partial_update

        Update an existing Set's details in the Set List.  # noqa: E501
        """
        pass

    def test_users_setlists_sets_read(self):
        """Test case for users_setlists_sets_read

        Get details about a specific Set in the Set List.  # noqa: E501
        """
        pass

    def test_users_setlists_sets_update(self):
        """Test case for users_setlists_sets_update

        Replace an existing Set's details in the Set List.  # noqa: E501
        """
        pass

    def test_users_setlists_update(self):
        """Test case for users_setlists_update

        Replace an existing Set List's details.  # noqa: E501
        """
        pass

    def test_users_sets_create(self):
        """Test case for users_sets_create

        Add one or more Sets to the user's LEGO collection. Existing Sets are unaffected.  # noqa: E501
        """
        pass

    def test_users_sets_delete(self):
        """Test case for users_sets_delete

        Delete the Set from all the user's Set Lists.  # noqa: E501
        """
        pass

    def test_users_sets_list(self):
        """Test case for users_sets_list

        Get a list of all the Sets in the user's LEGO collection.  # noqa: E501
        """
        pass

    def test_users_sets_read(self):
        """Test case for users_sets_read

        Get details about a specific Set in the user's LEGO collection.  # noqa: E501
        """
        pass

    def test_users_sets_sync_create(self):
        """Test case for users_sets_sync_create

        Synchronise a user's Sets to the POSTed list.  # noqa: E501
        """
        pass

    def test_users_sets_update(self):
        """Test case for users_sets_update

        Update an existing Set's quantity in all Set Lists. This PUT call is different to others in that it will create  # noqa: E501
        """
        pass

    def test_users_token_create(self):
        """Test case for users_token_create

        Generate a User Token to be used for authorising user account actions in subsequent calls. Username can be either  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
