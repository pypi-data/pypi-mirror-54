# coding: utf-8

"""
    

        # noqa: E501

    The version of the OpenAPI document: 
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class Build(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'build_options': 'BuildOptions',
        'num_ignored': 'int',
        'num_missing': 'int',
        'num_owned_less_ignored': 'int',
        'pct_owned': 'float',
        'total_parts': 'int',
        'total_parts_less_ignored': 'int'
    }

    attribute_map = {
        'build_options': 'build_options',
        'num_ignored': 'num_ignored',
        'num_missing': 'num_missing',
        'num_owned_less_ignored': 'num_owned_less_ignored',
        'pct_owned': 'pct_owned',
        'total_parts': 'total_parts',
        'total_parts_less_ignored': 'total_parts_less_ignored'
    }

    def __init__(self, build_options=None, num_ignored=None, num_missing=None, num_owned_less_ignored=None, pct_owned=None, total_parts=None, total_parts_less_ignored=None):  # noqa: E501
        """Build - a model defined in OpenAPI"""  # noqa: E501

        self._build_options = None
        self._num_ignored = None
        self._num_missing = None
        self._num_owned_less_ignored = None
        self._pct_owned = None
        self._total_parts = None
        self._total_parts_less_ignored = None
        self.discriminator = None

        if build_options is not None:
            self.build_options = build_options
        if num_ignored is not None:
            self.num_ignored = num_ignored
        if num_missing is not None:
            self.num_missing = num_missing
        if num_owned_less_ignored is not None:
            self.num_owned_less_ignored = num_owned_less_ignored
        if pct_owned is not None:
            self.pct_owned = pct_owned
        if total_parts is not None:
            self.total_parts = total_parts
        if total_parts_less_ignored is not None:
            self.total_parts_less_ignored = total_parts_less_ignored

    @property
    def build_options(self):
        """Gets the build_options of this Build.  # noqa: E501


        :return: The build_options of this Build.  # noqa: E501
        :rtype: BuildOptions
        """
        return self._build_options

    @build_options.setter
    def build_options(self, build_options):
        """Sets the build_options of this Build.


        :param build_options: The build_options of this Build.  # noqa: E501
        :type: BuildOptions
        """

        self._build_options = build_options

    @property
    def num_ignored(self):
        """Gets the num_ignored of this Build.  # noqa: E501


        :return: The num_ignored of this Build.  # noqa: E501
        :rtype: int
        """
        return self._num_ignored

    @num_ignored.setter
    def num_ignored(self, num_ignored):
        """Sets the num_ignored of this Build.


        :param num_ignored: The num_ignored of this Build.  # noqa: E501
        :type: int
        """

        self._num_ignored = num_ignored

    @property
    def num_missing(self):
        """Gets the num_missing of this Build.  # noqa: E501


        :return: The num_missing of this Build.  # noqa: E501
        :rtype: int
        """
        return self._num_missing

    @num_missing.setter
    def num_missing(self, num_missing):
        """Sets the num_missing of this Build.


        :param num_missing: The num_missing of this Build.  # noqa: E501
        :type: int
        """

        self._num_missing = num_missing

    @property
    def num_owned_less_ignored(self):
        """Gets the num_owned_less_ignored of this Build.  # noqa: E501


        :return: The num_owned_less_ignored of this Build.  # noqa: E501
        :rtype: int
        """
        return self._num_owned_less_ignored

    @num_owned_less_ignored.setter
    def num_owned_less_ignored(self, num_owned_less_ignored):
        """Sets the num_owned_less_ignored of this Build.


        :param num_owned_less_ignored: The num_owned_less_ignored of this Build.  # noqa: E501
        :type: int
        """

        self._num_owned_less_ignored = num_owned_less_ignored

    @property
    def pct_owned(self):
        """Gets the pct_owned of this Build.  # noqa: E501


        :return: The pct_owned of this Build.  # noqa: E501
        :rtype: float
        """
        return self._pct_owned

    @pct_owned.setter
    def pct_owned(self, pct_owned):
        """Sets the pct_owned of this Build.


        :param pct_owned: The pct_owned of this Build.  # noqa: E501
        :type: float
        """

        self._pct_owned = pct_owned

    @property
    def total_parts(self):
        """Gets the total_parts of this Build.  # noqa: E501


        :return: The total_parts of this Build.  # noqa: E501
        :rtype: int
        """
        return self._total_parts

    @total_parts.setter
    def total_parts(self, total_parts):
        """Sets the total_parts of this Build.


        :param total_parts: The total_parts of this Build.  # noqa: E501
        :type: int
        """

        self._total_parts = total_parts

    @property
    def total_parts_less_ignored(self):
        """Gets the total_parts_less_ignored of this Build.  # noqa: E501


        :return: The total_parts_less_ignored of this Build.  # noqa: E501
        :rtype: int
        """
        return self._total_parts_less_ignored

    @total_parts_less_ignored.setter
    def total_parts_less_ignored(self, total_parts_less_ignored):
        """Sets the total_parts_less_ignored of this Build.


        :param total_parts_less_ignored: The total_parts_less_ignored of this Build.  # noqa: E501
        :type: int
        """

        self._total_parts_less_ignored = total_parts_less_ignored

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Build):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
