"""
pep-0000.ref

Title
"""

import colorama
from colorama.ansi import AnsiFore
from colorama import Fore, Back


def highlight_print(msg: str, fore_color: AnsiFore = Fore.RED) -> None:
    print(Back.LIGHTYELLOW_EX + fore_color + msg)


def demo():
    pass


def main():
    dict_run = {0: (demo.__name__, "for demo use", lambda: demo()),
                }
    highlight_print(f"{'Action Number':<15} {'func_name':<20} {'description':<40}")
    [print(Fore.BLUE + f"{key:<15} {func_name:<20} {description:<40}") for key, (func_name, description, func) in dict_run.items()]
    case = int(input('run case:'))
    if case not in dict_run:
        return
    func = dict_run[case][2]
    func()


if __name__ == '__main__':
    colorama.init(autoreset=True)

    from argparse import ArgumentParser

    arg_parser = ArgumentParser()
    arg_parser.add_argument("--required_1", help="")
    arg_parser.add_argument("--option_1", help="", dest="option_1", default=None)
    g_args = arg_parser.parse_args()
    highlight_print('GLOBAL ARGUMENT PARSER')
    print(f"{'key':<20} {'value':<40}")
    for key, value in vars(g_args).items():
        print(f"{key:<20} {value if value is not None else '':<40}")
    main()
