#!/usr/bin/env python
# -*- coding: utf-8 -*-

import cProfile
import pstats
import unittest
from objutils import load, loads, dumps

data = load('srec', open(r'C:\projekte\csProjects\yOBJl\tests\CWFirst.abs.s19'))

TEST = '''S00600004844521B
S1130000285F245F2212226A000424290008237C2A
S11300100002000800082629001853812341001813
S113002041E900084E42234300182342000824A952
S107003000144ED492
S9030000FC'''


"""
S1130000285F245F2212226A000424290008237C2A
S11300100002000800082629001853812341001813
S113002041E900084E42234300182342000824A952
S107003000144ED492
"""

"""S00F000068656C6C6F202020202000003C
S11F00007C0802A6900100049421FFF07C6C1B787C8C23783C6000003863000026
S11F001C4BFFFFE5398000007D83637880010014382100107C0803A64E800020E9
S111003848656C6C6F20776F726C642E0A0042
S5030003F9
S9030000FC
"""


data = loads('srec', TEST)

"""
    If SRECORD = S1, the S Record file gets the extension .s1.
    If SRECORD = S2, the S Record file gets the extension .s2.
    If SRECORD = S3, the S Record file gets the extension .s3.
    If SRECORD is not set, the S Record file gets the extension .sx.
"""




S19 = """S113B000576F77212044696420796F7520726561D8
S113B0106C6C7920676F207468726F756768206143
S113B0206C20746861742074726F75626C6520742E
S10FB0306F207265616420746869733FCE
S9030000FC"""

S28 = """S21400B000576F77212044696420796F7520726561D7
S21400B0106C6C7920676F207468726F756768206142
S21400B0206C20746861742074726F75626C6520742D
S21000B0306F207265616420746869733FCD
S804000000FB"""

S37 = """S3150000B000576F77212044696420796F7520726561D6
S3150000B0106C6C7920676F207468726F756768206141
S3150000B0206C20746861742074726F75626C6520742C
S3110000B0306F207265616420746869733FCC
S70500000000FA"""

print( dumps('srec', data))


data = load('ihex', open(r'C:\projekte\csProjects\k-ps\tests\ATMega644_NCN5120\ATMega644_NCN5120\ATMega644_NCN5120\Debug\ATMega644_NCN5120.hex'))
print( dumps('srec', data, record_type = 2))


TESTS=('''S00600004844521B
S1130000285F245F2212226A000424290008237C2A
S11300100002000800082629001853812341001813
S113002041E900084E42234300182342000824A952
S107003000144ED492
S5030004F8
S9030000FC
''',
'''S1040100FFFB
S123010464010101FF00000000FFE063AF232E4E646306FFFF0001010202030304040505F8
S12301240100020103020403050405CED1CF08D3DF08D5DF00D6CF00D7DF00020000002D2B
S123014400FFFFFB003CB4151400CD02039D9D3FD63FD8A601B7D7A604CD507EAD538181D1
S1230164A602CD50362404AD50AD46CD0203B602A420B7D9B1D82616B6D9A1202706A6009E
S1230184B7D62004A601B7D6A603B6D9B7D8B6D7260EA602CD507B2707B6D5B750CD02B962
S12301A481A601B750CD02B981A600B750CD02B981AE08A623CD503981A607AE01CD506C0E
S12301C4CD024AB650B752B651B7533F50A633B751CD5030CD02DCB654B750B655B751331F
S12301E4503051B651ABC2B751B650A901B750AD27B650B7D1B651B7D2A600CD507E81B689
S12302040CA4FCB70CA600C70FD0A600C70FD1A640B706A6FFB704810E500B4FB752B65182
S1230224B753AD2D200EAD34B650B752B651B753AD1FAD28AE03375036515A26F9B650A420
S123024487AA18B750814FB754A664B755CD5033814FB754A60AB755CD5033813350335196
S1230264B651AB01B751B650A900B75081B650A478444444B756B650A487B7500E500B4F99
S1230284B752B651B753AD1A200EADD0B650B752B651B753AD0CADC4BE56385038515A26DB
S12302A4F9814FB750A664B751CD5030B654B750B655B75181B6502B14A101221027061804
S12102C4001D0220041A001C02AD033F0081AD08A61ECD5054AD0181A600C77FF081B7
S9030000FC
''',
'''S00D00003243422D31322E683132B2
S2120FD4E210722E9D00000000000000000001DA
S2240FFF80C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C0004D
S2240FFFA0C000C000C000C000C000C000C000C000C000C000C000C000C000C000C000C0002D
S2240FFFC0C000C000C000C0004A4F643B4A60C000C00065AE6FBC6FB670E7C0004A43641927
S2240FFFE0C000C000C000C000C000C000C000C000C000C000C000C000C000C001C001C001EA
S2240FB4C1436A4379438D43AD43BA43CC43EC43FA440C442C4449446D449944B644DA450678
S2240FB4E145174358453245454358456845794358459445A7435845CA45DB435845F64609EA
S2240FB5014358462C4642465E469D46B346CF470E4724473F475B4771478A47A647BC47D56F
S2240FB52147F148074822483E48594358487B4896435848B848D4435848F6490943584924B8
S2240FB541493743583EE4F8B588E368F10080100104000103012010010400010300280140EC
S2240FB56110010002000000000000030003FFFFFFFF0180100000000000000000FFFFFFFF14
S2240FB581FFFFFFFF01C0100000000000000000FFFFFFFFFFFFFFFF0220100000000000009F
S2240FB5A10000FFFFFFFFFFFFFFFF0280100000000000000000FFFFFFFFFFFFFFFF003410B0
S2240FB5C119000000050E004003E800E0830000000000524200C603E8000000010000E0185E
S2240FB5E100000000930000000000000000000000000900010D024000000000FF000000004B
S2240FB601FF00F0000000FF00F0000000FF0000000000FF0000000000FF000000A0AAFCAA4A
S2240FB621AA0000050500FFFFFFFFFFFFFFFF000000000000000000C800004B000008103AE4
S2240FB64120105A0000000000D000004B000008101A2010640000000000D8A0100E000000D4
S2240FB6610000000000000049DD49EF49F049F149F249F349F449F549F649F749F849F949A7
S2240FB681FA4AED4AF44B1D4B3C4B764B944BA54B434B614BC44BEE4C0E4C154C3E4C5D4CEB
S2240FB6A1974CB54CC64C644C824CE54D0F0000012C00000258000004B0000009600000120A
S2240FB6C1C00000258000004B00000096000000E1000001C20001020351DE51EB51F852055A
S2240FB6E1520C529C52D652EF530853175326549D54A454CD54D454F5550E552655465547B2
S2240FB701554E554F5550555B555C5563556A557155975598559955A055A72F8E2F8C2F8AA1
S2240FB7212F882F842F822F862F802F7E2F7C2F782F742F702F6C2F682F642F6000000000E0
S2240FB7413FF00000000000005C575C685C825CB95CCA5CE45D345D605D8D5DC35DE65E09D3
S2240FB7615E2C5E675EA25EC55EE85F0B5F2E5F645F873FD55555555555554000000000000A
S2240FB7810000BFF00000000000003FF00000000000004F744F954F754FAB500350345072B8
S2240FB7A1511559FB5A095A165A2758265833583F584F58F959085919593658605870588014
S2240FB7C158924952498A494B4998496049755B735B7C5B8B5BAA5BB55BBF5BDD5BEE5C0287
S2240FB7E15A395A565A7B5AA05AB95AD65FCB606C6123616F62A8600C60AD6143618E61B668
S2240FB80161E962276242625462A462A662A7514851494F744F96514C517D55B4436343A6F1
S2240FB82143E5442544924625469647074754479F47EA44FF452B4561458D45C345EF48375F
S2240FB841487448B148EF491D5C255C3E5D1B57A657DC57BD57FD62D35FAA4AD44BF5557EE7
S2240FB86149C4548464A3552D4EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB151
S2240FB8814EB14EB14EB14EB14EB14EB14EB14EB14EB14F74505650824F7B512C513755BC81
S2240FB8A159BD59CB59D859E9572B57385744575455C355D555E655FB576557755785579750
S2240FB8C156115626563B565256665678568A569C56B556D056EB570B58A158B058C158DEB7
S2240FB8E159515965597B599D4EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB10D
S2240FB9014EB14EB14EB14EB14EB14EB14EB14EB14EB14F7450A55B2C5B3A5B465B5D5AF2A2
S2240FB9215AFD5B075B16514A514B519F519D519E4EB14EB14EB14EB14EB14EB14EB14EB1CC
S2240FB9414EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB1E2
S2240FB9614EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB14EB1C2
S2240FB9814EB14EB14EB14EB14EB14EB14EB14EB14EB1DDF2D179C5C4BAA7B362A6409CE71A
S2240FB9A194198BD483F87C90758B5FC35FC45FC55FC65FC75FC8010204081020408062ECB7
S2240FB9C1630E631E6359637E639A63B663C363C463C563C663C763C8322D43422F31322024
S2240FB9E12056312E300D0A00432D436F6E74726F6C2049490D0A004D6172203235203230D3
S2240FBA0131300D0A0052554E4E494E4700484F53544D4F4445004C4F414420484558004CA4
S2240FBA214F414420564D43004552415320484558004552415320564D43004255524E20451A
S2240FBA415252005155495420564D4300554E44204F50430053544F205452415000535455B2
S2240FBA61205452415000494C4C204F50410042545241500046502045525200465045204422
S2240FBA81495630004650452053544F460046504520494E4F4600494C4C20494E41004650F5
S2240FBAA14520434F4E560046504520554E44460050525420464C5400465045205354554675
S2240FBAC10046504520464C554600494C4C204255530046504520464C4F460064BC64BD6477
S2240FBAE1C40009896800010002000400080010002000400080010002000400080010002035
S20D0FBB01004000800041C64E6DA5
S804FFFFFFFE
''')

def profile(func, type_ = 'cumulative', top = 10, name = 'profile.prof', glo = globals(), lo = locals()):
    import cProfile
    import pstats

    cProfile.runctx(func, glo, lo, name)

    p = pstats.Stats(name)
    p.sort_stats(type_).print_stats(top)



def main():
    #hr=Reader(FORMATS,file('2CB_12.s19'))
#    s=open("../tests/redboot.s19")
    # s=open("../tests/redboot.sym")

    data = loads('srec', TESTS[2])

    base = r'C:\projekte\csProjects\yOBJl\tests'
    files = ['E88E.1.0.30_EMEA.s19', 'FFE_C115_2K_723.s19', 'LPE_C115_T1_123.s19', 'flash.SX']

    for f in files:
        data = load('srec', open(r"%s\%s" % (base, f)))
        print( data)


if __name__=='__main__':

    cProfile.run('main()', 'srecords.prof')

    p = pstats.Stats('srecords.prof')
    #p.strip_dirs().sort_stats(-1).print(_stats())
    p.sort_stats('cumulative').print_stats(10)





'''
BDB-CXX_APIReference                                - 77
BDB_Prog_Reference                                  - 55
Pragmatic.The Definitive ANTLR Reference May 2007   - 94
Pragmatic.Language.Implementation.Pattern2.Dec.2009 - 11
'''

