# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import functions_pb2 as registry_dot_functions__pb2


class FunctionRegistryStub(object):
  """TODO(neeraj): Figure out how to do health checks
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.RegisterFunction = channel.unary_unary(
        '/registry.FunctionRegistry/RegisterFunction',
        request_serializer=registry_dot_functions__pb2.RegisterFunctionRequest.SerializeToString,
        response_deserializer=registry_dot_functions__pb2.RegisterFunctionResponse.FromString,
        )
    self.ListRegisteredFunctions = channel.unary_unary(
        '/registry.FunctionRegistry/ListRegisteredFunctions',
        request_serializer=registry_dot_functions__pb2.ListRegisteredFunctionsRequest.SerializeToString,
        response_deserializer=registry_dot_functions__pb2.ListRegisteredFunctionsResponse.FromString,
        )
    self.GetRegisteredFunction = channel.unary_unary(
        '/registry.FunctionRegistry/GetRegisteredFunction',
        request_serializer=registry_dot_functions__pb2.GetRegisteredFunctionRequest.SerializeToString,
        response_deserializer=registry_dot_functions__pb2.GetRegisteredFunctionResponse.FromString,
        )
    self.DeleteRegisteredFunction = channel.unary_unary(
        '/registry.FunctionRegistry/DeleteRegisteredFunction',
        request_serializer=registry_dot_functions__pb2.DeleteRegisteredFunctionRequest.SerializeToString,
        response_deserializer=registry_dot_functions__pb2.DeleteRegisteredFunctionResponse.FromString,
        )


class FunctionRegistryServicer(object):
  """TODO(neeraj): Figure out how to do health checks
  """

  def RegisterFunction(self, request, context):
    """Register a function against the function registry
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListRegisteredFunctions(self, request, context):
    """List all registered functions
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetRegisteredFunction(self, request, context):
    """Get a registered function by key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteRegisteredFunction(self, request, context):
    """Delete registered function by key
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FunctionRegistryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'RegisterFunction': grpc.unary_unary_rpc_method_handler(
          servicer.RegisterFunction,
          request_deserializer=registry_dot_functions__pb2.RegisterFunctionRequest.FromString,
          response_serializer=registry_dot_functions__pb2.RegisterFunctionResponse.SerializeToString,
      ),
      'ListRegisteredFunctions': grpc.unary_unary_rpc_method_handler(
          servicer.ListRegisteredFunctions,
          request_deserializer=registry_dot_functions__pb2.ListRegisteredFunctionsRequest.FromString,
          response_serializer=registry_dot_functions__pb2.ListRegisteredFunctionsResponse.SerializeToString,
      ),
      'GetRegisteredFunction': grpc.unary_unary_rpc_method_handler(
          servicer.GetRegisteredFunction,
          request_deserializer=registry_dot_functions__pb2.GetRegisteredFunctionRequest.FromString,
          response_serializer=registry_dot_functions__pb2.GetRegisteredFunctionResponse.SerializeToString,
      ),
      'DeleteRegisteredFunction': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteRegisteredFunction,
          request_deserializer=registry_dot_functions__pb2.DeleteRegisteredFunctionRequest.FromString,
          response_serializer=registry_dot_functions__pb2.DeleteRegisteredFunctionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'registry.FunctionRegistry', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
