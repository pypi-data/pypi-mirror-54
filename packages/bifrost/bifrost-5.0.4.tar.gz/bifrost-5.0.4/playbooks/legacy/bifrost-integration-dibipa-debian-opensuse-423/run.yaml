- hosts: all
  name: Autoconverted job legacy-bifrost-integration-dibipa-debian-opensuse-423 from
    old job gate-bifrost-integration-dibipa-debian-opensuse-423-nv
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          CLONEMAP=`mktemp`
          REQS_DIR=`mktemp -d`
          function cleanup {
              mkdir -p $WORKSPACE
              rm -rf $CLONEMAP $REQS_DIR
          }
          trap cleanup EXIT
          cat > $CLONEMAP << EOF
          clonemap:
            - name: $ZUUL_PROJECT
              dest: .
          EOF
          # zuul cloner works poorly if there are 2 names that are the
          # same in here.
          if [[ "$ZUUL_PROJECT" != "openstack/requirements" ]]; then
          cat >> $CLONEMAP << EOF
            - name: openstack/requirements
              dest: $REQS_DIR
          EOF
          fi
          /usr/zuul-env/bin/zuul-cloner -m $CLONEMAP --cache-dir /opt/git \
              https://git.openstack.org $ZUUL_PROJECT openstack/requirements
          # REQS_DIR is not set for openstack/requirements and there is also
          # no need to copy in this case.
          if [[ "$ZUUL_PROJECT" != "openstack/requirements" ]]; then
              cp $REQS_DIR/upper-constraints.txt ./
          fi
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: /usr/local/jenkins/slave_scripts/install-distro-packages.sh
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -u
          set -e
          set -x
          cd $WORKSPACE

          /usr/zuul-env/bin/zuul-cloner --cache-dir /opt/git \
            https://git.openstack.org \
            openstack/bifrost \
            openstack/diskimage-builder \
            openstack/ironic \
            openstack/python-ironicclient \
            openstack-infra/shade \
            openstack/ironic-inspector \
            openstack/python-ironic-inspector-client \
            openstack/requirements
          export GIT_BASE=$(pwd)
          export UPPER_CONSTRAINTS_FILE=$WORKSPACE/upper-constraints.txt
          cd openstack/bifrost
          scripts/test-bifrost-build-images.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
