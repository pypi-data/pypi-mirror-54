{"version":3,"sources":["webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/components/ha-card.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/entity/domain_icon.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./src/common/entity/cover_icon.ts","webpack:///./src/common/entity/sensor_icon.ts","webpack:///./src/common/entity/state_icon.ts","webpack:///./src/common/entity/binary_sensor_icon.ts","webpack:///./src/common/entity/input_dateteime_icon.ts","webpack:///./src/components/ha-switch.ts","webpack:///./src/common/util/debounce.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/panels/config/ha-config-section.js","webpack:///./src/data/entity_registry.ts","webpack:///./src/panels/config/entity_registry/show-dialog-entity-registry-detail.ts","webpack:///./src/panels/config/entity_registry/ha-config-entity-registry.ts"],"names":["__webpack_require__","d","__webpack_exports__","computeStateName","_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","stateObj","undefined","attributes","friendly_name","Object","entity_id","replace","HaCard","lit_element__WEBPACK_IMPORTED_MODULE_1__","styles","[object Object]","this","header","tslib__WEBPACK_IMPORTED_MODULE_0__","customElements","define","HaIcon","ironIconClass","get","loaded","node","eventName","methodName","super","listen","_iconsetName","e","then","bind","domainIcon","_const__WEBPACK_IMPORTED_MODULE_0__","fixedIcons","alert","alexa","automation","calendar","camera","climate","configurator","conversation","device_tracker","fan","google_assistant","group","history_graph","homeassistant","homekit","image_processing","input_boolean","input_datetime","input_number","input_select","input_text","light","mailbox","notify","persistent_notification","person","plant","proximity","remote","scene","script","sensor","simple_alarm","sun","switch","timer","updater","vacuum","water_heater","weather","weblink","zone","domain","state","console","warn","computeObjectId","entityId","substr","indexOf","fixedDeviceClassIcons","humidity","illuminance","temperature","pressure","power","signal_strength","stateIcon","domainIcons","binary_sensor","activated","device_class","cover","open","domain_icon","dclass","battery","Number","isNaN","batteryRound","Math","round","unit","unit_of_measurement","common_const","has_date","has_time","icon","compute_domain","MwcSwitch","HaSwitch","firstUpdated","style","setProperty","classList","toggle","Boolean","_slot","assignedNodes","length","_material_mwc_switch_mwc_switch_css__WEBPACK_IMPORTED_MODULE_3__","debounce","func","wait","immediate","timeout","args","context","callNow","clearTimeout","setTimeout","apply","compare","caseInsensitiveCompare","a","b","toLowerCase","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_0__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_1__","template","properties","hass","type","narrow","isWide","value","classes","computeEntityRegistryName","updateEntityRegistryEntry","removeEntityRegistryEntry","subscribeEntityRegistry","home_assistant_js_websocket__WEBPACK_IMPORTED_MODULE_0__","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_1__","_common_util_debounce__WEBPACK_IMPORTED_MODULE_2__","entry","name","states","updates","callWS","assign","fetchEntityRegistry","conn","sendMessagePromise","subscribeEntityRegistryUpdates","store","subscribeEvents","entities","setState","onChange","loadEntityRegistryDetailDialog","showEntityRegistryDetailDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","Promise","all","element","systemLogDetailParams","dialogTag","dialogImport","dialogParams","HaConfigEntityRegistry","_showDisabled","_filteredEntities","memoize_one__WEBPACK_IMPORTED_MODULE_18__","showDisabled","filter","entity","disabled_by","disconnectedCallback","_unsubEntities","_entities","localize","_showDisabledChanged","map","_openEditEntry","lit_html_directives_class_map__WEBPACK_IMPORTED_MODULE_17__","disabled-entry","_common_entity_state_icon__WEBPACK_IMPORTED_MODULE_12__","_common_entity_domain_icon__WEBPACK_IMPORTED_MODULE_11__","_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_13__","_data_entity_registry__WEBPACK_IMPORTED_MODULE_5__","platform","changedProps","_show_dialog_entity_registry_detail__WEBPACK_IMPORTED_MODULE_15__","updated","connection","sort","ent1","ent2","_common_string_compare__WEBPACK_IMPORTED_MODULE_16__","ev","target","checked","currentTarget"],"mappings":"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","file":"chunk.3ac85cbcc66fd9db3665.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","/**\n * Return the icon to be used for a domain.\n *\n * Optionally pass in a state to influence the domain icon.\n */\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\n\nconst fixedIcons = {\n  alert: \"hass:alert\",\n  alexa: \"hass:amazon-alexa\",\n  automation: \"hass:playlist-play\",\n  calendar: \"hass:calendar\",\n  camera: \"hass:video\",\n  climate: \"hass:thermostat\",\n  configurator: \"hass:settings\",\n  conversation: \"hass:text-to-speech\",\n  device_tracker: \"hass:account\",\n  fan: \"hass:fan\",\n  google_assistant: \"hass:google-assistant\",\n  group: \"hass:google-circles-communities\",\n  history_graph: \"hass:chart-line\",\n  homeassistant: \"hass:home-assistant\",\n  homekit: \"hass:home-automation\",\n  image_processing: \"hass:image-filter-frames\",\n  input_boolean: \"hass:drawing\",\n  input_datetime: \"hass:calendar-clock\",\n  input_number: \"hass:ray-vertex\",\n  input_select: \"hass:format-list-bulleted\",\n  input_text: \"hass:textbox\",\n  light: \"hass:lightbulb\",\n  mailbox: \"hass:mailbox\",\n  notify: \"hass:comment-alert\",\n  persistent_notification: \"hass:bell\",\n  person: \"hass:account\",\n  plant: \"hass:flower\",\n  proximity: \"hass:apple-safari\",\n  remote: \"hass:remote\",\n  scene: \"hass:google-pages\",\n  script: \"hass:file-document\",\n  sensor: \"hass:eye\",\n  simple_alarm: \"hass:bell\",\n  sun: \"hass:white-balance-sunny\",\n  switch: \"hass:flash\",\n  timer: \"hass:timer\",\n  updater: \"hass:cloud-upload\",\n  vacuum: \"hass:robot-vacuum\",\n  water_heater: \"hass:thermometer\",\n  weather: \"hass:weather-cloudy\",\n  weblink: \"hass:open-in-new\",\n  zone: \"hass:map-marker\",\n};\n\nexport const domainIcon = (domain: string, state?: string): string => {\n  if (domain in fixedIcons) {\n    return fixedIcons[domain];\n  }\n\n  switch (domain) {\n    case \"alarm_control_panel\":\n      switch (state) {\n        case \"armed_home\":\n          return \"hass:bell-plus\";\n        case \"armed_night\":\n          return \"hass:bell-sleep\";\n        case \"disarmed\":\n          return \"hass:bell-outline\";\n        case \"triggered\":\n          return \"hass:bell-ring\";\n        default:\n          return \"hass:bell\";\n      }\n\n    case \"binary_sensor\":\n      return state && state === \"off\"\n        ? \"hass:radiobox-blank\"\n        : \"hass:checkbox-marked-circle\";\n\n    case \"cover\":\n      return state === \"closed\" ? \"hass:window-closed\" : \"hass:window-open\";\n\n    case \"lock\":\n      return state && state === \"unlocked\" ? \"hass:lock-open\" : \"hass:lock\";\n\n    case \"media_player\":\n      return state && state !== \"off\" && state !== \"idle\"\n        ? \"hass:cast-connected\"\n        : \"hass:cast\";\n\n    case \"zwave\":\n      switch (state) {\n        case \"dead\":\n          return \"hass:emoticon-dead\";\n        case \"sleeping\":\n          return \"hass:sleep\";\n        case \"initializing\":\n          return \"hass:timer-sand\";\n        default:\n          return \"hass:z-wave\";\n      }\n\n    default:\n      // tslint:disable-next-line\n      console.warn(\n        \"Unable to find icon for domain \" + domain + \" (\" + state + \")\"\n      );\n      return DEFAULT_DOMAIN_ICON;\n  }\n};\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n};\n","/** Return an icon representing a cover state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { domainIcon } from \"./domain_icon\";\n\nexport const coverIcon = (state: HassEntity): string => {\n  const open = state.state !== \"closed\";\n  switch (state.attributes.device_class) {\n    case \"garage\":\n      return open ? \"hass:garage-open\" : \"hass:garage\";\n    case \"door\":\n      return open ? \"hass:door-open\" : \"hass:door-closed\";\n    case \"shutter\":\n      return open ? \"hass:window-shutter-open\" : \"hass:window-shutter\";\n    case \"blind\":\n      return open ? \"hass:blinds-open\" : \"hass:blinds\";\n    case \"window\":\n      return open ? \"hass:window-open\" : \"hass:window-closed\";\n    default:\n      return domainIcon(\"cover\", state.state);\n  }\n};\n","/** Return an icon representing a sensor state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { UNIT_C, UNIT_F } from \"../const\";\nimport { domainIcon } from \"./domain_icon\";\n\nconst fixedDeviceClassIcons = {\n  humidity: \"hass:water-percent\",\n  illuminance: \"hass:brightness-5\",\n  temperature: \"hass:thermometer\",\n  pressure: \"hass:gauge\",\n  power: \"hass:flash\",\n  signal_strength: \"hass:wifi\",\n};\n\nexport const sensorIcon = (state: HassEntity) => {\n  const dclass = state.attributes.device_class;\n\n  if (dclass && dclass in fixedDeviceClassIcons) {\n    return fixedDeviceClassIcons[dclass];\n  }\n  if (dclass === \"battery\") {\n    const battery = Number(state.state);\n    if (isNaN(battery)) {\n      return \"hass:battery-unknown\";\n    }\n    const batteryRound = Math.round(battery / 10) * 10;\n    if (batteryRound >= 100) {\n      return \"hass:battery\";\n    }\n    if (batteryRound <= 0) {\n      return \"hass:battery-alert\";\n    }\n    // Will return one of the following icons: (listed so extractor picks up)\n    // hass:battery-10\n    // hass:battery-20\n    // hass:battery-30\n    // hass:battery-40\n    // hass:battery-50\n    // hass:battery-60\n    // hass:battery-70\n    // hass:battery-80\n    // hass:battery-90\n    // We obscure 'hass' in iconname so this name does not get picked up\n    return `${\"hass\"}:battery-${batteryRound}`;\n  }\n\n  const unit = state.attributes.unit_of_measurement;\n  if (unit === UNIT_C || unit === UNIT_F) {\n    return \"hass:thermometer\";\n  }\n  return domainIcon(\"sensor\");\n};\n","/** Return an icon representing a state. */\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { DEFAULT_DOMAIN_ICON } from \"../const\";\nimport { binarySensorIcon } from \"./binary_sensor_icon\";\n\nimport { computeDomain } from \"./compute_domain\";\nimport { domainIcon } from \"./domain_icon\";\nimport { coverIcon } from \"./cover_icon\";\nimport { sensorIcon } from \"./sensor_icon\";\nimport { inputDateTimeIcon } from \"./input_dateteime_icon\";\n\nconst domainIcons = {\n  binary_sensor: binarySensorIcon,\n  cover: coverIcon,\n  sensor: sensorIcon,\n  input_datetime: inputDateTimeIcon,\n};\n\nexport const stateIcon = (state: HassEntity) => {\n  if (!state) {\n    return DEFAULT_DOMAIN_ICON;\n  }\n  if (state.attributes.icon) {\n    return state.attributes.icon;\n  }\n\n  const domain = computeDomain(state.entity_id);\n\n  if (domain in domainIcons) {\n    return domainIcons[domain](state);\n  }\n  return domainIcon(domain, state.state);\n};\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\n/** Return an icon representing a binary sensor state. */\n\nexport const binarySensorIcon = (state: HassEntity) => {\n  const activated = state.state && state.state === \"off\";\n  switch (state.attributes.device_class) {\n    case \"battery\":\n      return activated ? \"hass:battery\" : \"hass:battery-outline\";\n    case \"cold\":\n      return activated ? \"hass:thermometer\" : \"hass:snowflake\";\n    case \"connectivity\":\n      return activated ? \"hass:server-network-off\" : \"hass:server-network\";\n    case \"door\":\n      return activated ? \"hass:door-closed\" : \"hass:door-open\";\n    case \"garage_door\":\n      return activated ? \"hass:garage\" : \"hass:garage-open\";\n    case \"gas\":\n    case \"power\":\n    case \"problem\":\n    case \"safety\":\n    case \"smoke\":\n      return activated ? \"hass:shield-check\" : \"hass:alert\";\n    case \"heat\":\n      return activated ? \"hass:thermometer\" : \"hass:fire\";\n    case \"light\":\n      return activated ? \"hass:brightness-5\" : \"hass:brightness-7\";\n    case \"lock\":\n      return activated ? \"hass:lock\" : \"hass:lock-open\";\n    case \"moisture\":\n      return activated ? \"hass:water-off\" : \"hass:water\";\n    case \"motion\":\n      return activated ? \"hass:walk\" : \"hass:run\";\n    case \"occupancy\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"opening\":\n      return activated ? \"hass:square\" : \"hass:square-outline\";\n    case \"plug\":\n      return activated ? \"hass:power-plug-off\" : \"hass:power-plug\";\n    case \"presence\":\n      return activated ? \"hass:home-outline\" : \"hass:home\";\n    case \"sound\":\n      return activated ? \"hass:music-note-off\" : \"hass:music-note\";\n    case \"vibration\":\n      return activated ? \"hass:crop-portrait\" : \"hass:vibrate\";\n    case \"window\":\n      return activated ? \"hass:window-closed\" : \"hass:window-open\";\n    default:\n      return activated ? \"hass:radiobox-blank\" : \"hass:checkbox-marked-circle\";\n  }\n};\n","/** Return an icon representing an input datetime state. */\nimport { domainIcon } from \"./domain_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const inputDateTimeIcon = (state: HassEntity): string => {\n  if (!state.attributes.has_date) {\n    return \"hass:clock\";\n  }\n  if (!state.attributes.has_time) {\n    return \"hass:calendar\";\n  }\n  return domainIcon(\"input_datetime\");\n};\n","import { Constructor, customElement, CSSResult, css, query } from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\"--mdc-theme-secondary\", \"var(--primary-color)\");\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--paper-toggle-button-unchecked-button-color);\n          border-color: var(--paper-toggle-button-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--paper-toggle-button-unchecked-bar-color);\n          border-color: var(--paper-toggle-button-unchecked-bar-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","// From: https://davidwalsh.name/javascript-debounce-function\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// tslint:disable-next-line: ban-types\nexport const debounce = <T extends Function>(\n  func: T,\n  wait,\n  immediate = false\n): T => {\n  let timeout;\n  // @ts-ignore\n  return function(...args) {\n    // tslint:disable:no-this-assignment\n    // @ts-ignore\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../resources/ha-style\";\n\nclass HaConfigSection extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding: 28px 20px 0;\n          max-width: 1040px;\n          margin: 0 auto;\n        }\n\n        .header {\n          @apply --paper-font-display1;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .together {\n          margin-top: 32px;\n        }\n\n        .intro {\n          @apply --paper-font-subhead;\n          width: 100%;\n          max-width: 400px;\n          margin-right: 40px;\n          opacity: var(--dark-primary-opacity);\n        }\n\n        .panel {\n          margin-top: -24px;\n        }\n\n        .panel ::slotted(*) {\n          margin-top: 24px;\n          display: block;\n        }\n\n        .narrow.content {\n          max-width: 640px;\n        }\n        .narrow .together {\n          margin-top: 20px;\n        }\n        .narrow .header {\n          @apply --paper-font-headline;\n        }\n        .narrow .intro {\n          font-size: 14px;\n          padding-bottom: 20px;\n          margin-right: 0;\n          max-width: 500px;\n        }\n      </style>\n      <div class$=\"[[computeContentClasses(isWide)]]\">\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      narrow: {\n        type: Boolean,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  computeContentClasses(isWide) {\n    var classes = \"content \";\n\n    return isWide ? classes : classes + \"narrow\";\n  }\n\n  computeClasses(isWide) {\n    var classes = \"together layout \";\n\n    return classes + (isWide ? \"horizontal\" : \"vertical narrow\");\n  }\n}\n\ncustomElements.define(\"ha-config-section\", HaConfigSection);\n","import { createCollection, Connection } from \"home-assistant-js-websocket\";\nimport { HomeAssistant } from \"../types\";\nimport { computeStateName } from \"../common/entity/compute_state_name\";\nimport { debounce } from \"../common/util/debounce\";\n\nexport interface EntityRegistryEntry {\n  entity_id: string;\n  name: string;\n  platform: string;\n  config_entry_id?: string;\n  device_id?: string;\n  disabled_by: string | null;\n}\n\nexport interface EntityRegistryEntryUpdateParams {\n  name?: string | null;\n  disabled_by?: string | null;\n  new_entity_id?: string;\n}\n\nexport const computeEntityRegistryName = (\n  hass: HomeAssistant,\n  entry: EntityRegistryEntry\n): string | null => {\n  if (entry.name) {\n    return entry.name;\n  }\n  const state = hass.states[entry.entity_id];\n  return state ? computeStateName(state) : null;\n};\n\nexport const updateEntityRegistryEntry = (\n  hass: HomeAssistant,\n  entityId: string,\n  updates: Partial<EntityRegistryEntryUpdateParams>\n): Promise<EntityRegistryEntry> =>\n  hass.callWS<EntityRegistryEntry>({\n    type: \"config/entity_registry/update\",\n    entity_id: entityId,\n    ...updates,\n  });\n\nexport const removeEntityRegistryEntry = (\n  hass: HomeAssistant,\n  entityId: string\n): Promise<void> =>\n  hass.callWS({\n    type: \"config/entity_registry/remove\",\n    entity_id: entityId,\n  });\n\nconst fetchEntityRegistry = (conn) =>\n  conn.sendMessagePromise({\n    type: \"config/entity_registry/list\",\n  });\n\nconst subscribeEntityRegistryUpdates = (conn, store) =>\n  conn.subscribeEvents(\n    debounce(\n      () =>\n        fetchEntityRegistry(conn).then((entities) =>\n          store.setState(entities, true)\n        ),\n      500,\n      true\n    ),\n    \"entity_registry_updated\"\n  );\n\nexport const subscribeEntityRegistry = (\n  conn: Connection,\n  onChange: (entities: EntityRegistryEntry[]) => void\n) =>\n  createCollection<EntityRegistryEntry[]>(\n    \"_entityRegistry\",\n    fetchEntityRegistry,\n    subscribeEntityRegistryUpdates,\n    conn,\n    onChange\n  );\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityRegistryEntry } from \"../../../data/entity_registry\";\n\nexport interface EntityRegistryDetailDialogParams {\n  entry: EntityRegistryEntry;\n}\n\nexport const loadEntityRegistryDetailDialog = () =>\n  import(/* webpackChunkName: \"entity-registry-detail-dialog\" */ \"./dialog-entity-registry-detail\");\n\nexport const showEntityRegistryDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: EntityRegistryDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-entity-registry-detail\",\n    dialogImport: loadEntityRegistryDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  EntityRegistryEntry,\n  computeEntityRegistryName,\n  subscribeEntityRegistry,\n} from \"../../../data/entity_registry\";\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../layouts/hass-loading-screen\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon\";\nimport \"../../../components/ha-switch\";\nimport { domainIcon } from \"../../../common/entity/domain_icon\";\nimport { stateIcon } from \"../../../common/entity/state_icon\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport \"../ha-config-section\";\nimport {\n  showEntityRegistryDetailDialog,\n  loadEntityRegistryDetailDialog,\n} from \"./show-dialog-entity-registry-detail\";\nimport { UnsubscribeFunc } from \"home-assistant-js-websocket\";\nimport { compare } from \"../../../common/string/compare\";\nimport { classMap } from \"lit-html/directives/class-map\";\n// tslint:disable-next-line\nimport { HaSwitch } from \"../../../components/ha-switch\";\nimport memoize from \"memoize-one\";\n\nclass HaConfigEntityRegistry extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public isWide?: boolean;\n  @property() private _entities?: EntityRegistryEntry[];\n  @property() private _showDisabled = false;\n  private _unsubEntities?: UnsubscribeFunc;\n\n  private _filteredEntities = memoize(\n    (entities: EntityRegistryEntry[], showDisabled: boolean) =>\n      showDisabled\n        ? entities\n        : entities.filter((entity) => !Boolean(entity.disabled_by))\n  );\n\n  public disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this._unsubEntities) {\n      this._unsubEntities();\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || this._entities === undefined) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n    return html`\n      <hass-subpage\n        header=\"${this.hass.localize(\n          \"ui.panel.config.entity_registry.caption\"\n        )}\"\n      >\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\">\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.picker.header\"\n            )}\n          </span>\n          <span slot=\"introduction\">\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.picker.introduction\"\n            )}\n            <p>\n              ${this.hass.localize(\n                \"ui.panel.config.entity_registry.picker.introduction2\"\n              )}\n            </p>\n            <a href=\"/config/integrations\">\n              ${this.hass.localize(\n                \"ui.panel.config.entity_registry.picker.integrations_page\"\n              )}\n            </a>\n          </span>\n          <ha-card>\n            <paper-item>\n              <ha-switch\n                ?checked=${this._showDisabled}\n                @change=${this._showDisabledChanged}\n                >${this.hass.localize(\n                  \"ui.panel.config.entity_registry.picker.show_disabled\"\n                )}</ha-switch\n              ></paper-item\n            >\n            ${this._filteredEntities(this._entities, this._showDisabled).map(\n              (entry) => {\n                const state = this.hass!.states[entry.entity_id];\n                return html`\n                  <paper-icon-item\n                    @click=${this._openEditEntry}\n                    .entry=${entry}\n                    class=${classMap({ \"disabled-entry\": !!entry.disabled_by })}\n                  >\n                    <ha-icon\n                      slot=\"item-icon\"\n                      .icon=${state\n                        ? stateIcon(state)\n                        : domainIcon(computeDomain(entry.entity_id))}\n                    ></ha-icon>\n                    <paper-item-body two-line>\n                      <div class=\"name\">\n                        ${computeEntityRegistryName(this.hass!, entry) ||\n                          `(${this.hass!.localize(\n                            \"state.default.unavailable\"\n                          )})`}\n                      </div>\n                      <div class=\"secondary entity-id\">\n                        ${entry.entity_id}\n                      </div>\n                    </paper-item-body>\n                    <div class=\"platform\">\n                      ${entry.platform}\n                      ${entry.disabled_by\n                        ? html`\n                            <br />(disabled)\n                          `\n                        : \"\"}\n                    </div>\n                  </paper-icon-item>\n                `;\n              }\n            )}\n          </ha-card>\n        </ha-config-section>\n      </hass-subpage>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n    loadEntityRegistryDetailDialog();\n  }\n\n  protected updated(changedProps) {\n    super.updated(changedProps);\n    if (!this._unsubEntities) {\n      this._unsubEntities = subscribeEntityRegistry(\n        this.hass.connection,\n        (entities) => {\n          this._entities = entities.sort((ent1, ent2) =>\n            compare(ent1.entity_id, ent2.entity_id)\n          );\n        }\n      );\n    }\n  }\n\n  private _showDisabledChanged(ev: Event) {\n    this._showDisabled = (ev.target as HaSwitch).checked;\n  }\n\n  private _openEditEntry(ev: MouseEvent): void {\n    const entry = (ev.currentTarget! as any).entry;\n    showEntityRegistryDetailDialog(this, {\n      entry,\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        margin-bottom: 24px;\n        direction: ltr;\n      }\n      paper-icon-item {\n        cursor: pointer;\n        color: var(--primary-text-color);\n      }\n      ha-icon {\n        margin-left: 8px;\n      }\n      .platform {\n        text-align: right;\n        margin: 0 0 0 8px;\n      }\n      .disabled-entry {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-entity-registry\", HaConfigEntityRegistry);\n"],"sourceRoot":""}