{"version":3,"sources":["webpack:///./src/resources/markdown_worker.ts","webpack:///./src/components/ha-markdown.ts","webpack:///./src/components/ha-paper-slider.js","webpack:///./src/components/ha-form.js","webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/profile/ha-mfa-module-setup-flow.js"],"names":["addMethods","__webpack_require__","methods","module","exports","w","Worker","p","name","worker","HaMarkdown","lit_element__WEBPACK_IMPORTED_MODULE_1__","[object Object]","this","content","allowSvg","_resize","Object","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__","changedProps","super","update","workerize_loader_resources_markdown_worker__WEBPACK_IMPORTED_MODULE_2___default","_render","innerHTML","renderMarkdown","breaks","gfm","tables","walker","document","createTreeWalker","nextNode","node","currentNode","HTMLAnchorElement","host","location","target","rel","addEventListener","tslib__WEBPACK_IMPORTED_MODULE_0__","type","Boolean","PaperSliderClass","customElements","get","define","template","tpl","createElement","styleEl","appendChild","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_6__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_7__","_mixins_events_mixin__WEBPACK_IMPORTED_MODULE_9__","properties","data","notify","schema","error","computeLabel","Function","value","computeSuffix","description","unit_of_measurement","computeError","input","shadowRoot","querySelector","focus","val","Array","isArray","a","b","indexOf","obj","item","ev","detail","model","Number","set","unmaskedPassword","HaIronFocusablesHelper","getTabbableNodes","result","_collectTabbableNodes","iron_focusables_helper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","children","element","tabIndex","_normalizedTabIndex","needsSort","push","localName","polymer_dom","getDistributedNodes","root","i","length","paperDialogClass","haTabFixBehaviorImpl","_focusableNodes","legacy_class","r","__webpack_exports__","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_4__","_mixins_localize_mixin__WEBPACK_IMPORTED_MODULE_10__","instance","_hass","_dialogClosedCallback","_instance","_loading","_errorMsg","String","_opened","_step","_stepData","ready","keyCode","_submitStep","hass","continueFlowId","mfaModuleId","dialogClosedCallback","_createdFromHandler","fetchStep","callWS","flow_id","mfa_module_id","curInstance","then","step","_processStep","setTimeout","$","dialog","center","user_input","err","body","message","errors","keys","flowFinished","includes","_flowDone","localize","handler","reason","step_id","args","placeholders","description_placeholders","forEach","key"],"mappings":"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","file":"chunk.cb983c88c6d3d7ccf6f7.js","sourcesContent":["\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"renderMarkdown\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"ad5fa9e10cb010426cf0.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t","import { UpdatingElement, property, customElement } from \"lit-element\";\n// eslint-disable-next-line import/no-webpack-loader-syntax\n// @ts-ignore\n// tslint:disable-next-line: no-implicit-dependencies\nimport markdownWorker from \"workerize-loader!../resources/markdown_worker\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\nlet worker: any | undefined;\n\n@customElement(\"ha-markdown\")\nclass HaMarkdown extends UpdatingElement {\n  @property() public content = \"\";\n  @property({ type: Boolean }) public allowSvg = false;\n\n  protected update(changedProps) {\n    super.update(changedProps);\n\n    if (!worker) {\n      worker = markdownWorker();\n    }\n\n    this._render();\n  }\n\n  private async _render() {\n    this.innerHTML = await worker.renderMarkdown(\n      this.content,\n      {\n        breaks: true,\n        gfm: true,\n        tables: true,\n      },\n      {\n        allowSvg: this.allowSvg,\n      }\n    );\n\n    this._resize();\n\n    const walker = document.createTreeWalker(\n      this,\n      1 /* SHOW_ELEMENT */,\n      null,\n      false\n    );\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode;\n\n      // Open external links in a new window\n      if (\n        node instanceof HTMLAnchorElement &&\n        node.host !== document.location.host\n      ) {\n        node.target = \"_blank\";\n\n        // protect referrer on external links and deny window.opener access for security reasons\n        // (see https://mathiasbynens.github.io/rel-noopener/)\n        node.rel = \"noreferrer noopener\";\n\n        // Fire a resize event when images loaded to notify content resized\n      } else if (node) {\n        node.addEventListener(\"load\", this._resize);\n      }\n    }\n  }\n\n  private _resize = () => fireEvent(this, \"iron-resize\");\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-markdown\": HaMarkdown;\n  }\n}\n","import \"@polymer/paper-slider/paper-slider\";\n\n/**\n * @polymer\n * @customElement\n * @appliesMixin paper-slider\n */\nconst PaperSliderClass = customElements.get(\"paper-slider\");\n\nclass HaPaperSlider extends PaperSliderClass {\n  static get template() {\n    const tpl = document.createElement(\"template\");\n    tpl.innerHTML = PaperSliderClass.template.innerHTML;\n    const styleEl = document.createElement(\"style\");\n    styleEl.innerHTML = `\n      .pin > .slider-knob > .slider-knob-inner {\n        font-size:  var(--ha-paper-slider-pin-font-size, 10px);\n        line-height: normal;\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::before {\n        top: unset;\n        margin-left: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        width: 2.2em;\n        height: 2.2em;\n\n        -webkit-transform-origin: left bottom;\n        transform-origin: left bottom;\n        -webkit-transform: rotate(-45deg) scale(0) translate(0);\n        transform: rotate(-45deg) scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::before {\n        -webkit-transform: rotate(-45deg) scale(1) translate(7px, -7px);\n        transform: rotate(-45deg) scale(1) translate(7px, -7px);\n      }\n\n      .pin > .slider-knob > .slider-knob-inner::after {\n        top: unset;\n        font-size: unset;\n\n        bottom: calc(15px + var(--calculated-paper-slider-height)/2);\n        left: 50%;\n        margin-left: -1.1em;\n        width: 2.2em;\n        height: 2.1em;\n\n        -webkit-transform-origin: center bottom;\n        transform-origin: center bottom;\n        -webkit-transform: scale(0) translate(0);\n        transform: scale(0) translate(0);\n      }\n\n      .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -10px);\n        transform: scale(1) translate(0, -10px);\n      }\n\n      :host([dir=\"rtl\"]) .pin.expand > .slider-knob > .slider-knob-inner::after {\n        -webkit-transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n        transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n        }\n    `;\n    tpl.content.appendChild(styleEl);\n    return tpl;\n  }\n}\ncustomElements.define(\"ha-paper-slider\", HaPaperSlider);\n","import \"@polymer/paper-checkbox/paper-checkbox\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-paper-slider\";\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaForm extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        .error {\n          color: red;\n        }\n        paper-checkbox {\n          display: inline-block;\n          padding: 22px 0;\n        }\n      </style>\n      <template is=\"dom-if\" if=\"[[_isArray(schema)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[error.base]]\">\n          <div class=\"error\">[[computeError(error.base, schema)]]</div>\n        </template>\n\n        <template is=\"dom-repeat\" items=\"[[schema]]\">\n          <ha-form\n            data=\"[[_getValue(data, item)]]\"\n            schema=\"[[item]]\"\n            error=\"[[_getValue(error, item)]]\"\n            on-data-changed=\"_valueChanged\"\n            compute-error=\"[[computeError]]\"\n            compute-label=\"[[computeLabel]]\"\n            compute-suffix=\"[[computeSuffix]]\"\n          ></ha-form>\n        </template>\n      </template>\n      <template is=\"dom-if\" if=\"[[!_isArray(schema)]]\" restamp=\"\">\n        <template is=\"dom-if\" if=\"[[error]]\">\n          <div class=\"error\">[[computeError(error, schema)]]</div>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"string\")]]'\n          restamp=\"\"\n        >\n          <template\n            is=\"dom-if\"\n            if='[[_includes(schema.name, \"password\")]]'\n            restamp=\"\"\n          >\n            <paper-input\n              type=\"[[_passwordFieldType(unmaskedPassword)]]\"\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            >\n              <paper-icon-button\n                toggles\n                active=\"{{unmaskedPassword}}\"\n                slot=\"suffix\"\n                icon=\"[[_passwordFieldIcon(unmaskedPassword)]]\"\n                id=\"iconButton\"\n                title=\"Click to toggle between masked and clear password\"\n              >\n              </paper-icon-button>\n            </paper-input>\n          </template>\n          <template\n            is=\"dom-if\"\n            if='[[!_includes(schema.name, \"password\")]]'\n            restamp=\"\"\n          >\n            <paper-input\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            ></paper-input>\n          </template>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"integer\")]]'\n          restamp=\"\"\n        >\n          <template is=\"dom-if\" if=\"[[_isRange(schema)]]\" restamp=\"\">\n            <div>\n              [[computeLabel(schema)]]\n              <ha-paper-slider\n                pin=\"\"\n                value=\"{{data}}\"\n                min=\"[[schema.valueMin]]\"\n                max=\"[[schema.valueMax]]\"\n              ></ha-paper-slider>\n            </div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_isRange(schema)]]\" restamp=\"\">\n            <paper-input\n              label=\"[[computeLabel(schema)]]\"\n              value=\"{{data}}\"\n              type=\"number\"\n              required=\"[[schema.required]]\"\n              auto-validate=\"[[schema.required]]\"\n              error-message=\"Required\"\n            ></paper-input>\n          </template>\n        </template>\n\n        <template is=\"dom-if\" if='[[_equals(schema.type, \"float\")]]' restamp=\"\">\n          <!-- TODO -->\n          <paper-input\n            label=\"[[computeLabel(schema)]]\"\n            value=\"{{data}}\"\n            required=\"[[schema.required]]\"\n            auto-validate=\"[[schema.required]]\"\n            error-message=\"Required\"\n          >\n            <span suffix=\"\" slot=\"suffix\">[[computeSuffix(schema)]]</span>\n          </paper-input>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"boolean\")]]'\n          restamp=\"\"\n        >\n          <div>\n            <paper-checkbox checked=\"{{data}}\"\n              >[[computeLabel(schema)]]</paper-checkbox\n            >\n          </div>\n        </template>\n\n        <template\n          is=\"dom-if\"\n          if='[[_equals(schema.type, \"select\")]]'\n          restamp=\"\"\n        >\n          <paper-dropdown-menu label=\"[[computeLabel(schema)]]\">\n            <paper-listbox\n              slot=\"dropdown-content\"\n              attr-for-selected=\"item-name\"\n              selected=\"{{data}}\"\n            >\n              <template is=\"dom-repeat\" items=\"[[schema.options]]\">\n                <paper-item item-name$=\"[[_optionValue(item)]]\"\n                  >[[_optionLabel(item)]]</paper-item\n                >\n              </template>\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </template>\n      </template>\n    `;\n  }\n\n  static get properties() {\n    return {\n      data: {\n        type: Object,\n        notify: true,\n      },\n      schema: Object,\n      error: Object,\n\n      // A function that computes the label to be displayed for a given\n      // schema object.\n      computeLabel: {\n        type: Function,\n        value: () => (schema) => schema && schema.name,\n      },\n\n      // A function that computes the suffix to be displayed for a given\n      // schema object.\n      computeSuffix: {\n        type: Function,\n        value: () => (schema) =>\n          schema &&\n          schema.description &&\n          schema.description.unit_of_measurement,\n      },\n\n      // A function that computes an error message to be displayed for a\n      // given error ID, and relevant schema object\n      computeError: {\n        type: Function,\n        value: () => (error, schema) => error, // eslint-disable-line no-unused-vars\n      },\n    };\n  }\n\n  focus() {\n    const input = this.shadowRoot.querySelector(\n      \"ha-form, paper-input, ha-paper-slider, paper-checkbox, paper-dropdown-menu\"\n    );\n\n    if (!input) {\n      return;\n    }\n\n    input.focus();\n  }\n\n  _isArray(val) {\n    return Array.isArray(val);\n  }\n\n  _isRange(schema) {\n    return \"valueMin\" in schema && \"valueMax\" in schema;\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _includes(a, b) {\n    return a.indexOf(b) >= 0;\n  }\n\n  _getValue(obj, item) {\n    if (obj) {\n      return obj[item.name];\n    }\n    return null;\n  }\n\n  _valueChanged(ev) {\n    let value = ev.detail.value;\n    if (ev.model.item.type === \"integer\") {\n      value = Number(ev.detail.value);\n    }\n    this.set([\"data\", ev.model.item.name], value);\n  }\n\n  _passwordFieldType(unmaskedPassword) {\n    return unmaskedPassword ? \"text\" : \"password\";\n  }\n\n  _passwordFieldIcon(unmaskedPassword) {\n    return unmaskedPassword ? \"hass:eye-off\" : \"hass:eye\";\n  }\n\n  _optionValue(item) {\n    return Array.isArray(item) ? item[0] : item;\n  }\n\n  _optionLabel(item) {\n    return Array.isArray(item) ? item[1] : item;\n  }\n}\n\ncustomElements.define(\"ha-form\", HaForm);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../components/dialog/ha-paper-dialog\";\nimport \"../../components/ha-form\";\nimport \"../../components/ha-markdown\";\nimport \"../../resources/ha-style\";\n\nimport { EventsMixin } from \"../../mixins/events-mixin\";\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\n\nlet instance = 0;\n\n/*\n * @appliesMixin LocalizeMixin\n * @appliesMixin EventsMixin\n */\nclass HaMfaModuleSetupFlow extends LocalizeMixin(EventsMixin(PolymerElement)) {\n  static get template() {\n    return html`\n      <style include=\"ha-style-dialog\">\n        .error {\n          color: red;\n        }\n        ha-paper-dialog {\n          max-width: 500px;\n        }\n        ha-markdown img:first-child:last-child,\n        ha-markdown svg:first-child:last-child {\n          display: block;\n          margin: 0 auto;\n        }\n        ha-markdown a {\n          color: var(--primary-color);\n        }\n        .init-spinner {\n          padding: 10px 100px 34px;\n          text-align: center;\n        }\n        .submit-spinner {\n          margin-right: 16px;\n        }\n      </style>\n      <ha-paper-dialog\n        id=\"dialog\"\n        with-backdrop=\"\"\n        opened=\"{{_opened}}\"\n        on-opened-changed=\"_openedChanged\"\n      >\n        <h2>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n            [[localize('ui.panel.profile.mfa_setup.title_aborted')]]\n          </template>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n            [[localize('ui.panel.profile.mfa_setup.title_success')]]\n          </template>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n            [[_computeStepTitle(localize, _step)]]\n          </template>\n        </h2>\n        <paper-dialog-scrollable>\n          <template is=\"dom-if\" if=\"[[_errorMsg]]\">\n            <div class=\"error\">[[_errorMsg]]</div>\n          </template>\n          <template is=\"dom-if\" if=\"[[!_step]]\">\n            <div class=\"init-spinner\">\n              <paper-spinner active></paper-spinner>\n            </div>\n          </template>\n          <template is=\"dom-if\" if=\"[[_step]]\">\n            <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n              <ha-markdown\n                allowsvg\n                content=\"[[_computeStepAbortedReason(localize, _step)]]\"\n              ></ha-markdown>\n            </template>\n\n            <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n              <p>\n                [[localize('ui.panel.profile.mfa_setup.step_done', 'step',\n                _step.title)]]\n              </p>\n            </template>\n\n            <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n              <template\n                is=\"dom-if\"\n                if=\"[[_computeStepDescription(localize, _step)]]\"\n              >\n                <ha-markdown\n                  allowsvg\n                  content=\"[[_computeStepDescription(localize, _step)]]\"\n                ></ha-markdown>\n              </template>\n\n              <ha-form\n                data=\"{{_stepData}}\"\n                schema=\"[[_step.data_schema]]\"\n                error=\"[[_step.errors]]\"\n                compute-label=\"[[_computeLabelCallback(localize, _step)]]\"\n                compute-error=\"[[_computeErrorCallback(localize, _step)]]\"\n              ></ha-form>\n            </template>\n          </template>\n        </paper-dialog-scrollable>\n        <div class=\"buttons\">\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'abort')]]\">\n            <mwc-button on-click=\"_flowDone\"\n              >[[localize('ui.panel.profile.mfa_setup.close')]]</mwc-button\n            >\n          </template>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'create_entry')]]\">\n            <mwc-button on-click=\"_flowDone\"\n              >[[localize('ui.panel.profile.mfa_setup.close')]]</mwc-button\n            >\n          </template>\n          <template is=\"dom-if\" if=\"[[_equals(_step.type, 'form')]]\">\n            <template is=\"dom-if\" if=\"[[_loading]]\">\n              <div class=\"submit-spinner\">\n                <paper-spinner active></paper-spinner>\n              </div>\n            </template>\n            <template is=\"dom-if\" if=\"[[!_loading]]\">\n              <mwc-button on-click=\"_submitStep\"\n                >[[localize('ui.panel.profile.mfa_setup.submit')]]</mwc-button\n              >\n            </template>\n          </template>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  static get properties() {\n    return {\n      _hass: Object,\n      _dialogClosedCallback: Function,\n      _instance: Number,\n\n      _loading: {\n        type: Boolean,\n        value: false,\n      },\n\n      // Error message when can't talk to server etc\n      _errorMsg: String,\n\n      _opened: {\n        type: Boolean,\n        value: false,\n      },\n\n      _step: {\n        type: Object,\n        value: null,\n      },\n\n      /*\n       * Store user entered data.\n       */\n      _stepData: Object,\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._submitStep();\n      }\n    });\n  }\n\n  showDialog({ hass, continueFlowId, mfaModuleId, dialogClosedCallback }) {\n    this.hass = hass;\n    this._instance = instance++;\n    this._dialogClosedCallback = dialogClosedCallback;\n    this._createdFromHandler = !!mfaModuleId;\n    this._loading = true;\n    this._opened = true;\n\n    const fetchStep = continueFlowId\n      ? this.hass.callWS({\n          type: \"auth/setup_mfa\",\n          flow_id: continueFlowId,\n        })\n      : this.hass.callWS({\n          type: \"auth/setup_mfa\",\n          mfa_module_id: mfaModuleId,\n        });\n\n    const curInstance = this._instance;\n\n    fetchStep.then((step) => {\n      if (curInstance !== this._instance) return;\n\n      this._processStep(step);\n      this._loading = false;\n      // When the flow changes, center the dialog.\n      // Don't do it on each step or else the dialog keeps bouncing.\n      setTimeout(() => this.$.dialog.center(), 0);\n    });\n  }\n\n  _submitStep() {\n    this._loading = true;\n    this._errorMsg = null;\n\n    const curInstance = this._instance;\n\n    this.hass\n      .callWS({\n        type: \"auth/setup_mfa\",\n        flow_id: this._step.flow_id,\n        user_input: this._stepData,\n      })\n      .then(\n        (step) => {\n          if (curInstance !== this._instance) return;\n\n          this._processStep(step);\n          this._loading = false;\n        },\n        (err) => {\n          this._errorMsg =\n            (err && err.body && err.body.message) || \"Unknown error occurred\";\n          this._loading = false;\n        }\n      );\n  }\n\n  _processStep(step) {\n    if (!step.errors) step.errors = {};\n    this._step = step;\n    // We got a new form if there are no errors.\n    if (Object.keys(step.errors).length === 0) {\n      this._stepData = {};\n    }\n  }\n\n  _flowDone() {\n    this._opened = false;\n    const flowFinished =\n      this._step && [\"create_entry\", \"abort\"].includes(this._step.type);\n\n    if (this._step && !flowFinished && this._createdFromHandler) {\n      // console.log('flow not finish');\n    }\n\n    this._dialogClosedCallback({\n      flowFinished,\n    });\n\n    this._errorMsg = null;\n    this._step = null;\n    this._stepData = {};\n    this._dialogClosedCallback = null;\n  }\n\n  _equals(a, b) {\n    return a === b;\n  }\n\n  _openedChanged(ev) {\n    // Closed dialog by clicking on the overlay\n    if (this._step && !ev.detail.value) {\n      this._flowDone();\n    }\n  }\n\n  _computeStepAbortedReason(localize, step) {\n    return localize(\n      `component.auth.mfa_setup.${step.handler}.abort.${step.reason}`\n    );\n  }\n\n  _computeStepTitle(localize, step) {\n    return (\n      localize(\n        `component.auth.mfa_setup.${step.handler}.step.${step.step_id}.title`\n      ) || \"Setup Multi-factor Authentication\"\n    );\n  }\n\n  _computeStepDescription(localize, step) {\n    const args = [\n      `component.auth.mfa_setup.${step.handler}.step.${\n        step.step_id\n      }.description`,\n    ];\n    const placeholders = step.description_placeholders || {};\n    Object.keys(placeholders).forEach((key) => {\n      args.push(key);\n      args.push(placeholders[key]);\n    });\n    return localize(...args);\n  }\n\n  _computeLabelCallback(localize, step) {\n    // Returns a callback for ha-form to calculate labels per schema object\n    return (schema) =>\n      localize(\n        `component.auth.mfa_setup.${step.handler}.step.${step.step_id}.data.${\n          schema.name\n        }`\n      ) || schema.name;\n  }\n\n  _computeErrorCallback(localize, step) {\n    // Returns a callback for ha-form to calculate error messages\n    return (error) =>\n      localize(`component.auth.mfa_setup.${step.handler}.error.${error}`) ||\n      error;\n  }\n}\n\ncustomElements.define(\"ha-mfa-module-setup-flow\", HaMfaModuleSetupFlow);\n"],"sourceRoot":""}