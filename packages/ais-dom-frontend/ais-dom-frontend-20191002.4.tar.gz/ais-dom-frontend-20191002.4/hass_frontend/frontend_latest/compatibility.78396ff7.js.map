{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/es6-object-assign/index.js","webpack:///./node_modules/mdn-polyfills/Array.prototype.includes.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/unfetch/polyfill/polyfill.mjs","webpack:///./node_modules/unfetch/src/index.mjs","webpack:///./src/entrypoints/compatibility.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","assign","target","firstSource","TypeError","to","arguments","length","nextSource","keysArray","keys","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","undefined","polyfill","configurable","writable","Array","includes","this","e","parseInt","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","fetch","url","options","request","XMLHttpRequest","all","headers","response","ok","status","statusText","responseURL","text","responseText","json","JSON","parse","blob","Blob","clone","entries","toLowerCase","has","open","onload","getAllResponseHeaders","replace","onerror","withCredentials","credentials","setRequestHeader","send","body","a","map","String","padStart","targetLength","padString","repeat"],"mappings":"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","file":"compatibility.78396ff7.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/frontend_latest/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 166);\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","Array.prototype.includes||(Array.prototype.includes=function(r){if(null==this)throw new TypeError(\"Array.prototype.includes called on null or undefined\");var e=Object(this),n=parseInt(e.length,10)||0;if(0===n)return!1;var t,o,i=parseInt(arguments[1],10)||0;for(0<=i?t=i:(t=n+i)<0&&(t=0);t<n;){if(r===(o=e[t])||r!=r&&o!=o)return!0;t++}return!1});\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import unfetch from '../src/index.mjs';\nif (!self.fetch) self.fetch = unfetch;\n","export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(JSON.parse(request.responseText)),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n","import \"mdn-polyfills/Array.prototype.includes\";\nimport \"unfetch/polyfill\";\nimport \"regenerator-runtime/runtime\";\nimport objAssign from \"es6-object-assign\";\n\nobjAssign.polyfill();\n\nif (Object.values === undefined) {\n  Object.values = (target) => {\n    return Object.keys(target).map((key) => target[key]);\n  };\n}\n\n/* tslint:disable */\n// https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nif (!String.prototype.padStart) {\n  String.prototype.padStart = function padStart(targetLength, padString) {\n    targetLength = targetLength >> 0; //truncate if number, or convert non-number to 0;\n    padString = String(typeof padString !== \"undefined\" ? padString : \" \");\n    if (this.length >= targetLength) {\n      return String(this);\n    } else {\n      targetLength = targetLength - this.length;\n      if (targetLength > padString.length) {\n        padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n      }\n      return padString.slice(0, targetLength) + String(this);\n    }\n  };\n}\n/* tslint:enable */\n"],"sourceRoot":""}