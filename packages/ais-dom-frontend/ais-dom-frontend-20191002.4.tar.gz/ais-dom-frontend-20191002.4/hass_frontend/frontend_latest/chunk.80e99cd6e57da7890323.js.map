{"version":3,"sources":["webpack:///./src/mixins/events-mixin.js","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/common/entity/compute_state_name.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./src/common/entity/compute_object_id.ts","webpack:///./node_modules/@polymer/iron-image/iron-image.js","webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/panels/map/ha-entity-marker.js","webpack:///./src/panels/map/ha-panel-map.js"],"names":["__webpack_require__","d","__webpack_exports__","EventsMixin","_polymer_polymer_lib_utils_mixin__WEBPACK_IMPORTED_MODULE_0__","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_1__","Object","superClass","[object Object]","type","detail","options","node","this","properties","hass","localize","Function","computed","computeStateName","_compute_object_id__WEBPACK_IMPORTED_MODULE_0__","stateObj","undefined","attributes","friendly_name","entity_id","replace","HaIcon","ironIconClass","customElements","get","loaded","eventName","methodName","super","listen","_iconsetName","e","then","bind","define","computeStateDomain","_compute_domain__WEBPACK_IMPORTED_MODULE_0__","computeObjectId","entityId","substr","indexOf","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_lib_utils_resolve_url_js__WEBPACK_IMPORTED_MODULE_3__","_template","is","src","String","value","alt","crossorigin","preventLoad","Boolean","sizing","reflectToAttribute","position","preload","placeholder","observer","fade","notify","readOnly","loading","error","width","Number","height","observers","created","_resolvedSrc","_imgOnLoad","$","img","_resolveSrc","_setLoading","_setLoaded","_setError","_imgOnError","removeAttribute","sizedImgDiv","style","backgroundImage","_computePlaceholderHidden","_computePlaceholderClassName","_computeImgDivHidden","_computeImgDivARIAHidden","_computeImgDivARIALabel","split","pop","_computeImgHidden","_widthChanged","isNaN","_heightChanged","_loadStateObserver","newResolvedSrc","_placeholderChanged","_transformChanged","sizedImgDivStyle","placeholderStyle","backgroundSize","backgroundPosition","backgroundRepeat","testSrc","resolved","baseURIAnchor","href","length","location","origin","protocol","host","setupLeafletMap","createTileLayer","async","mapElement","darkMode","parentNode","Error","Leaflet","t","Icon","Default","imagePath","map","document","createElement","setAttribute","appendChild","setView","addTo","leaflet","tileLayer","Browser","retina","attribution","subdomains","minZoom","maxZoom","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_2__","_mixins_events_mixin__WEBPACK_IMPORTED_MODULE_3__","template","entityName","entityPicture","ready","addEventListener","ev","badgeTap","stopPropagation","fire","r","_common_entity_compute_state_domain__WEBPACK_IMPORTED_MODULE_6__","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_7__","_mixins_localize_mixin__WEBPACK_IMPORTED_MODULE_8__","_common_dom_setup_leaflet_map__WEBPACK_IMPORTED_MODULE_9__","narrow","connectedCallback","loadMap","_map","drawEntities","invalidateSize","fitMap","remove","bounds","_mapItems","LatLng","config","latitude","longitude","latLngBounds","item","getLatLng","fitBounds","pad","forEach","marker","mapItems","keys","states","entity","title","hidden","icon","passive","iconHTML","el","outerHTML","divIcon","html","iconSize","className","push","interactive","circle","color","radius","entity_picture","part","join","gps_accuracy"],"mappings":"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","file":"chunk.80e99cd6e57da7890323.js","sourcesContent":["import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeObjectId } from \"./compute_object_id\";\n\nexport const computeStateName = (stateObj: HassEntity): string => {\n  return stateObj.attributes.friendly_name === undefined\n    ? computeObjectId(stateObj.entity_id).replace(/_/g, \" \")\n    : stateObj.attributes.friendly_name || \"\";\n};\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport const computeStateDomain = (stateObj: HassEntity) => {\n  return computeDomain(stateObj.entity_id);\n};\n","/** Compute the object ID of a state. */\nexport const computeObjectId = (entityId: string): string => {\n  return entityId.substr(entityId.indexOf(\".\") + 1);\n};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\nimport {resolveUrl} from '@polymer/polymer/lib/utils/resolve-url.js';\n\n/**\n`iron-image` is an element for displaying an image that provides useful sizing and\npreloading options not found on the standard `<img>` tag.\n\nThe `sizing` option allows the image to be either cropped (`cover`) or\nletterboxed (`contain`) to fill a fixed user-size placed on the element.\n\nThe `preload` option prevents the browser from rendering the image until the\nimage is fully loaded.  In the interim, either the element's CSS `background-color`\ncan be be used as the placeholder, or the `placeholder` property can be\nset to a URL (preferably a data-URI, for instant rendering) for an\nplaceholder image.\n\nThe `fade` option (only valid when `preload` is set) will cause the placeholder\nimage/color to be faded out once the image is rendered.\n\nExamples:\n\n  Basically identical to `<img src=\"...\">` tag:\n\n    <iron-image src=\"http://lorempixel.com/400/400\"></iron-image>\n\n  Will letterbox the image to fit:\n\n    <iron-image style=\"width:400px; height:400px;\" sizing=\"contain\"\n      src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will crop the image to fit:\n\n    <iron-image style=\"width:400px; height:400px;\" sizing=\"cover\"\n      src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will show light-gray background until the image loads:\n\n    <iron-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will show a base-64 encoded placeholder image until the image loads:\n\n    <iron-image style=\"width:400px; height:400px;\" placeholder=\"data:image/gif;base64,...\"\n      sizing=\"cover\" preload src=\"http://lorempixel.com/600/400\"></iron-image>\n\n  Will fade the light-gray background out once the image is loaded:\n\n    <iron-image style=\"width:400px; height:400px; background-color: lightgray;\"\n      sizing=\"cover\" preload fade src=\"http://lorempixel.com/600/400\"></iron-image>\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-image-placeholder` | Mixin applied to #placeholder | `{}`\n`--iron-image-width` | Sets the width of the wrapped image | `auto`\n`--iron-image-height` | Sets the height of the wrapped image | `auto`\n\n@group Iron Elements\n@element iron-image\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        overflow: hidden;\n        position: relative;\n      }\n\n      #baseURIAnchor {\n        display: none;\n      }\n\n      #sizedImgDiv {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n\n        display: none;\n      }\n\n      #img {\n        display: block;\n        width: var(--iron-image-width, auto);\n        height: var(--iron-image-height, auto);\n      }\n\n      :host([sizing]) #sizedImgDiv {\n        display: block;\n      }\n\n      :host([sizing]) #img {\n        display: none;\n      }\n\n      #placeholder {\n        position: absolute;\n        top: 0px;\n        right: 0px;\n        bottom: 0px;\n        left: 0px;\n\n        background-color: inherit;\n        opacity: 1;\n\n        @apply --iron-image-placeholder;\n      }\n\n      #placeholder.faded-out {\n        transition: opacity 0.5s linear;\n        opacity: 0;\n      }\n    </style>\n\n    <a id=\"baseURIAnchor\" href=\"#\"></a>\n    <div id=\"sizedImgDiv\" role=\"img\" hidden$=\"[[_computeImgDivHidden(sizing)]]\" aria-hidden$=\"[[_computeImgDivARIAHidden(alt)]]\" aria-label$=\"[[_computeImgDivARIALabel(alt, src)]]\"></div>\n    <img id=\"img\" alt$=\"[[alt]]\" hidden$=\"[[_computeImgHidden(sizing)]]\" crossorigin$=\"[[crossorigin]]\" on-load=\"_imgOnLoad\" on-error=\"_imgOnError\">\n    <div id=\"placeholder\" hidden$=\"[[_computePlaceholderHidden(preload, fade, loading, loaded)]]\" class$=\"[[_computePlaceholderClassName(preload, fade, loading, loaded)]]\"></div>\n`,\n\n  is: 'iron-image',\n\n  properties: {\n    /**\n     * The URL of an image.\n     */\n    src: {type: String, value: ''},\n\n    /**\n     * A short text alternative for the image.\n     */\n    alt: {type: String, value: null},\n\n    /**\n     * CORS enabled images support:\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image\n     */\n    crossorigin: {type: String, value: null},\n\n    /**\n     * When true, the image is prevented from loading and any placeholder is\n     * shown.  This may be useful when a binding to the src property is known to\n     * be invalid, to prevent 404 requests.\n     */\n    preventLoad: {type: Boolean, value: false},\n\n    /**\n     * Sets a sizing option for the image.  Valid values are `contain` (full\n     * aspect ratio of the image is contained within the element and\n     * letterboxed) or `cover` (image is cropped in order to fully cover the\n     * bounds of the element), or `null` (default: image takes natural size).\n     */\n    sizing: {type: String, value: null, reflectToAttribute: true},\n\n    /**\n     * When a sizing option is used (`cover` or `contain`), this determines\n     * how the image is aligned within the element bounds.\n     */\n    position: {type: String, value: 'center'},\n\n    /**\n     * When `true`, any change to the `src` property will cause the\n     * `placeholder` image to be shown until the new image has loaded.\n     */\n    preload: {type: Boolean, value: false},\n\n    /**\n     * This image will be used as a background/placeholder until the src image\n     * has loaded.  Use of a data-URI for placeholder is encouraged for instant\n     * rendering.\n     */\n    placeholder: {type: String, value: null, observer: '_placeholderChanged'},\n\n    /**\n     * When `preload` is true, setting `fade` to true will cause the image to\n     * fade into place.\n     */\n    fade: {type: Boolean, value: false},\n\n    /**\n     * Read-only value that is true when the image is loaded.\n     */\n    loaded: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Read-only value that tracks the loading state of the image when the\n     * `preload` option is used.\n     */\n    loading: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Read-only value that indicates that the last set `src` failed to load.\n     */\n    error: {notify: true, readOnly: true, type: Boolean, value: false},\n\n    /**\n     * Can be used to set the width of image (e.g. via binding); size may also\n     * be set via CSS.\n     */\n    width: {observer: '_widthChanged', type: Number, value: null},\n\n    /**\n     * Can be used to set the height of image (e.g. via binding); size may also\n     * be set via CSS.\n     *\n     * @attribute height\n     * @type number\n     * @default null\n     */\n    height: {observer: '_heightChanged', type: Number, value: null},\n  },\n\n  observers: [\n    '_transformChanged(sizing, position)',\n    '_loadStateObserver(src, preventLoad)'\n  ],\n\n  created: function() {\n    this._resolvedSrc = '';\n  },\n\n  _imgOnLoad: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this._setLoading(false);\n    this._setLoaded(true);\n    this._setError(false);\n  },\n\n  _imgOnError: function() {\n    if (this.$.img.src !== this._resolveSrc(this.src)) {\n      return;\n    }\n\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    this._setLoading(false);\n    this._setLoaded(false);\n    this._setError(true);\n  },\n\n  _computePlaceholderHidden: function() {\n    return !this.preload || (!this.fade && !this.loading && this.loaded);\n  },\n\n  _computePlaceholderClassName: function() {\n    return (this.preload && this.fade && !this.loading && this.loaded) ?\n        'faded-out' :\n        '';\n  },\n\n  _computeImgDivHidden: function() {\n    return !this.sizing;\n  },\n\n  _computeImgDivARIAHidden: function() {\n    return this.alt === '' ? 'true' : undefined;\n  },\n\n  _computeImgDivARIALabel: function() {\n    if (this.alt !== null) {\n      return this.alt;\n    }\n\n    // Polymer.ResolveUrl.resolveUrl will resolve '' relative to a URL x to\n    // that URL x, but '' is the default for src.\n    if (this.src === '') {\n      return '';\n    }\n\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    var resolved = this._resolveSrc(this.src);\n    // Remove query parts, get file name.\n    return resolved.replace(/[?|#].*/g, '').split('/').pop();\n  },\n\n  _computeImgHidden: function() {\n    return !!this.sizing;\n  },\n\n  _widthChanged: function() {\n    this.style.width = isNaN(this.width) ? this.width : this.width + 'px';\n  },\n\n  _heightChanged: function() {\n    this.style.height = isNaN(this.height) ? this.height : this.height + 'px';\n  },\n\n  _loadStateObserver: function(src, preventLoad) {\n    var newResolvedSrc = this._resolveSrc(src);\n    if (newResolvedSrc === this._resolvedSrc) {\n      return;\n    }\n\n    this._resolvedSrc = '';\n    this.$.img.removeAttribute('src');\n    this.$.sizedImgDiv.style.backgroundImage = '';\n\n    if (src === '' || preventLoad) {\n      this._setLoading(false);\n      this._setLoaded(false);\n      this._setError(false);\n    } else {\n      this._resolvedSrc = newResolvedSrc;\n      this.$.img.src = this._resolvedSrc;\n      this.$.sizedImgDiv.style.backgroundImage =\n          'url(\"' + this._resolvedSrc + '\")';\n\n      this._setLoading(true);\n      this._setLoaded(false);\n      this._setError(false);\n    }\n  },\n\n  _placeholderChanged: function() {\n    this.$.placeholder.style.backgroundImage =\n        this.placeholder ? 'url(\"' + this.placeholder + '\")' : '';\n  },\n\n  _transformChanged: function() {\n    var sizedImgDivStyle = this.$.sizedImgDiv.style;\n    var placeholderStyle = this.$.placeholder.style;\n\n    sizedImgDivStyle.backgroundSize = placeholderStyle.backgroundSize =\n        this.sizing;\n\n    sizedImgDivStyle.backgroundPosition = placeholderStyle.backgroundPosition =\n        this.sizing ? this.position : '';\n\n    sizedImgDivStyle.backgroundRepeat = placeholderStyle.backgroundRepeat =\n        this.sizing ? 'no-repeat' : '';\n  },\n\n  _resolveSrc: function(testSrc) {\n    var resolved = resolveUrl(testSrc, this.$.baseURIAnchor.href);\n    // NOTE: Use of `URL` was removed here because IE11 doesn't support\n    // constructing it. If this ends up being problematic, we should\n    // consider reverting and adding the URL polyfill as a dev dependency.\n    if (resolved.length >= 2 && resolved[0] === '/' && resolved[1] !== '/') {\n      // In IE location.origin might not work\n      // https://connect.microsoft.com/IE/feedback/details/1763802/location-origin-is-undefined-in-ie-11-on-windows-10-but-works-on-windows-7\n      resolved = (location.origin || location.protocol + '//' + location.host) +\n          resolved;\n    }\n    return resolved;\n  }\n});\n","import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(/* webpackChunkName: \"leaflet\" */ \"leaflet\")) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import \"@polymer/iron-image/iron-image\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport { EventsMixin } from \"../../mixins/events-mixin\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaEntityMarker extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-positioning\"></style>\n      <style>\n        .marker {\n          vertical-align: top;\n          position: relative;\n          display: block;\n          margin: 0 auto;\n          width: 2.5em;\n          text-align: center;\n          height: 2.5em;\n          line-height: 2.5em;\n          font-size: 1.5em;\n          border-radius: 50%;\n          border: 0.1em solid\n            var(--ha-marker-color, var(--default-primary-color));\n          color: rgb(76, 76, 76);\n          background-color: white;\n        }\n        iron-image {\n          border-radius: 50%;\n        }\n      </style>\n\n      <div class=\"marker\">\n        <template is=\"dom-if\" if=\"[[entityName]]\"\n          >[[entityName]]</template\n        >\n        <template is=\"dom-if\" if=\"[[entityPicture]]\">\n          <iron-image\n            sizing=\"cover\"\n            class=\"fit\"\n            src=\"[[entityPicture]]\"\n          ></iron-image>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      entityId: {\n        type: String,\n        value: \"\",\n      },\n\n      entityName: {\n        type: String,\n        value: null,\n      },\n\n      entityPicture: {\n        type: String,\n        value: null,\n      },\n    };\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", (ev) => this.badgeTap(ev));\n  }\n\n  badgeTap(ev) {\n    ev.stopPropagation();\n    if (this.entityId) {\n      this.fire(\"hass-more-info\", { entityId: this.entityId });\n    }\n  }\n}\n\ncustomElements.define(\"ha-entity-marker\", HaEntityMarker);\n","import \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../components/ha-menu-button\";\nimport \"../../components/ha-icon\";\n\nimport \"./ha-entity-marker\";\n\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport LocalizeMixin from \"../../mixins/localize-mixin\";\nimport { setupLeafletMap } from \"../../common/dom/setup-leaflet-map\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaPanelMap extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"ha-style\">\n        #map {\n          height: calc(100% - 64px);\n          width: 100%;\n          z-index: 0;\n        }\n      </style>\n\n      <app-toolbar>\n        <ha-menu-button hass=\"[[hass]]\" narrow=\"[[narrow]]\"></ha-menu-button>\n        <div main-title>[[localize('panel.map')]]</div>\n      </app-toolbar>\n\n      <div id=\"map\"></div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"drawEntities\",\n      },\n      narrow: Boolean,\n    };\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.loadMap();\n  }\n\n  async loadMap() {\n    [this._map, this.Leaflet] = await setupLeafletMap(this.$.map);\n    this.drawEntities(this.hass);\n    this._map.invalidateSize();\n    this.fitMap();\n  }\n\n  disconnectedCallback() {\n    if (this._map) {\n      this._map.remove();\n    }\n  }\n\n  fitMap() {\n    var bounds;\n\n    if (this._mapItems.length === 0) {\n      this._map.setView(\n        new this.Leaflet.LatLng(\n          this.hass.config.latitude,\n          this.hass.config.longitude\n        ),\n        14\n      );\n    } else {\n      bounds = new this.Leaflet.latLngBounds(\n        this._mapItems.map((item) => item.getLatLng())\n      );\n      this._map.fitBounds(bounds.pad(0.5));\n    }\n  }\n\n  drawEntities(hass) {\n    /* eslint-disable vars-on-top */\n    var map = this._map;\n    if (!map) return;\n\n    if (this._mapItems) {\n      this._mapItems.forEach(function(marker) {\n        marker.remove();\n      });\n    }\n    var mapItems = (this._mapItems = []);\n\n    Object.keys(hass.states).forEach((entityId) => {\n      var entity = hass.states[entityId];\n      var title = computeStateName(entity);\n\n      if (\n        (entity.attributes.hidden && computeStateDomain(entity) !== \"zone\") ||\n        // entity.state === \"home\" ||\n        !(\"latitude\" in entity.attributes) ||\n        !(\"longitude\" in entity.attributes)\n      ) {\n        return;\n      }\n\n      var icon;\n\n      if (computeStateDomain(entity) === \"zone\") {\n        // DRAW ZONE\n        if (entity.attributes.passive) return;\n\n        // create icon\n        var iconHTML = \"\";\n        if (entity.attributes.icon) {\n          const el = document.createElement(\"ha-icon\");\n          el.setAttribute(\"icon\", entity.attributes.icon);\n          iconHTML = el.outerHTML;\n        } else {\n          iconHTML = title;\n        }\n\n        icon = this.Leaflet.divIcon({\n          html: iconHTML,\n          iconSize: [24, 24],\n          className: \"\",\n        });\n\n        // create market with the icon\n        mapItems.push(\n          this.Leaflet.marker(\n            [entity.attributes.latitude, entity.attributes.longitude],\n            {\n              icon: icon,\n              interactive: false,\n              title: title,\n            }\n          ).addTo(map)\n        );\n\n        // create circle around it\n        mapItems.push(\n          this.Leaflet.circle(\n            [entity.attributes.latitude, entity.attributes.longitude],\n            {\n              interactive: false,\n              color: \"#FF9800\",\n              radius: entity.attributes.radius,\n            }\n          ).addTo(map)\n        );\n\n        return;\n      }\n\n      // DRAW ENTITY\n      // create icon\n      var entityPicture = entity.attributes.entity_picture || \"\";\n      var entityName = title\n        .split(\" \")\n        .map(function(part) {\n          return part.substr(0, 1);\n        })\n        .join(\"\");\n      /* Leaflet clones this element before adding it to the map. This messes up\n         our Polymer object and we can't pass data through. Thus we hack like this. */\n      icon = this.Leaflet.divIcon({\n        html:\n          \"<ha-entity-marker entity-id='\" +\n          entity.entity_id +\n          \"' entity-name='\" +\n          entityName +\n          \"' entity-picture='\" +\n          entityPicture +\n          \"'></ha-entity-marker>\",\n        iconSize: [45, 45],\n        className: \"\",\n      });\n\n      // create market with the icon\n      mapItems.push(\n        this.Leaflet.marker(\n          [entity.attributes.latitude, entity.attributes.longitude],\n          {\n            icon: icon,\n            title: computeStateName(entity),\n          }\n        ).addTo(map)\n      );\n\n      // create circle around if entity has accuracy\n      if (entity.attributes.gps_accuracy) {\n        mapItems.push(\n          this.Leaflet.circle(\n            [entity.attributes.latitude, entity.attributes.longitude],\n            {\n              interactive: false,\n              color: \"#0288D1\",\n              radius: entity.attributes.gps_accuracy,\n            }\n          ).addTo(map)\n        );\n      }\n    });\n  }\n}\n\ncustomElements.define(\"ha-panel-map\", HaPanelMap);\n"],"sourceRoot":""}