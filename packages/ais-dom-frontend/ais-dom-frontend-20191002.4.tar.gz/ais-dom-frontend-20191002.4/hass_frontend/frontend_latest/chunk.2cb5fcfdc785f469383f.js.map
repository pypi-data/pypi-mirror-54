{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/editor/process-editor-entities.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-entities-card-editor.ts"],"names":["rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","Object","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_8__","entity_id","HaEntityPicker","lit_element__WEBPACK_IMPORTED_MODULE_9__","[object Object]","this","_getStates","memoize_one__WEBPACK_IMPORTED_MODULE_6__","hass","domainFilter","entityFilter","states","entityIds","keys","filter","eid","substr","indexOf","sort","map","key","value","changedProps","super","updated","has","_opened","_hass","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_10__","styles","tslib__WEBPACK_IMPORTED_MODULE_0__","type","Boolean","attribute","customElements","define","__webpack_require__","d","__webpack_exports__","struct","index_es","types","entity-id","includes","icon","configElementStyle","HuiEntityEditor","lit_element__WEBPACK_IMPORTED_MODULE_1__","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","concat","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_3__","newEntities","splice","assign","HuiThemeSelectEditor","themes","_changed","theme","actionConfigStruct","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_0__","action","navigation_path","url_path","service","service_data","union","name","processEditorEntities","cardConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_12__","title","show_header_toggle","_types__WEBPACK_IMPORTED_MODULE_13__","HuiEntitiesCardEditor","config","_config","_configEntities","_process_editor_entities__WEBPACK_IMPORTED_MODULE_11__","_title","_theme","_config_elements_style__WEBPACK_IMPORTED_MODULE_15__","configValue","checked","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_14__"],"mappings":"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","file":"chunk.2cb5fcfdc785f469383f.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Clear\"\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=\"Show entities\"\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  @property() protected label?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>\n        ${this.label ||\n          this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.generic.entities\"\n          ) +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            ) +\n            \")\"}\n      </h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import { EntityConfig } from \"../entity-rows/types\";\n\nexport function processEditorEntities(entities): EntityConfig[] {\n  return entities.map((entityConf) => {\n    if (typeof entityConf === \"string\") {\n      return { entity: entityConf };\n    }\n    return entityConf;\n  });\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../../components/entity/state-badge\";\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon\";\nimport \"../../../../components/ha-switch\";\n\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport {\n  EntitiesCardConfig,\n  EntitiesCardEntityConfig,\n} from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string|number?\",\n  theme: \"string?\",\n  show_header_toggle: \"boolean?\",\n  entities: [entitiesConfigStruct],\n});\n\n@customElement(\"hui-entities-card-editor\")\nexport class HuiEntitiesCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntitiesCardConfig;\n\n  @property() private _configEntities?: EntitiesCardEntityConfig[];\n\n  public setConfig(config: EntitiesCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n        <ha-switch\n          ?checked=\"${this._config!.show_header_toggle !== false}\"\n          .configValue=\"${\"show_header_toggle\"}\"\n          @change=\"${this._valueChanged}\"\n          >${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.entities.show_header_toggle\"\n          )}</ha-switch\n        >\n      </div>\n      <hui-entity-editor\n        .hass=\"${this.hass}\"\n        .entities=\"${this._configEntities}\"\n        @entities-changed=\"${this._valueChanged}\"\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    const target = ev.target! as EditorTarget;\n\n    if (\n      (target.configValue! === \"title\" && target.value === this._title) ||\n      (target.configValue! === \"theme\" && target.value === this._theme)\n    ) {\n      return;\n    }\n\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue]:\n            target.checked !== undefined ? target.checked : target.value,\n        };\n      }\n    }\n\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entities-card-editor\": HuiEntitiesCardEditor;\n  }\n}\n"],"sourceRoot":""}