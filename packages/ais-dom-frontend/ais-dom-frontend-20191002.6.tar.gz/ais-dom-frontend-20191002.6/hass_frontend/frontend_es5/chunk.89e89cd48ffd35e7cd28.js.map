{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/config/entity_registry/dialog-entity-registry-detail.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","this","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","children","element","tabIndex","_normalizedTabIndex","needsSort","push","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","ha_paper_dialog_HaPaperDialog","_super","HaPaperDialog","Object","tslib_es6","legacy_class","define","DialogEntityRegistryDetail","tslib__WEBPACK_IMPORTED_MODULE_0__","prototype","showDialog","params","_params","_error","undefined","_name","entry","name","_platform","platform","_origEntityId","entity_id","_entityId","_disabledBy","disabled_by","updateComplete","_a","sent","render","lit_element__WEBPACK_IMPORTED_MODULE_1__","templateObject_1","stateObj","hass","states","invalidDomainUpdate","_common_entity_compute_domain__WEBPACK_IMPORTED_MODULE_7__","trim","templateObject_4","_openedChanged","_common_entity_compute_state_name__WEBPACK_IMPORTED_MODULE_8__","templateObject_2","localize","templateObject_3","_nameChanged","_submitting","_entityIdChanged","_disabledByChanged","_deleteEntry","_updateEntry","ev","detail","value","_data_entity_registry__WEBPACK_IMPORTED_MODULE_9__","new_entity_id","err_1","message","confirm","target","checked","defineProperty","_resources_styles__WEBPACK_IMPORTED_MODULE_6__","templateObject_5"],"mappings":"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","file":"chunk.89e89cd48ffd35e7cd28.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../../components/dialog/ha-paper-dialog\";\nimport \"../../../components/ha-switch\";\n\nimport { EntityRegistryDetailDialogParams } from \"./show-dialog-entity-registry-detail\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\nimport { haStyleDialog } from \"../../../resources/styles\";\nimport { HomeAssistant } from \"../../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { HaSwitch } from \"../../../components/ha-switch\";\n\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\nimport {\n  updateEntityRegistryEntry,\n  removeEntityRegistryEntry,\n} from \"../../../data/entity_registry\";\n\nclass DialogEntityRegistryDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _name!: string;\n  @property() private _platform!: string;\n  @property() private _entityId!: string;\n  @property() private _disabledBy!: string | null;\n  @property() private _error?: string;\n  @property() private _params?: EntityRegistryDetailDialogParams;\n  @property() private _submitting?: boolean;\n  private _origEntityId!: string;\n\n  public async showDialog(\n    params: EntityRegistryDetailDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    this._name = this._params.entry.name || \"\";\n    this._platform = this._params.entry.platform;\n    this._origEntityId = this._params.entry.entity_id;\n    this._entityId = this._params.entry.entity_id;\n    this._disabledBy = this._params.entry.disabled_by;\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this._params) {\n      return html``;\n    }\n    const entry = this._params.entry;\n    const stateObj: HassEntity | undefined = this.hass.states[entry.entity_id];\n    const invalidDomainUpdate =\n      computeDomain(this._entityId.trim()) !==\n      computeDomain(this._params.entry.entity_id);\n\n    return html`\n      <ha-paper-dialog\n        with-backdrop\n        opened\n        @opened-changed=\"${this._openedChanged}\"\n      >\n        <h2>\n          ${stateObj\n            ? computeStateName(stateObj)\n            : entry.name || entry.entity_id}\n        </h2>\n        <paper-dialog-scrollable>\n          ${!stateObj\n            ? html`\n                <div>\n                  ${this.hass!.localize(\n                    \"ui.panel.config.entity_registry.editor.unavailable\"\n                  )}\n                </div>\n              `\n            : \"\"}\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <div class=\"form\">\n            <paper-input\n              .value=${this._name}\n              @value-changed=${this._nameChanged}\n              .label=${this.hass.localize(\"ui.dialogs.more_info_settings.name\")}\n              .placeholder=${stateObj ? computeStateName(stateObj) : \"\"}\n              .disabled=${this._submitting}\n            ></paper-input>\n            <paper-input\n              .value=${this._entityId}\n              @value-changed=${this._entityIdChanged}\n              .label=${this.hass.localize(\n                \"ui.dialogs.more_info_settings.entity_id\"\n              )}\n              error-message=\"Domain needs to stay the same\"\n              .invalid=${invalidDomainUpdate}\n              .disabled=${this._submitting}\n            ></paper-input>\n            <div class=\"row\">\n              <ha-switch\n                .checked=${!this._disabledBy}\n                @change=${this._disabledByChanged}\n              >\n                <div>\n                  <div>\n                    ${this.hass.localize(\n                      \"ui.panel.config.entity_registry.editor.enabled_label\"\n                    )}\n                  </div>\n                  <div class=\"secondary\">\n                    ${this._disabledBy && this._disabledBy !== \"user\"\n                      ? this.hass.localize(\n                          \"ui.panel.config.entity_registry.editor.enabled_cause\",\n                          \"cause\",\n                          this.hass.localize(\n                            `config_entry.disabled_by.${this._disabledBy}`\n                          )\n                        )\n                      : \"\"}\n                    ${this.hass.localize(\n                      \"ui.panel.config.entity_registry.editor.enabled_description\"\n                    )}\n                    <br />Note: this might not work yet with all integrations.\n                  </div>\n                </div>\n              </ha-switch>\n            </div>\n          </div>\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button\n            class=\"warning\"\n            @click=\"${this._deleteEntry}\"\n            .disabled=${this._submitting}\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.editor.delete\"\n            )}\n          </mwc-button>\n          <mwc-button\n            @click=\"${this._updateEntry}\"\n            .disabled=${invalidDomainUpdate || this._submitting}\n          >\n            ${this.hass.localize(\n              \"ui.panel.config.entity_registry.editor.update\"\n            )}\n          </mwc-button>\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _nameChanged(ev: PolymerChangedEvent<string>): void {\n    this._error = undefined;\n    this._name = ev.detail.value;\n  }\n\n  private _entityIdChanged(ev: PolymerChangedEvent<string>): void {\n    this._error = undefined;\n    this._entityId = ev.detail.value;\n  }\n\n  private async _updateEntry(): Promise<void> {\n    this._submitting = true;\n    try {\n      await updateEntityRegistryEntry(this.hass!, this._origEntityId, {\n        name: this._name.trim() || null,\n        disabled_by: this._disabledBy,\n        new_entity_id: this._entityId.trim(),\n      });\n      this._params = undefined;\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry(): Promise<void> {\n    if (\n      !confirm(\n        `${this.hass.localize(\n          \"ui.panel.config.entity_registry.editor.confirm_delete\"\n        )}\n\n${this.hass.localize(\n  \"ui.panel.config.entity_registry.editor.confirm_delete2\",\n  \"platform\",\n  this._platform\n)}`\n      )\n    ) {\n      return;\n    }\n\n    this._submitting = true;\n\n    try {\n      await removeEntityRegistryEntry(this.hass!, this._entityId);\n      this._params = undefined;\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>): void {\n    if (!(ev.detail as any).value) {\n      this._params = undefined;\n    }\n  }\n  private _disabledByChanged(ev: Event): void {\n    this._disabledBy = (ev.target as HaSwitch).checked ? null : \"user\";\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        ha-paper-dialog {\n          min-width: 400px;\n          max-width: 450px;\n        }\n        .form {\n          padding-bottom: 24px;\n        }\n        mwc-button.warning {\n          margin-right: auto;\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        .row {\n          margin-top: 8px;\n          color: var(--primary-text-color);\n        }\n        .secondary {\n          color: var(--secondary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-entity-registry-detail\": DialogEntityRegistryDetail;\n  }\n}\n\ncustomElements.define(\n  \"dialog-entity-registry-detail\",\n  DialogEntityRegistryDetail\n);\n"],"sourceRoot":""}