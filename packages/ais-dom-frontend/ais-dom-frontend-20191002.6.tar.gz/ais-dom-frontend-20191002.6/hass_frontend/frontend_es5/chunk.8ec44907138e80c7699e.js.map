{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/components/ha-switch.ts","webpack:///./src/components/ha-icon-next.ts","webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-navigation.ts","webpack:///./src/data/webhook.ts","webpack:///./src/panels/config/ais_dom/ais-webhooks.ts","webpack:///./src/panels/config/ais_dom/dialog-manage-ais-cloudhook/show-dialog-manage-ais-cloudhook.ts","webpack:///./src/panels/config/ais_dom/ha-config-ais-dom-config-remote.js"],"names":["HaCard","_super","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","defineProperty","lit_element__WEBPACK_IMPORTED_MODULE_1__","templateObject_1","prototype","render","templateObject_4","this","header","templateObject_2","templateObject_3","customElements","define","ironIconClass","get","loaded","HaIcon","listen","node","eventName","methodName","call","_iconsetName","__webpack_require__","e","then","bind","HaSwitch","firstUpdated","style","setProperty","classList","toggle","Boolean","_slot","assignedNodes","length","_material_mwc_switch_mwc_switch_css__WEBPACK_IMPORTED_MODULE_3__","HaIconNext","connectedCallback","_this","setTimeout","icon","window","getComputedStyle","direction","PAGES","page","caption","description","HaConfigNavigation","lit_element__WEBPACK_IMPORTED_MODULE_6__","map","_a","d","__webpack_exports__","fetchWebhooks","hass","callWS","type","ais_webhooks_AisWebhooks","AisWebhooks","tslib_es6","_localHooks","_fetchData","lit_element","renderStyle","_renderBody","entry","templateObject_6","webhook_id","templateObject_5","name","domain","toLowerCase","_handleManageButton","_showDialog","webhookId","element","webhookDialogParams","webhook","find","ent","fire_event","dialogTag","dialogImport","Promise","all","dialogParams","ev","currentTarget","parentElement","config","components","includes","data_webhook","_b","_c","sent","templateObject_7","HaConfigAisDomControl","PolymerElement","html","_templateObject","isWide","showAdvanced","remoteInfo","String","value","remoteDomain","computed","remoteConnected","states","state","callService","entity_id","fireEvent","entityId"],"mappings":"iHASAA,EAAA,SAAAC,GAAA,SAAAD,mDA6DA,OA7DqBE,OAAAC,EAAA,EAAAD,CAAAF,EAAAC,GAGnBC,OAAAE,eAAWJ,EAAA,SAAM,KAAjB,WACE,OAAOE,OAAAG,EAAA,EAAAH,CAAGI,MAAAJ,OAAAC,EAAA,EAAAD,CAAA,4mFA+CFF,EAAAO,UAAAC,OAAV,WACE,OAAON,OAAAG,EAAA,EAAAH,CAAIO,MAAAP,OAAAC,EAAA,EAAAD,CAAA,uDAKC,iCAJRQ,KAAKC,OACHT,OAAAG,EAAA,EAAAH,CAAIU,MAAAV,OAAAC,EAAA,EAAAD,CAAA,4GACoC,wBAAXQ,KAAKC,QAElCT,OAAAG,EAAA,EAAAH,CAAIW,MAAAX,OAAAC,EAAA,EAAAD,CAAA,eAxDAA,OAAAC,EAAA,EAAAD,CAAA,CAAXA,OAAAG,EAAA,EAAAH,iCA4DHF,EA7DA,CAAqBK,EAAA,GA+DrBS,eAAeC,OAAO,UAAWf,gFClE3BgB,UAAgBF,eAAeG,IAAI,cAIrCC,GAAS,EAEbC,EAAA,SAAAlB,GAAA,SAAAkB,mDAeA,OAf4BjB,OAAAC,EAAA,EAAAD,CAAAiB,EAAAlB,GAGnBkB,EAAAZ,UAAAa,OAAP,SACEC,EACAC,EACAC,GAEAtB,EAAAM,UAAMa,OAAMI,KAAAd,KAACW,EAAMC,EAAWC,GAEzBL,GAAgC,QAAtBR,KAAKe,eAClBP,GAAS,EACTQ,EAAAC,EAAA,IAAAC,KAAAF,EAAAG,KAAA,aAGNV,EAfA,CAA4BH,GAuB5BF,eAAeC,OAAO,UAAWI,4EC1BjC,SAAAlB,GAAA,SAAA6B,mDAA8B5B,OAAAC,EAAA,EAAAD,CAAA4B,EAAA7B,GAGlB6B,EAAAvB,UAAAwB,aAAV,WACE9B,EAAAM,UAAMwB,aAAYP,KAAAd,MAClBA,KAAKsB,MAAMC,YAAY,wBAAyB,wBAChDvB,KAAKwB,UAAUC,OACb,UACAC,QAAQ1B,KAAK2B,MAAMC,gBAAgBC,UAIvCrC,OAAAE,eAAqB0B,EAAA,SAAM,KAA3B,WACE,MAAO,CACLU,EAAA,EACAtC,OAAAG,EAAA,EAAAH,CAAGI,MAAAJ,OAAAC,EAAA,EAAAD,CAAA,62CAdQA,OAAAC,EAAA,EAAAD,CAAA,CAAdA,OAAAG,EAAA,EAAAH,CAAM,qCADI4B,EAAQ5B,OAAAC,EAAA,EAAAD,CAAA,CADpBA,OAAAG,EAAA,EAAAH,CAAc,cACF4B,GAAb,CAHkBhB,eAAeG,IAAI,4DCDrCwB,UAAA,SAAAxC,GAAA,SAAAwC,mDAYA,OAZgCvC,OAAAC,EAAA,EAAAD,CAAAuC,EAAAxC,GACvBwC,EAAAlC,UAAAmC,kBAAP,eAAAC,EAAAjC,KACET,EAAAM,UAAMmC,kBAAiBlB,KAAAd,MAGvBkC,WAAW,WACTD,EAAKE,KACyC,QAA5CC,OAAOC,iBAAiBJ,GAAMK,UAC1B,qBACA,qBACL,MAEPP,EAZA,QAAgC,IAoBhC3B,eAAeC,OAAO,eAAgB0B,kGCRhCQ,EAID,CACH,CACEC,KAAM,wBACNC,QAAS,wBACTC,YACE,uEAEJ,CACEF,KAAM,sBACNC,QAAS,YACTC,YAAa,uCAEf,CACEF,KAAM,yBACNC,QAAS,QACTC,YAAa,qBAEf,CACEF,KAAM,qBACNC,QAAS,iBACTC,YAAa,8BAEf,CACEF,KAAM,uBACNC,QAAS,aACTC,YAAa,2DAEf,CACEF,KAAM,wBACNC,QAAS,gBACTC,YAAa,2CAEf,CACEF,KAAM,uBACNC,QAAS,qBACTC,YAAa,mCAKjB,SAAAnD,GAAA,SAAAoD,mDAAiCnD,OAAAC,EAAA,EAAAD,CAAAmD,EAAApD,GAIrBoD,EAAA9C,UAAAC,OAAV,WACE,OAAON,OAAAoD,EAAA,EAAApD,CAAIU,MAAAV,OAAAC,EAAA,EAAAD,CAAA,0FAeN,8BAbC+C,EAAMM,IACN,SAACC,OAAEN,EAAAM,EAAAN,KAAMC,EAAAK,EAAAL,QAASC,EAAAI,EAAAJ,YAChB,OAAAlD,OAAAoD,EAAA,EAAApD,CAAII,MAAAJ,OAAAC,EAAA,EAAAD,CAAA,2WACyB,yGAGN,wCACkB,oKAJ7B,WAAWgD,EAGZ,GAAGC,EACW,GAAGC,OAWtClD,OAAAE,eAAWiD,EAAA,SAAM,KAAjB,WACE,OAAOnD,OAAAoD,EAAA,EAAApD,CAAGW,MAAAX,OAAAC,EAAA,EAAAD,CAAA,wPAzBAA,OAAAC,EAAA,EAAAD,CAAA,CAAXA,OAAAoD,EAAA,EAAApD,+BACWA,OAAAC,EAAA,EAAAD,CAAA,CAAXA,OAAAoD,EAAA,EAAApD,uCAFGmD,EAAkBnD,OAAAC,EAAA,EAAAD,CAAA,CADvBA,OAAAoD,EAAA,EAAApD,CAAc,iCACTmD,GAAN,CAAiCC,EAAA,qCCrDjC5B,EAAA+B,EAAAC,EAAA,sBAAAC,IAAO,IAAMA,EAAgB,SAACC,GAC5B,OAAAA,EAAKC,OAAO,CACVC,KAAM,oMCCVC,EAAA,SAAA9D,GAWE,SAAA+D,WACE/D,EAAAuB,KAAAd,OAAOA,KAwHX,OApIiCR,OAAA+D,EAAA,EAAA/D,CAAA8D,EAAA/D,GAI/BC,OAAAE,eAAW4D,EAAA,aAAU,KAArB,WACE,MAAO,CACLJ,KAAM,GACNM,YAAa,qCAQVF,EAAAzD,UAAAmC,kBAAP,WACEzC,EAAAM,UAAMmC,kBAAiBlB,KAAAd,MACvBA,KAAKyD,cAGGH,EAAAzD,UAAAC,OAAV,WACE,OAAON,OAAAkE,EAAA,EAAAlE,CAAII,MAAAJ,OAAA+D,EAAA,EAAA/D,CAAA,wrBACW,uaAOuB,2PAPzCQ,KAAK2D,cAOkB3D,KAAK4D,gBAY1BN,EAAAzD,UAAA+D,YAAR,eAAA3B,EAAAjC,KACE,OAAKA,KAAKwD,YAMsB,IAA5BxD,KAAKwD,YAAY3B,OACZrC,OAAAkE,EAAA,EAAAlE,CAAIW,MAAAX,OAAA+D,EAAA,EAAA/D,CAAA,6zBAaNQ,KAAKwD,YAAYX,IACtB,SAACgB,GAAU,OAAArE,OAAAkE,EAAA,EAAAlE,CAAIsE,MAAAtE,OAAA+D,EAAA,EAAA/D,CAAA,wCAoBR,cAnBkB,kCAArBqE,EAAME,WACJvE,OAAAkE,EAAA,EAAAlE,CAAIO,MAAAP,OAAA+D,EAAA,EAAA/D,CAAA,+FAGJA,OAAAkE,EAAA,EAAAlE,CAAIwE,MAAAxE,OAAA+D,EAAA,EAAA/D,CAAA,gdACkC,gGAGlB,yBAGY,gEAEO,mFAEW,oGAVjBqE,EAGvBA,EAAMI,KACNJ,EAAMK,SAAWL,EAAMI,KAAKE,cAC1B,GACA,KAAKN,EAAMK,OAAM,IAENL,EAAME,WAEH9B,EAAKmC,wBApC9B5E,OAAAkE,EAAA,EAAAlE,CAAIU,MAAAV,OAAA+D,EAAA,EAAA/D,CAAA,kIA6CP8D,EAAAzD,UAAAwE,YAAR,SAAoBC,GAClB,IC5FFC,EACAC,ED2FQC,EAAUzE,KAAKwD,YAAakB,KAChC,SAACC,GAAQ,OAAAA,EAAIZ,aAAeO,IC7FhCC,ED+F4BvE,KC9F5BwE,ED8FkC,CAAEC,QAAOA,GC5F3CjF,OAAAoF,EAAA,EAAApF,CAAU+E,EAAS,cAAe,CAChCM,UAAW,8BACXC,aAAc,WACZ,OAAAC,QAAAC,IAAA,CAAAhE,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,YACF8D,aAAcT,KD2FRlB,EAAAzD,UAAAuE,oBAAR,SAA4Bc,GAC1B,IAAMrB,EAASqB,EAAGC,cAAsBC,cAAcvB,MACtD7D,KAAKqE,YAAYR,EAAME,aAGXT,EAAAzD,UAAA4D,WAAd,sIACEX,EAAA9C,KAAmBA,KAAKkD,KAAMmC,OAAOC,WAAWC,SAAS,WACrD,GAAM/F,OAAAgG,EAAA,EAAAhG,CAAcQ,KAAKkD,OADV,oBACfuC,EAAAC,EAAAC,oBACAF,EAAA,2BAFJ3C,EAAKU,YAAWiC,YAKVnC,EAAAzD,UAAA8D,YAAR,WACE,OAAOnE,OAAAkE,EAAA,EAAAlE,CAAIoG,MAAApG,OAAA+D,EAAA,EAAA/D,CAAA,8+BAyBf8D,EApIA,CAAiCI,EAAA,GA4IjCtD,eAAeC,OAAO,eAAgBgD,85HEtIhCwC,gaAA8BC,8CAEhC,OAAOC,YAAPC,wCAkFA,MAAO,CACL9C,KAAM1D,OACNyG,OAAQvE,QACRwE,aAAcxE,QACdyE,WAAY,CACV/C,KAAMgD,OACNC,MAAO,QAGTC,aAAc,CACZlD,KAAMgD,OACNG,SAAU,8BAGZC,gBAAiB,CACfpD,KAAM1B,QACN6E,SAAU,qFAKKrD,GACnB,MACE,WACAA,EAAKuD,OAAO,oCAAoCC,MAChD,+DAIqBxD,GACvB,MAA6D,OAAzDA,EAAKuD,OAAO,mCAAmCC,OACjD1G,KAAKmG,WAAa,QACX,IAETnG,KAAKmG,WAAa,UACX,0CAIPnG,KAAKkD,KAAKyD,YAAY,gBAAiB,SAAU,CAC/CC,UAAW,8EAKbC,YAAU7G,KAAM,iBAAkB,CAAE8G,SAAU,8DAIlD1G,eAAeC,OAAO,kCAAmCwF","file":"chunk.8ec44907138e80c7699e.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { Constructor } from \"lit-element\";\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { Constructor, customElement, CSSResult, css, query } from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\"--mdc-theme-secondary\", \"var(--primary-color)\");\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--paper-toggle-button-unchecked-button-color);\n          border-color: var(--paper-toggle-button-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--paper-toggle-button-unchecked-bar-color);\n          border-color: var(--paper-toggle-button-unchecked-bar-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","import \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"./ha-icon\";\n\nexport class HaIconNext extends HaIcon {\n  public connectedCallback() {\n    super.connectedCallback();\n\n    // wait to check for direction since otherwise direction is wrong even though top level is RTL\n    setTimeout(() => {\n      this.icon =\n        window.getComputedStyle(this).direction === \"ltr\"\n          ? \"hass:chevron-right\"\n          : \"hass:chevron-left\";\n    }, 100);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon-next\": HaIconNext;\n  }\n}\n\ncustomElements.define(\"ha-icon-next\", HaIconNext);\n","import \"@polymer/iron-icon/iron-icon\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-item/paper-item\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-icon-next\";\nimport {\n  LitElement,\n  html,\n  TemplateResult,\n  property,\n  customElement,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../../types\";\n\nconst PAGES: Array<{\n  page: string;\n  caption: string;\n  description: string;\n}> = [\n  {\n    page: \"ais_dom_config_update\",\n    caption: \"Oprogramowanie bramki\",\n    description:\n      \"Aktualizacja systemu i synchronizacja bramki z Portalem Integratora\",\n  },\n  {\n    page: \"ais_dom_config_wifi\",\n    caption: \"Sieć WiFi\",\n    description: \"Ustawienia połączenia z siecią WiFi\",\n  },\n  {\n    page: \"ais_dom_config_display\",\n    caption: \"Ekran\",\n    description: \"Ustawienia ekranu\",\n  },\n  {\n    page: \"ais_dom_config_tts\",\n    caption: \"Głos asystenta\",\n    description: \"Ustawienia głosu asystenta\",\n  },\n  {\n    page: \"ais_dom_config_night\",\n    caption: \"Tryb nocny\",\n    description: \"Ustawienie godzin, w których asystent ma działać ciszej\",\n  },\n  {\n    page: \"ais_dom_config_remote\",\n    caption: \"Zdalny dostęp\",\n    description: \"Konfiguracja zdalnego dostępu do bramki\",\n  },\n  {\n    page: \"ais_dom_config_power\",\n    caption: \"Zatrzymanie bramki\",\n    description: \"Restart lub wyłączenie bramki\",\n  },\n];\n\n@customElement(\"ha-config-ais-dom-navigation\")\nclass HaConfigNavigation extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public showAdvanced!: boolean;\n\n  protected render(): TemplateResult | void {\n    return html`\n      <ha-card>\n        ${PAGES.map(\n          ({ page, caption, description }) =>\n            html`\n              <a href=${`/config/${page}`}>\n                <paper-item>\n                  <paper-item-body two-line=\"\"\n                    >${`${caption}`}\n                    <div secondary>${`${description}`}</div>\n                  </paper-item-body>\n                  <ha-icon-next></ha-icon-next>\n                </paper-item>\n              </a>\n            `\n        )}\n      </ha-card>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        text-decoration: none;\n        color: var(--primary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-config-ais-dom-navigation\": HaConfigNavigation;\n  }\n}\n","import { HomeAssistant } from \"../types\";\n\nexport interface Webhook {\n  webhook_id: string;\n  domain: string;\n  name: string;\n}\n\nexport const fetchWebhooks = (hass: HomeAssistant): Promise<Webhook[]> =>\n  hass.callWS({\n    type: \"webhook/list\",\n  });\n","import { html, LitElement, PropertyDeclarations } from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../../components/ha-card\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { Webhook, fetchWebhooks } from \"../../../data/webhook\";\n\nimport { showManageCloudhookDialog } from \"./dialog-manage-ais-cloudhook/show-dialog-manage-ais-cloudhook\";\n\nexport class AisWebhooks extends LitElement {\n  public hass?: HomeAssistant;\n  private _localHooks?: Webhook[];\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _localHooks: {},\n    };\n  }\n\n  constructor() {\n    super();\n  }\n\n  public connectedCallback() {\n    super.connectedCallback();\n    this._fetchData();\n  }\n\n  protected render() {\n    return html`\n      ${this.renderStyle()}\n      <ha-card header=\"Wywołania zwrotne HTTP\">\n        <div class=\"card-content\">\n          Wywołania zwrotne HTTP (Webhook) używane są do udostępniania\n          powiadomień o zdarzeniach. Wszystko, co jest skonfigurowane do\n          uruchamiania przez wywołanie zwrotne, ma publicznie dostępny unikalny\n          adres URL, aby umożliwić wysyłanie danych do Asystenta domowego z\n          dowolnego miejsca. ${this._renderBody()}\n\n          <div class=\"footer\">\n            <a href=\"https://sviete.github.io/AIS-docs\" target=\"_blank\">\n              Dowiedz się więcej o zwrotnym wywołaniu HTTP.\n            </a>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  private _renderBody() {\n    if (!this._localHooks) {\n      return html`\n        <div class=\"body-text\">Pobieranie…</div>\n      `;\n    }\n\n    if (this._localHooks.length === 1) {\n      return html`\n        <div class=\"body-text\">\n          Wygląda na to, że nie masz jeszcze zdefiniowanych żadnych wywołań\n          zwrotnych. Rozpocznij od skonfigurowania\n          <a href=\"/config/integrations\">\n            integracji opartej na wywołaniu zwrotnym\n          </a>\n          lub przez tworzenie\n          <a href=\"/config/automation/new\"> automatyzacji typu webhook </a>.\n        </div>\n      `;\n    }\n\n    return this._localHooks.map(\n      (entry) => html`\n        ${entry.webhook_id === \"aisdomprocesscommandfromframe\"\n          ? html`\n              <div></div>\n            `\n          : html`\n              <div class=\"webhook\" .entry=\"${entry}\">\n                <paper-item-body two-line>\n                  <div>\n                    ${entry.name}\n                    ${entry.domain === entry.name.toLowerCase()\n                      ? \"\"\n                      : ` (${entry.domain})`}\n                  </div>\n                  <div secondary>${entry.webhook_id}</div>\n                </paper-item-body>\n                <mwc-button @click=\"${this._handleManageButton}\">\n                  Pokaż\n                </mwc-button>\n              </div>\n            `}\n      `\n    );\n  }\n\n  private _showDialog(webhookId: string) {\n    const webhook = this._localHooks!.find(\n      (ent) => ent.webhook_id === webhookId\n    )!;\n    showManageCloudhookDialog(this, { webhook });\n  }\n\n  private _handleManageButton(ev: MouseEvent) {\n    const entry = (ev.currentTarget as any).parentElement.entry as Webhook;\n    this._showDialog(entry.webhook_id);\n  }\n\n  private async _fetchData() {\n    this._localHooks = this.hass!.config.components.includes(\"webhook\")\n      ? await fetchWebhooks(this.hass!)\n      : [];\n  }\n\n  private renderStyle() {\n    return html`\n      <style>\n        .body-text {\n          padding: 8px 0;\n        }\n        .webhook {\n          display: flex;\n          padding: 4px 0;\n        }\n        .progress {\n          margin-right: 16px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n        }\n        .footer {\n          padding-top: 16px;\n        }\n        .body-text a,\n        .footer a {\n          color: var(--primary-color);\n        }\n      </style>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ais-webhooks\": AisWebhooks;\n  }\n}\n\ncustomElements.define(\"ais-webhooks\", AisWebhooks);\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { Webhook } from \"../../../../data/webhook\";\n\nexport interface WebhookDialogParams {\n  webhook: Webhook;\n}\n\nexport const showManageCloudhookDialog = (\n  element: HTMLElement,\n  webhookDialogParams: WebhookDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-manage-ais-cloudhook\",\n    dialogImport: () =>\n      import(/* webpackChunkName: \"ais-webhook-manage-dialog\" */ \"./dialog-manage-ais-cloudhook\"),\n    dialogParams: webhookDialogParams,\n  });\n};\n","import \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../layouts/hass-subpage\";\nimport \"../../../resources/ha-style\";\n\nimport \"./ha-config-ais-dom-navigation\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport \"./ais-webhooks\";\nimport \"../../../components/ha-switch\";\n\n/*\n *\n */\nclass HaConfigAisDomControl extends PolymerElement {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 32px;\n        }\n        a {\n          color: var(--primary-color);\n        }\n        .border {\n          margin: 32px auto 0;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n          max-width: 1040px;\n        }\n        .narrow .border {\n          max-width: 640px;\n        }\n        .center-container {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          height: 70px;\n        }\n        ha-card > div#ha-switch-id {\n          margin: -4px 0;\n          position: absolute;\n          right: 8px;\n          top: 32px;\n        }\n        .card-actions a {\n          text-decoration: none;\n        }\n      </style>\n\n      <hass-subpage header=\"Konfiguracja bramki AIS dom\">\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <ha-config-section is-wide=\"[[isWide]]\">\n            <span slot=\"header\">Zdalny dostęp</span>\n            <span slot=\"introduction\"\n              >W tej sekcji możesz skonfigurować zdalny dostęp do bramki</span\n            >\n            <ha-card header=\"Szyfrowany tunel\">\n              <div id=\"ha-switch-id\">\n                <ha-switch\n                  checked=\"{{remoteConnected}}\"\n                  on-change=\"changeRemote\"\n                ></ha-switch>\n              </div>\n              <div class=\"card-content\">\n                Tunel zapewnia bezpieczne zdalne połączenie z Twoim urządzeniem\n                kiedy jesteś z dala od domu. Twoja bramka dostępna\n                [[remoteInfo]] z Internetu pod adresem\n                <a href=\"[[remoteDomain]]\" target=\"_blank\">[[remoteDomain]]</a>.\n                <div class=\"center-container\" style=\"height:100px\">\n                  <div on-click=\"showBarcodeInfo\">\n                    <svg style=\"width:48px;height:48px\" viewBox=\"0 0 24 24\">\n                      <path\n                        fill=\"#ffffff\"\n                        d=\"M3,11H5V13H3V11M11,5H13V9H11V5M9,11H13V15H11V13H9V11M15,11H17V13H19V11H21V13H19V15H21V19H19V21H17V19H13V21H11V17H15V15H17V13H15V11M19,19V15H17V19H19M15,3H21V9H15V3M17,5V7H19V5H17M3,3H9V9H3V3M5,5V7H7V5H5M3,15H9V21H3V15M5,17V19H7V17H5Z\"\n                      />\n                    </svg>\n                  </div>\n                  Kliknij obrazek z kodem by go powiększyć, a następnie zeskanuj\n                  kod QR za pomocą aplikacji na telefonie.\n                </div>\n              </div>\n              <div class=\"card-actions\">\n                <a\n                  href=\"https://sviete.github.io/AIS-docs/docs/en/ais_bramka_remote_www_index.html\"\n                  target=\"_blank\"\n                >\n                  <mwc-button>Dowiedz się jak to działa</mwc-button>\n                </a>\n              </div>\n            </ha-card>\n\n            <ais-webhooks hass=\"[[hass]]\"></ais-webhooks>\n          </ha-config-section>\n        </div>\n      </hass-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      showAdvanced: Boolean,\n      remoteInfo: {\n        type: String,\n        value: \"jest\",\n      },\n\n      remoteDomain: {\n        type: String,\n        computed: \"_computeRemoteDomain(hass)\",\n      },\n\n      remoteConnected: {\n        type: Boolean,\n        computed: \"_computeRremoteConnected(hass)\",\n      },\n    };\n  }\n\n  _computeRemoteDomain(hass) {\n    return (\n      \"https://\" +\n      hass.states[\"sensor.ais_secure_android_id_dom\"].state +\n      \".paczka.pro\"\n    );\n  }\n\n  _computeRremoteConnected(hass) {\n    if (hass.states[\"input_boolean.ais_remote_access\"].state === \"on\") {\n      this.remoteInfo = \"jest\";\n      return true;\n    }\n    this.remoteInfo = \"będzie\";\n    return false;\n  }\n\n  changeRemote() {\n    this.hass.callService(\"input_boolean\", \"toggle\", {\n      entity_id: \"input_boolean.ais_remote_access\",\n    });\n  }\n\n  showBarcodeInfo() {\n    fireEvent(this, \"hass-more-info\", { entityId: \"camera.remote_access\" });\n  }\n}\n\ncustomElements.define(\"ha-config-ais-dom-config-remote\", HaConfigAisDomControl);\n"],"sourceRoot":""}