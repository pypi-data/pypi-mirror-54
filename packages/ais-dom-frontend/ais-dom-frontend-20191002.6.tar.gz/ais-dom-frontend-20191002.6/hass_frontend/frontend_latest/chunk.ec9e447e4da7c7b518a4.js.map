{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/components/ha-combo-box.js","webpack:///./src/components/ha-service-picker.js","webpack:///./src/panels/lovelace/components/hui-action-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-picture-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","Object","index_es","types","entity-id","value","includes","icon","configElementStyle","actionConfigStruct","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_0__","action","navigation_path","url_path","service","service_data","union","entity","name","customElements","define","events_mixin","polymer_element","template","html_tag","properties","allowCustomValue","Boolean","items","type","observer","_items","itemLabelPath","String","itemValuePath","autofocus","label","opened","notify","[object Object]","newVal","this","item","ev","stopPropagation","fire","localize_mixin","hass","_services","Array","oldHass","services","result","keys","sort","forEach","domain","i","length","push","HuiActionEditor","lit_element__WEBPACK_IMPORTED_MODULE_1__","_action","config","_navigation_path","_url_path","_service","actions","_valueChanged","indexOf","map","target","configValue","assign","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_7__","tslib__WEBPACK_IMPORTED_MODULE_0__","cardConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_4__","image","tap_action","optional","_types__WEBPACK_IMPORTED_MODULE_5__","hold_action","HuiPictureCardEditor","_config","_image","_tap_action","_hold_action","_config_elements_style__WEBPACK_IMPORTED_MODULE_7__","localize","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_6__"],"mappings":"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","file":"chunk.ec9e447e4da7c7b518a4.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-item\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\n\nimport { EventsMixin } from \"../mixins/events-mixin\";\n\nclass HaComboBox extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style>\n        paper-input > paper-icon-button {\n          width: 24px;\n          height: 24px;\n          padding: 2px;\n          color: var(--secondary-text-color);\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <vaadin-combo-box-light\n        items=\"[[_items]]\"\n        item-value-path=\"[[itemValuePath]]\"\n        item-label-path=\"[[itemLabelPath]]\"\n        value=\"{{value}}\"\n        opened=\"{{opened}}\"\n        allow-custom-value=\"[[allowCustomValue]]\"\n        on-change=\"_fireChanged\"\n      >\n        <paper-input\n          autofocus=\"[[autofocus]]\"\n          label=\"[[label]]\"\n          class=\"input\"\n          value=\"[[value]]\"\n        >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"clear-button\"\n            icon=\"hass:close\"\n            hidden$=\"[[!value]]\"\n            >Clear</paper-icon-button\n          >\n          <paper-icon-button\n            slot=\"suffix\"\n            class=\"toggle-button\"\n            icon=\"[[_computeToggleIcon(opened)]]\"\n            hidden$=\"[[!items.length]]\"\n            >Toggle</paper-icon-button\n          >\n        </paper-input>\n        <template>\n          <style>\n            paper-item {\n              margin: -5px -10px;\n              padding: 0;\n            }\n          </style>\n          <paper-item>[[_computeItemLabel(item, itemLabelPath)]]</paper-item>\n        </template>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  static get properties() {\n    return {\n      allowCustomValue: Boolean,\n      items: {\n        type: Object,\n        observer: \"_itemsChanged\",\n      },\n      _items: Object,\n      itemLabelPath: String,\n      itemValuePath: String,\n      autofocus: Boolean,\n      label: String,\n      opened: {\n        type: Boolean,\n        value: false,\n        observer: \"_openedChanged\",\n      },\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _openedChanged(newVal) {\n    if (!newVal) {\n      this._items = this.items;\n    }\n  }\n\n  _itemsChanged(newVal) {\n    if (!this.opened) {\n      this._items = newVal;\n    }\n  }\n\n  _computeToggleIcon(opened) {\n    return opened ? \"hass:menu-up\" : \"hass:menu-down\";\n  }\n\n  _computeItemLabel(item, itemLabelPath) {\n    return itemLabelPath ? item[itemLabelPath] : item;\n  }\n\n  _fireChanged(ev) {\n    ev.stopPropagation();\n    this.fire(\"change\");\n  }\n}\n\ncustomElements.define(\"ha-combo-box\", HaComboBox);\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-combo-box\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaServicePicker extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-combo-box\n        label=\"[[localize('ui.components.service-picker.service')]]\"\n        items=\"[[_services]]\"\n        value=\"{{value}}\"\n        allow-custom-value=\"\"\n      ></ha-combo-box>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n        observer: \"_hassChanged\",\n      },\n      _services: Array,\n      value: {\n        type: String,\n        notify: true,\n      },\n    };\n  }\n\n  _hassChanged(hass, oldHass) {\n    if (!hass) {\n      this._services = [];\n      return;\n    }\n    if (oldHass && hass.services === oldHass.services) {\n      return;\n    }\n    const result = [];\n\n    Object.keys(hass.services)\n      .sort()\n      .forEach((domain) => {\n        const services = Object.keys(hass.services[domain]).sort();\n\n        for (let i = 0; i < services.length; i++) {\n          result.push(`${domain}.${services[i]}`);\n        }\n      });\n\n    this._services = result;\n  }\n}\n\ncustomElements.define(\"ha-service-picker\", HaServicePicker);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-textarea\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../components/ha-service-picker\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport { EditorTarget } from \"../editor/types\";\nimport {\n  ActionConfig,\n  NavigateActionConfig,\n  CallServiceActionConfig,\n  UrlActionConfig,\n} from \"../../../data/lovelace\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"action-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"action-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-action-editor\")\nexport class HuiActionEditor extends LitElement {\n  @property() public config?: ActionConfig;\n\n  @property() public label?: string;\n\n  @property() public actions?: string[];\n\n  @property() protected hass?: HomeAssistant;\n\n  get _action(): string {\n    return this.config!.action || \"\";\n  }\n\n  get _navigation_path(): string {\n    const config = this.config! as NavigateActionConfig;\n    return config.navigation_path || \"\";\n  }\n\n  get _url_path(): string {\n    const config = this.config! as UrlActionConfig;\n    return config.url_path || \"\";\n  }\n\n  get _service(): string {\n    const config = this.config! as CallServiceActionConfig;\n    return config.service || \"\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass || !this.actions) {\n      return html``;\n    }\n    return html`\n      <paper-dropdown-menu\n        .label=\"${this.label}\"\n        .configValue=\"${\"action\"}\"\n        @value-changed=\"${this._valueChanged}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.actions.indexOf(this._action)}\"\n        >\n          ${this.actions.map((action) => {\n            return html`\n              <paper-item>${action}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n      ${this._action === \"navigate\"\n        ? html`\n            <paper-input\n              label=\"Navigation Path\"\n              .value=\"${this._navigation_path}\"\n              .configValue=\"${\"navigation_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this._action === \"url\"\n        ? html`\n            <paper-input\n              label=\"Url Path\"\n              .value=\"${this._url_path}\"\n              .configValue=\"${\"url_path\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></paper-input>\n          `\n        : \"\"}\n      ${this.config && this.config.action === \"call-service\"\n        ? html`\n            <ha-service-picker\n              .hass=\"${this.hass}\"\n              .value=\"${this._service}\"\n              .configValue=\"${\"service\"}\"\n              @value-changed=\"${this._valueChanged}\"\n            ></ha-service-picker>\n            <h3>Toggle Editor to input Service Data</h3>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _valueChanged(ev: Event): void {\n    if (!this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue === \"action\") {\n      this.config = { action: \"none\" };\n    }\n    if (target.configValue) {\n      this.config = { ...this.config!, [target.configValue!]: target.value };\n      fireEvent(this, \"action-changed\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-action-editor\": HuiActionEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport \"../../components/hui-action-editor\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  actionConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { ActionConfig } from \"../../../../data/lovelace\";\nimport { PictureCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  image: \"string?\",\n  tap_action: struct.optional(actionConfigStruct),\n  hold_action: struct.optional(actionConfigStruct),\n});\n\n@customElement(\"hui-picture-card-editor\")\nexport class HuiPictureCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: PictureCardConfig;\n\n  public setConfig(config: PictureCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _image(): string {\n    return this._config!.image || \"\";\n  }\n\n  get _tap_action(): ActionConfig {\n    return this._config!.tap_action || { action: \"none\" };\n  }\n\n  get _hold_action(): ActionConfig {\n    return this._config!.hold_action || { action: \"none\" };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const actions = [\"navigate\", \"url\", \"call-service\", \"none\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.image\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .value=\"${this._image}\"\n          .configValue=\"${\"image\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.tap_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._tap_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"tap_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n          <hui-action-editor\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.hold_action\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .hass=\"${this.hass}\"\n            .config=\"${this._hold_action}\"\n            .actions=\"${actions}\"\n            .configValue=\"${\"hold_action\"}\"\n            @action-changed=\"${this._valueChanged}\"\n          ></hui-action-editor>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (\n      this[`_${target.configValue}`] === target.value ||\n      this[`_${target.configValue}`] === target.config\n    ) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value ? target.value : target.config,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-picture-card-editor\": HuiPictureCardEditor;\n  }\n}\n"],"sourceRoot":""}