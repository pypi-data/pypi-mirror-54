{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./node_modules/@polymer/paper-spinner/paper-spinner.js","webpack:///./src/data/system_health.ts","webpack:///./src/panels/developer-tools/info/system-health-card.ts","webpack:///./src/panels/developer-tools/info/developer-tools-info.ts"],"names":["HaCard","lit_element__WEBPACK_IMPORTED_MODULE_1__","styles","[object Object]","this","header","Object","tslib__WEBPACK_IMPORTED_MODULE_0__","customElements","define","__webpack_require__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__","_paper_spinner_behavior_js__WEBPACK_IMPORTED_MODULE_5__","template","setAttribute","_template","is","behaviors","fetchSystemHealthInfo","hass","callWS","type","sortKeys","a","b","lit_element","properties","_info","sections","domains","keys","sort","domain","key","push","localize","changedProps","super","firstUpdated","_fetchInfo","config","components","includes","Error","err","system_health","error","JS_TYPE","JS_VERSION","OPT_IN_PANEL","developer_tools_info_HaPanelDevInfo","customUiList","window","CUSTOM_UI_LIST","nonDefaultLink","localStorage","defaultPage","nonDefaultLinkText","defaultPageText","version","config_dir","length","map","item","url","name","_toggleDefaultPage","customUI","setTimeout","requestUpdate","tslib_es6"],"mappings":"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","file":"chunk.1cf9e62181fca488df03.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-styles/color.js';\nimport './paper-spinner-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperSpinnerBehavior} from './paper-spinner-behavior.js';\n\nconst template = html`\n  <style include=\"paper-spinner-styles\"></style>\n\n  <div id=\"spinnerContainer\" class-name=\"[[__computeContainerClasses(active, __coolingDown)]]\" on-animationend=\"__reset\" on-webkit-animation-end=\"__reset\">\n    <div class=\"spinner-layer layer-1\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-2\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-3\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n\n    <div class=\"spinner-layer layer-4\">\n      <div class=\"circle-clipper left\">\n        <div class=\"circle\"></div>\n      </div>\n      <div class=\"circle-clipper right\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n`;\ntemplate.setAttribute('strip-whitespace', '');\n\n/**\nMaterial design: [Progress &\nactivity](https://www.google.com/design/spec/components/progress-activity.html)\n\nElement providing a multiple color material design circular spinner.\n\n    <paper-spinner active></paper-spinner>\n\nThe default spinner cycles between four layers of colors; by default they are\nblue, red, yellow and green. It can be customized to cycle between four\ndifferent colors. Use <paper-spinner-lite> for single color spinners.\n\n### Accessibility\n\nAlt attribute should be set to provide adequate context for accessibility. If\nnot provided, it defaults to 'loading'. Empty alt can be provided to mark the\nelement as decorative if alternative content is provided in another form (e.g. a\ntext block following the spinner).\n\n    <paper-spinner alt=\"Loading contacts list\" active></paper-spinner>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-spinner-layer-1-color` | Color of the first spinner rotation | `--google-blue-500`\n`--paper-spinner-layer-2-color` | Color of the second spinner rotation | `--google-red-500`\n`--paper-spinner-layer-3-color` | Color of the third spinner rotation | `--google-yellow-500`\n`--paper-spinner-layer-4-color` | Color of the fourth spinner rotation | `--google-green-500`\n`--paper-spinner-stroke-width` | The width of the spinner stroke | 3px\n\n@group Paper Elements\n@element paper-spinner\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: template,\n\n  is: 'paper-spinner',\n\n  behaviors: [PaperSpinnerBehavior]\n});\n","import { HomeAssistant } from \"../types\";\n\nexport interface HomeAssistantSystemHealthInfo {\n  version: string;\n  dev: boolean;\n  hassio: boolean;\n  virtualenv: string;\n  python_version: string;\n  docker: boolean;\n  arch: string;\n  timezone: string;\n  os_name: string;\n}\n\nexport interface SystemHealthInfo {\n  [domain: string]: { [key: string]: string | number | boolean };\n}\n\nexport const fetchSystemHealthInfo = (\n  hass: HomeAssistant\n): Promise<SystemHealthInfo> =>\n  hass.callWS({\n    type: \"system_health/info\",\n  });\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  PropertyDeclarations,\n  TemplateResult,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../../components/ha-card\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  SystemHealthInfo,\n  fetchSystemHealthInfo,\n} from \"../../../data/system_health\";\n\nconst sortKeys = (a: string, b: string) => {\n  if (a === \"homeassistant\") {\n    return -1;\n  }\n  if (b === \"homeassistant\") {\n    return 1;\n  }\n  if (a < b) {\n    return -1;\n  }\n  if (b < a) {\n    return 1;\n  }\n  return 0;\n};\n\nclass SystemHealthCard extends LitElement {\n  public hass?: HomeAssistant;\n  private _info?: SystemHealthInfo;\n\n  static get properties(): PropertyDeclarations {\n    return {\n      hass: {},\n      _info: {},\n    };\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return;\n    }\n    const sections: TemplateResult[] = [];\n\n    if (!this._info) {\n      sections.push(\n        html`\n          <div class=\"loading-container\">\n            <paper-spinner active></paper-spinner>\n          </div>\n        `\n      );\n    } else {\n      const domains = Object.keys(this._info).sort(sortKeys);\n      for (const domain of domains) {\n        const keys: TemplateResult[] = [];\n\n        for (const key of Object.keys(this._info[domain]).sort()) {\n          keys.push(html`\n            <tr>\n              <td>${key}</td>\n              <td>${this._info[domain][key]}</td>\n            </tr>\n          `);\n        }\n        if (domain !== \"homeassistant\") {\n          sections.push(\n            html`\n              <h3>${this.hass.localize(`domain.${domain}`) || domain}</h3>\n            `\n          );\n        }\n        sections.push(html`\n          <table>\n            ${keys}\n          </table>\n        `);\n      }\n    }\n\n    return html`\n      <ha-card header=\"System Health\">\n        <div class=\"card-content\">${sections}</div>\n      </ha-card>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchInfo();\n  }\n\n  private async _fetchInfo() {\n    try {\n      if (!this.hass!.config.components.includes(\"system_health\")) {\n        throw new Error();\n      }\n      this._info = await fetchSystemHealthInfo(this.hass!);\n    } catch (err) {\n      this._info = {\n        system_health: {\n          error:\n            \"System Health component is not loaded. Add 'system_health:' to configuration.yaml\",\n        },\n      };\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      table {\n        width: 100%;\n      }\n\n      td:first-child {\n        width: 33%;\n      }\n\n      .loading-container {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"system-health-card\", SystemHealthCard);\n","import {\n  LitElement,\n  html,\n  CSSResult,\n  css,\n  TemplateResult,\n  property,\n} from \"lit-element\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { haStyle } from \"../../../resources/styles\";\n\nimport \"./system-health-card\";\n\nconst JS_TYPE = __BUILD__;\nconst JS_VERSION = __VERSION__;\nconst OPT_IN_PANEL = \"states\";\n\nclass HaPanelDevInfo extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const hass = this.hass;\n    const customUiList: Array<{ name: string; url: string; version: string }> =\n      (window as any).CUSTOM_UI_LIST || [];\n\n    const nonDefaultLink =\n      localStorage.defaultPage === OPT_IN_PANEL && OPT_IN_PANEL === \"states\"\n        ? \"/lovelace\"\n        : \"/states\";\n\n    const nonDefaultLinkText =\n      localStorage.defaultPage === OPT_IN_PANEL && OPT_IN_PANEL === \"states\"\n        ? \"Go to the Lovelace UI\"\n        : \"Go to the states UI\";\n\n    const defaultPageText = `${\n      localStorage.defaultPage === OPT_IN_PANEL ? \"Remove\" : \"Set\"\n    } ${OPT_IN_PANEL} as default page on this device`;\n\n    return html`\n      <div class=\"about\">\n        <p class=\"version\">\n          <a href=\"https://www.ai-speaker.com\" target=\"_blank\"\n            ><img\n              src=\"/static/icons/favicon-192x192.png\"\n              height=\"192\"\n              alt=\"Home Assistant logo\"\n          /></a>\n          <br />\n          Asystent domowy<br />\n          ${hass.config.version}\n        </p>\n        <p>\n          Lokalizacja konfiguracji: ${hass.config.config_dir}\n        </p>\n        <p class=\"develop\">\n          <a href=\"https://www.ai-speaker.com\" target=\"_blank\">\n            Oprogramowanie rozwijane w ramach projektu AI-Speaker.com </a\n          >.\n        </p>\n        <p>\n          Kod źródłowy opublikowany na licencji Apache 2.0<br />\n          Źródła:\n          <a href=\"https://github.com/sviete/AIS-home-assistant\" target=\"_blank\"\n            >server</a\n          >\n          &mdash;\n          <a\n            href=\"https://github.com/sviete/AIS-home-assistant-polymer\"\n            target=\"_blank\"\n            >frontend-ui</a\n          >\n        </p>\n        <p>\n          Zbudowane na bazie\n          <a href=\"https://www.home-assistant.io/\" target=\"_blank\"\n            >Home Assistant</a\n          >, <a href=\"https://www.python.org\" target=\"_blank\">Python 3</a>,\n          <a href=\"https://www.polymer-project.org\" target=\"_blank\">Polymer</a>,\n          <a href=\"https://MaterialDesignIcons.com\" target=\"_blank\"\n            >MaterialDesignIcons.com</a\n          >.\n        </p>\n        <p>\n          Frontend version: ${JS_VERSION} - ${JS_TYPE}\n          ${customUiList.length > 0\n            ? html`\n                <div>\n                  Custom UIs:\n                  ${customUiList.map(\n                    (item) => html`\n                      <div>\n                        <a href=\"${item.url}\" target=\"_blank\"> ${item.name}</a>:\n                        ${item.version}\n                      </div>\n                    `\n                  )}\n                </div>\n              `\n            : \"\"}\n        </p>\n        <p>\n          <a href=\"${nonDefaultLink}\">${nonDefaultLinkText}</a><br />\n          <mwc-button @click=\"${this._toggleDefaultPage}\" raised>\n            ${defaultPageText}\n          </mwc-button>\n        </p>\n      </div>\n      <div class=\"content\">\n        <system-health-card .hass=${this.hass}></system-health-card>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps): void {\n    super.firstUpdated(changedProps);\n\n    // Legacy custom UI can be slow to register, give them time.\n    const customUI = ((window as any).CUSTOM_UI_LIST || []).length;\n    setTimeout(() => {\n      if (((window as any).CUSTOM_UI_LIST || []).length !== customUI.length) {\n        this.requestUpdate();\n      }\n    }, 1000);\n  }\n\n  protected _toggleDefaultPage(): void {\n    if (localStorage.defaultPage === OPT_IN_PANEL) {\n      delete localStorage.defaultPage;\n    } else {\n      localStorage.defaultPage = OPT_IN_PANEL;\n    }\n    this.requestUpdate();\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyle,\n      css`\n        :host {\n          -ms-user-select: initial;\n          -webkit-user-select: initial;\n          -moz-user-select: initial;\n        }\n\n        .content {\n          direction: ltr;\n        }\n\n        .about {\n          text-align: center;\n          line-height: 2em;\n        }\n\n        .version {\n          @apply --paper-font-headline;\n        }\n\n        .develop {\n          @apply --paper-font-subhead;\n        }\n\n        .about a {\n          color: var(--dark-primary-color);\n        }\n\n        system-health-card {\n          display: block;\n          max-width: 600px;\n          margin: 0 auto;\n          padding-bottom: 16px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"developer-tools-info\": HaPanelDevInfo;\n  }\n}\n\ncustomElements.define(\"developer-tools-info\", HaPanelDevInfo);\n"],"sourceRoot":""}