//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_52
.address_size 64

	// .globl	_Z22tetrahedron_attributesv
.visible .global .align 1 .b8 tri_vertex_buffer[1];
.visible .global .align 1 .b8 tri_index_buffer[1];
.visible .global .align 1 .b8 tetrahedron_col_buffer[1];
.visible .global .align 4 .f32 normaltilt_iar = 0f3F800000;
.visible .global .texref normaltilt_tex;
.visible .global .align 4 .b8 tex_coord[12];
.visible .global .align 4 .b8 geo_normal[12];
.visible .global .align 4 .b8 shading_normal[12];
.visible .global .align 4 .b8 shading_color[12];
.visible .global .align 8 .b8 geom_uid[8];
.visible .global .align 4 .u32 geom_handle;
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo14normaltilt_iarE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo9tex_coordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo10geo_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo13shading_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo8geom_uidE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo11geom_handleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 1 .b8 _ZN21rti_internal_typename14normaltilt_iarE[6] = {102, 108, 111, 97, 116, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename9tex_coordE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename10geo_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename13shading_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename8geom_uidE[6] = {117, 105, 110, 116, 50, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename11geom_handleE[5] = {117, 105, 110, 116, 0};
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum14normaltilt_iarE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum9tex_coordE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum10geo_normalE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum13shading_colorE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum8geom_uidE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum11geom_handleE = 4919;
.visible .global .align 1 .b8 _ZN21rti_internal_semantic14normaltilt_iarE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic9tex_coordE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 95, 99, 111, 111, 114, 100, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic10geo_normalE[21] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 95, 110, 111, 114, 109, 97, 108, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic13shading_colorE[24] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 99, 111, 108, 111, 114, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic8geom_uidE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 95, 117, 105, 100, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic11geom_handleE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation14normaltilt_iarE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation9tex_coordE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation10geo_normalE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation13shading_colorE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation8geom_uidE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation11geom_handleE[1];

.visible .entry _Z22tetrahedron_attributesv(

)
{
	.reg .f32 	%f<29>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<38>;


	// inline asm
	call (%r1), _rt_get_primitive_index, ();
	// inline asm
	cvt.s64.s32	%rd3, %r1;
	mov.u64 	%rd31, tri_index_buffer;
	cvta.global.u64 	%rd2, %rd31;
	mov.u32 	%r10, 1;
	mov.u32 	%r11, 12;
	mov.u64 	%rd30, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r10, %r11, %rd3, %rd30, %rd30, %rd30);
	// inline asm
	ld.s32 	%rd9, [%rd1];
	mov.u64 	%rd32, tri_vertex_buffer;
	cvta.global.u64 	%rd8, %rd32;
	ld.s32 	%rd15, [%rd1+4];
	ld.s32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r10, %r11, %rd9, %rd30, %rd30, %rd30);
	// inline asm
	ld.f32 	%f3, [%rd7];
	ld.f32 	%f4, [%rd7+4];
	ld.f32 	%f5, [%rd7+8];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r10, %r11, %rd15, %rd30, %rd30, %rd30);
	// inline asm
	ld.f32 	%f6, [%rd13];
	ld.f32 	%f7, [%rd13+4];
	ld.f32 	%f8, [%rd13+8];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd8, %r10, %r11, %rd21, %rd30, %rd30, %rd30);
	// inline asm
	ld.f32 	%f9, [%rd19];
	ld.f32 	%f10, [%rd19+4];
	ld.f32 	%f11, [%rd19+8];
	sub.ftz.f32 	%f12, %f6, %f3;
	sub.ftz.f32 	%f13, %f7, %f4;
	sub.ftz.f32 	%f14, %f8, %f5;
	sub.ftz.f32 	%f15, %f9, %f3;
	sub.ftz.f32 	%f16, %f10, %f4;
	sub.ftz.f32 	%f17, %f11, %f5;
	mul.ftz.f32 	%f18, %f13, %f17;
	mul.ftz.f32 	%f19, %f14, %f16;
	sub.ftz.f32 	%f20, %f18, %f19;
	mul.ftz.f32 	%f21, %f14, %f15;
	mul.ftz.f32 	%f22, %f12, %f17;
	sub.ftz.f32 	%f23, %f21, %f22;
	mul.ftz.f32 	%f24, %f12, %f16;
	mul.ftz.f32 	%f25, %f13, %f15;
	sub.ftz.f32 	%f26, %f24, %f25;
	st.global.f32 	[geo_normal], %f20;
	st.global.f32 	[geo_normal+4], %f23;
	st.global.f32 	[geo_normal+8], %f26;
	st.global.f32 	[shading_normal], %f20;
	st.global.f32 	[shading_normal+4], %f23;
	st.global.f32 	[shading_normal+8], %f26;
	shr.s32 	%r12, %r1, 2;
	cvt.s64.s32	%rd27, %r12;
	mov.u64 	%rd33, tetrahedron_col_buffer;
	cvta.global.u64 	%rd26, %rd33;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r10, %r11, %rd27, %rd30, %rd30, %rd30);
	// inline asm
	ld.u32 	%rd34, [%rd25];
	ld.u32 	%rd35, [%rd25+4];
	bfi.b64 	%rd36, %rd35, %rd34, 32, 32;
	ld.f32 	%f27, [%rd25+8];
	st.global.u32 	[shading_color], %rd36;
	shr.u64 	%rd37, %rd36, 32;
	st.global.u32 	[shading_color+4], %rd37;
	st.global.f32 	[shading_color+8], %f27;
	ld.global.u32 	%r13, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r13, %r12};
	// inline asm
	call (%f1, %f2), _rt_get_triangle_barycentrics, ();
	// inline asm
	and.b32  	%r14, %r1, 3;
	cvt.rn.f32.s32	%f28, %r14;
	st.global.f32 	[tex_coord], %f1;
	st.global.f32 	[tex_coord+4], %f2;
	st.global.f32 	[tex_coord+8], %f28;
	ret;
}

	// .globl	_Z29tetrahedron_shaded_attributesv
.visible .entry _Z29tetrahedron_shaded_attributesv(

)
{
	.reg .f32 	%f<68>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<39>;


	// inline asm
	call (%r1), _rt_get_primitive_index, ();
	// inline asm
	cvt.s64.s32	%rd3, %r1;
	mov.u64 	%rd31, tri_index_buffer;
	cvta.global.u64 	%rd2, %rd31;
	mov.u32 	%r10, 1;
	mov.u32 	%r11, 12;
	mov.u64 	%rd30, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r10, %r11, %rd3, %rd30, %rd30, %rd30);
	// inline asm
	ld.s32 	%rd9, [%rd1];
	mov.u64 	%rd32, tri_vertex_buffer;
	cvta.global.u64 	%rd8, %rd32;
	ld.s32 	%rd15, [%rd1+4];
	ld.s32 	%rd21, [%rd1+8];
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r10, %r11, %rd9, %rd30, %rd30, %rd30);
	// inline asm
	ld.f32 	%f3, [%rd7];
	ld.f32 	%f4, [%rd7+4];
	ld.f32 	%f5, [%rd7+8];
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd8, %r10, %r11, %rd15, %rd30, %rd30, %rd30);
	// inline asm
	ld.f32 	%f6, [%rd13];
	ld.f32 	%f7, [%rd13+4];
	ld.f32 	%f8, [%rd13+8];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd8, %r10, %r11, %rd21, %rd30, %rd30, %rd30);
	// inline asm
	ld.f32 	%f9, [%rd19];
	ld.f32 	%f10, [%rd19+4];
	ld.f32 	%f11, [%rd19+8];
	// inline asm
	call (%f1, %f2), _rt_get_triangle_barycentrics, ();
	// inline asm
	tex.2d.v4.f32.f32	{%f12, %f13, %f14, %f15}, [normaltilt_tex, {%f1, %f2}];
	sub.ftz.f32 	%f16, %f7, %f4;
	sub.ftz.f32 	%f17, %f6, %f3;
	sub.ftz.f32 	%f18, %f10, %f4;
	sub.ftz.f32 	%f19, %f9, %f3;
	mul.ftz.f32 	%f20, %f16, %f16;
	sub.ftz.f32 	%f21, %f8, %f5;
	mul.ftz.f32 	%f22, %f18, %f18;
	sub.ftz.f32 	%f23, %f11, %f5;
	fma.rn.ftz.f32 	%f24, %f17, %f17, %f20;
	fma.rn.ftz.f32 	%f25, %f19, %f19, %f22;
	fma.rn.ftz.f32 	%f26, %f21, %f21, %f24;
	fma.rn.ftz.f32 	%f27, %f23, %f23, %f25;
	sqrt.approx.ftz.f32 	%f28, %f26;
	rsqrt.approx.ftz.f32 	%f29, %f26;
	rsqrt.approx.ftz.f32 	%f30, %f27;
	mul.ftz.f32 	%f31, %f17, %f29;
	mul.ftz.f32 	%f32, %f16, %f29;
	mul.ftz.f32 	%f33, %f21, %f29;
	mul.ftz.f32 	%f34, %f19, %f30;
	mul.ftz.f32 	%f35, %f18, %f30;
	mul.ftz.f32 	%f36, %f23, %f30;
	mul.ftz.f32 	%f37, %f28, %f30;
	ld.global.f32 	%f38, [normaltilt_iar];
	mul.ftz.f32 	%f39, %f37, %f38;
	mul.ftz.f32 	%f40, %f13, %f39;
	mul.ftz.f32 	%f41, %f16, %f23;
	mul.ftz.f32 	%f42, %f21, %f18;
	sub.ftz.f32 	%f43, %f41, %f42;
	mul.ftz.f32 	%f44, %f21, %f19;
	mul.ftz.f32 	%f45, %f17, %f23;
	sub.ftz.f32 	%f46, %f44, %f45;
	mul.ftz.f32 	%f47, %f17, %f18;
	mul.ftz.f32 	%f48, %f16, %f19;
	sub.ftz.f32 	%f49, %f47, %f48;
	mul.ftz.f32 	%f50, %f46, %f46;
	fma.rn.ftz.f32 	%f51, %f43, %f43, %f50;
	fma.rn.ftz.f32 	%f52, %f49, %f49, %f51;
	rsqrt.approx.ftz.f32 	%f53, %f52;
	mul.ftz.f32 	%f54, %f43, %f53;
	mul.ftz.f32 	%f55, %f46, %f53;
	mul.ftz.f32 	%f56, %f49, %f53;
	fma.rn.ftz.f32 	%f57, %f31, %f12, %f54;
	fma.rn.ftz.f32 	%f58, %f32, %f12, %f55;
	fma.rn.ftz.f32 	%f59, %f33, %f12, %f56;
	mul.ftz.f32 	%f60, %f34, %f40;
	mul.ftz.f32 	%f61, %f35, %f40;
	mul.ftz.f32 	%f62, %f36, %f40;
	sub.ftz.f32 	%f63, %f57, %f60;
	sub.ftz.f32 	%f64, %f58, %f61;
	sub.ftz.f32 	%f65, %f59, %f62;
	st.global.f32 	[geo_normal], %f63;
	st.global.f32 	[geo_normal+4], %f64;
	st.global.f32 	[geo_normal+8], %f65;
	st.global.f32 	[shading_normal], %f63;
	st.global.f32 	[shading_normal+4], %f64;
	st.global.f32 	[shading_normal+8], %f65;
	shr.s32 	%r12, %r1, 2;
	cvt.s64.s32	%rd27, %r12;
	mov.u64 	%rd34, tetrahedron_col_buffer;
	cvta.global.u64 	%rd26, %rd34;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r10, %r11, %rd27, %rd30, %rd30, %rd30);
	// inline asm
	ld.u32 	%rd35, [%rd25];
	ld.u32 	%rd36, [%rd25+4];
	bfi.b64 	%rd37, %rd36, %rd35, 32, 32;
	ld.f32 	%f66, [%rd25+8];
	st.global.u32 	[shading_color], %rd37;
	shr.u64 	%rd38, %rd37, 32;
	st.global.u32 	[shading_color+4], %rd38;
	st.global.f32 	[shading_color+8], %f66;
	ld.global.u32 	%r13, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r13, %r12};
	and.b32  	%r14, %r1, 3;
	cvt.rn.f32.s32	%f67, %r14;
	st.global.f32 	[tex_coord], %f1;
	st.global.f32 	[tex_coord+4], %f2;
	st.global.f32 	[tex_coord+8], %f67;
	ret;
}


 