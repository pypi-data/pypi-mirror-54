//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26218862
// Cuda compilation tools, release 10.1, V10.1.168
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_70
.address_size 64

	// .globl	_Z18particle_intersecti
.visible .global .align 1 .b8 positions_buffer[1];
.visible .global .align 1 .b8 particle_u_buffer[1];
.visible .global .align 1 .b8 particle_v_buffer[1];
.visible .global .align 1 .b8 colors_buffer[1];
.visible .global .align 1 .b8 radii_buffer[1];
.visible .global .align 8 .b8 displacement_size[8];
.visible .global .align 8 .b8 displacement_step[8];
.visible .global .texref displacement_tex;
.visible .global .texref normaltilt_tex;
.visible .global .align 4 .b8 tex_coord[12];
.visible .global .align 4 .b8 geo_normal[12];
.visible .global .align 4 .b8 shading_normal[12];
.visible .global .align 4 .b8 shading_color[12];
.visible .global .align 8 .b8 geom_uid[8];
.visible .global .align 4 .u32 geom_handle;
.visible .global .align 4 .f32 scene_epsilon;
.visible .global .align 4 .b8 ray[36];
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo17displacement_sizeE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo17displacement_stepE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo9tex_coordE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo10geo_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo14shading_normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo13shading_colorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo8geom_uidE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo11geom_handleE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo13scene_epsilonE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.visible .global .align 4 .b8 _ZN21rti_internal_typeinfo3rayE[8] = {82, 97, 121, 0, 36, 0, 0, 0};
.visible .global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.visible .global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.visible .global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.visible .global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.visible .global .align 1 .b8 _ZN21rti_internal_typename17displacement_sizeE[7] = {102, 108, 111, 97, 116, 50, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename17displacement_stepE[7] = {102, 108, 111, 97, 116, 50, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename9tex_coordE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename10geo_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename14shading_normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename13shading_colorE[7] = {102, 108, 111, 97, 116, 51, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename8geom_uidE[6] = {117, 105, 110, 116, 50, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename11geom_handleE[5] = {117, 105, 110, 116, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename13scene_epsilonE[6] = {102, 108, 111, 97, 116, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_typename3rayE[11] = {111, 112, 116, 105, 120, 58, 58, 82, 97, 121, 0};
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum17displacement_sizeE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum17displacement_stepE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum9tex_coordE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum10geo_normalE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum14shading_normalE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum13shading_colorE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum8geom_uidE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum11geom_handleE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum13scene_epsilonE = 4919;
.visible .global .align 4 .u32 _ZN21rti_internal_typeenum3rayE = 4919;
.visible .global .align 1 .b8 _ZN21rti_internal_semantic17displacement_sizeE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic17displacement_stepE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic9tex_coordE[20] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 116, 101, 120, 95, 99, 111, 111, 114, 100, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic10geo_normalE[21] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 95, 110, 111, 114, 109, 97, 108, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic14shading_normalE[25] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 110, 111, 114, 109, 97, 108, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic13shading_colorE[24] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 115, 104, 97, 100, 105, 110, 103, 95, 99, 111, 108, 111, 114, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic8geom_uidE[19] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 103, 101, 111, 109, 95, 117, 105, 100, 0};
.visible .global .align 1 .b8 _ZN21rti_internal_semantic11geom_handleE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic13scene_epsilonE[1];
.visible .global .align 1 .b8 _ZN21rti_internal_semantic3rayE[13] = {114, 116, 67, 117, 114, 114, 101, 110, 116, 82, 97, 121, 0};
.visible .global .align 1 .b8 _ZN23rti_internal_annotation17displacement_sizeE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation17displacement_stepE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation9tex_coordE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation10geo_normalE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation14shading_normalE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation13shading_colorE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation8geom_uidE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation11geom_handleE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation13scene_epsilonE[1];
.visible .global .align 1 .b8 _ZN23rti_internal_annotation3rayE[1];

.visible .entry _Z18particle_intersecti(
	.param .u32 _Z18particle_intersecti_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<56>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<38>;


	ld.param.u32 	%r1, [_Z18particle_intersecti_param_0];
	cvt.s64.s32	%rd4, %r1;
	mov.u64 	%rd8, radii_buffer;
	cvta.global.u64 	%rd3, %rd8;
	mov.u32 	%r2, 1;
	mov.u32 	%r3, 4;
	mov.u64 	%rd7, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r2, %r3, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f1, [%rd2];
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	@%p1 bra 	BB0_6;

	mov.u64 	%rd15, positions_buffer;
	cvta.global.u64 	%rd10, %rd15;
	mov.u32 	%r5, 12;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r2, %r5, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.global.f32 	%f10, [ray];
	ld.f32 	%f2, [%rd9];
	sub.ftz.f32 	%f11, %f10, %f2;
	ld.global.f32 	%f12, [ray+4];
	ld.f32 	%f3, [%rd9+4];
	sub.ftz.f32 	%f13, %f12, %f3;
	ld.global.f32 	%f14, [ray+8];
	ld.f32 	%f4, [%rd9+8];
	sub.ftz.f32 	%f15, %f14, %f4;
	ld.global.f32 	%f16, [ray+12];
	ld.global.f32 	%f17, [ray+16];
	mul.ftz.f32 	%f18, %f13, %f17;
	fma.rn.ftz.f32 	%f19, %f11, %f16, %f18;
	ld.global.f32 	%f20, [ray+20];
	fma.rn.ftz.f32 	%f5, %f15, %f20, %f19;
	mul.ftz.f32 	%f21, %f13, %f13;
	fma.rn.ftz.f32 	%f22, %f11, %f11, %f21;
	fma.rn.ftz.f32 	%f23, %f15, %f15, %f22;
	mul.ftz.f32 	%f24, %f1, %f1;
	sub.ftz.f32 	%f25, %f23, %f24;
	mul.ftz.f32 	%f26, %f5, %f5;
	sub.ftz.f32 	%f6, %f26, %f25;
	setp.leu.ftz.f32	%p2, %f6, 0f00000000;
	@%p2 bra 	BB0_6;

	sqrt.approx.ftz.f32 	%f7, %f6;
	neg.ftz.f32 	%f28, %f5;
	sub.ftz.f32 	%f27, %f28, %f7;
	// inline asm
	call (%r6), _rt_potential_intersection, (%f27);
	// inline asm
	setp.eq.s32	%p3, %r6, 0;
	@%p3 bra 	BB0_4;

	st.global.u32 	[tex_coord+4], %rd7;
	st.global.u32 	[tex_coord], %rd7;
	mov.u32 	%r10, 0;
	st.global.u32 	[tex_coord+8], %r10;
	mov.u64 	%rd22, colors_buffer;
	cvta.global.u64 	%rd17, %rd22;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd17, %r2, %r5, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%rd23, [%rd16];
	ld.u32 	%rd24, [%rd16+4];
	bfi.b64 	%rd25, %rd24, %rd23, 32, 32;
	ld.f32 	%f29, [%rd16+8];
	st.global.u32 	[shading_color], %rd25;
	shr.u64 	%rd26, %rd25, 32;
	st.global.u32 	[shading_color+4], %rd26;
	st.global.f32 	[shading_color+8], %f29;
	ld.global.f32 	%f30, [ray+12];
	ld.global.f32 	%f31, [ray+16];
	ld.global.f32 	%f32, [ray+20];
	ld.global.f32 	%f33, [ray];
	fma.rn.ftz.f32 	%f34, %f27, %f30, %f33;
	ld.global.f32 	%f35, [ray+4];
	fma.rn.ftz.f32 	%f36, %f27, %f31, %f35;
	ld.global.f32 	%f37, [ray+8];
	fma.rn.ftz.f32 	%f38, %f27, %f32, %f37;
	sub.ftz.f32 	%f39, %f34, %f2;
	sub.ftz.f32 	%f40, %f36, %f3;
	sub.ftz.f32 	%f41, %f38, %f4;
	st.global.f32 	[shading_normal], %f39;
	st.global.f32 	[shading_normal+4], %f40;
	st.global.f32 	[shading_normal+8], %f41;
	st.global.f32 	[geo_normal], %f39;
	st.global.f32 	[geo_normal+4], %f40;
	st.global.f32 	[geo_normal+8], %f41;
	ld.global.u32 	%r11, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r11, %r1};
	// inline asm
	call (%r9), _rt_report_intersection, (%r10);
	// inline asm
	setp.ne.s32	%p4, %r9, 0;
	@%p4 bra 	BB0_6;

BB0_4:
	sub.ftz.f32 	%f42, %f7, %f5;
	// inline asm
	call (%r12), _rt_potential_intersection, (%f42);
	// inline asm
	setp.eq.s32	%p5, %r12, 0;
	@%p5 bra 	BB0_6;

	st.global.u32 	[tex_coord+4], %rd7;
	st.global.u32 	[tex_coord], %rd7;
	mov.u32 	%r16, 0;
	st.global.u32 	[tex_coord+8], %r16;
	mov.u64 	%rd33, colors_buffer;
	cvta.global.u64 	%rd28, %rd33;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r2, %r5, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%rd34, [%rd27];
	ld.u32 	%rd35, [%rd27+4];
	bfi.b64 	%rd36, %rd35, %rd34, 32, 32;
	ld.f32 	%f43, [%rd27+8];
	st.global.u32 	[shading_color], %rd36;
	shr.u64 	%rd37, %rd36, 32;
	st.global.u32 	[shading_color+4], %rd37;
	st.global.f32 	[shading_color+8], %f43;
	ld.global.f32 	%f44, [ray+12];
	ld.global.f32 	%f45, [ray+16];
	ld.global.f32 	%f46, [ray+20];
	ld.global.f32 	%f47, [ray];
	fma.rn.ftz.f32 	%f48, %f42, %f44, %f47;
	ld.global.f32 	%f49, [ray+4];
	fma.rn.ftz.f32 	%f50, %f42, %f45, %f49;
	ld.global.f32 	%f51, [ray+8];
	fma.rn.ftz.f32 	%f52, %f42, %f46, %f51;
	sub.ftz.f32 	%f53, %f48, %f2;
	sub.ftz.f32 	%f54, %f50, %f3;
	sub.ftz.f32 	%f55, %f52, %f4;
	st.global.f32 	[shading_normal], %f53;
	st.global.f32 	[shading_normal+4], %f54;
	st.global.f32 	[shading_normal+8], %f55;
	st.global.f32 	[geo_normal], %f53;
	st.global.f32 	[geo_normal+4], %f54;
	st.global.f32 	[geo_normal+8], %f55;
	ld.global.u32 	%r17, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r17, %r1};
	// inline asm
	call (%r15), _rt_report_intersection, (%r16);
	// inline asm

BB0_6:
	ret;
}

	// .globl	_Z24particle_entry_intersecti
.visible .entry _Z24particle_entry_intersecti(
	.param .u32 _Z24particle_entry_intersecti_param_0
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<60>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<30>;


	ld.param.u32 	%r1, [_Z24particle_entry_intersecti_param_0];
	cvt.s64.s32	%rd4, %r1;
	mov.u64 	%rd8, radii_buffer;
	cvta.global.u64 	%rd3, %rd8;
	mov.u32 	%r2, 1;
	mov.u32 	%r3, 4;
	mov.u64 	%rd7, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r2, %r3, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f1, [%rd2];
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	@%p1 bra 	BB1_8;

	mov.u64 	%rd15, positions_buffer;
	cvta.global.u64 	%rd10, %rd15;
	mov.u32 	%r5, 12;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r2, %r5, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.global.f32 	%f2, [ray];
	ld.f32 	%f3, [%rd9];
	sub.ftz.f32 	%f22, %f2, %f3;
	ld.global.f32 	%f4, [ray+4];
	ld.f32 	%f5, [%rd9+4];
	sub.ftz.f32 	%f23, %f4, %f5;
	ld.global.f32 	%f6, [ray+8];
	ld.f32 	%f7, [%rd9+8];
	sub.ftz.f32 	%f24, %f6, %f7;
	ld.global.f32 	%f8, [ray+12];
	ld.global.f32 	%f9, [ray+16];
	mul.ftz.f32 	%f25, %f23, %f9;
	fma.rn.ftz.f32 	%f26, %f22, %f8, %f25;
	ld.global.f32 	%f10, [ray+20];
	fma.rn.ftz.f32 	%f11, %f24, %f10, %f26;
	mul.ftz.f32 	%f27, %f23, %f23;
	fma.rn.ftz.f32 	%f28, %f22, %f22, %f27;
	fma.rn.ftz.f32 	%f29, %f24, %f24, %f28;
	mul.ftz.f32 	%f30, %f1, %f1;
	sub.ftz.f32 	%f31, %f29, %f30;
	mul.ftz.f32 	%f32, %f11, %f11;
	sub.ftz.f32 	%f12, %f32, %f31;
	setp.leu.ftz.f32	%p2, %f12, 0f00000000;
	@%p2 bra 	BB1_8;

	sqrt.approx.ftz.f32 	%f13, %f12;
	neg.ftz.f32 	%f33, %f11;
	sub.ftz.f32 	%f14, %f33, %f13;
	fma.rn.ftz.f32 	%f34, %f8, %f14, %f2;
	fma.rn.ftz.f32 	%f35, %f14, %f9, %f4;
	fma.rn.ftz.f32 	%f36, %f14, %f10, %f6;
	sub.ftz.f32 	%f15, %f34, %f3;
	sub.ftz.f32 	%f16, %f35, %f5;
	sub.ftz.f32 	%f17, %f36, %f7;
	mul.ftz.f32 	%f37, %f16, %f9;
	fma.rn.ftz.f32 	%f38, %f15, %f8, %f37;
	fma.rn.ftz.f32 	%f39, %f17, %f10, %f38;
	setp.geu.ftz.f32	%p3, %f39, 0f00000000;
	@%p3 bra 	BB1_5;

	// inline asm
	call (%r6), _rt_potential_intersection, (%f14);
	// inline asm
	setp.eq.s32	%p4, %r6, 0;
	@%p4 bra 	BB1_5;

	st.global.u32 	[tex_coord+4], %rd7;
	st.global.u32 	[tex_coord], %rd7;
	mov.u32 	%r10, 0;
	st.global.u32 	[tex_coord+8], %r10;
	mov.u64 	%rd22, colors_buffer;
	cvta.global.u64 	%rd17, %rd22;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd17, %r2, %r5, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f41, [%rd16];
	ld.f32 	%f42, [%rd16+4];
	ld.f32 	%f43, [%rd16+8];
	st.global.f32 	[shading_color], %f41;
	st.global.f32 	[shading_color+4], %f42;
	st.global.f32 	[shading_color+8], %f43;
	st.global.f32 	[shading_normal], %f15;
	st.global.f32 	[shading_normal+4], %f16;
	st.global.f32 	[shading_normal+8], %f17;
	st.global.f32 	[geo_normal], %f15;
	st.global.f32 	[geo_normal+4], %f16;
	st.global.f32 	[geo_normal+8], %f17;
	ld.global.u32 	%r11, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r11, %r1};
	// inline asm
	call (%r9), _rt_report_intersection, (%r10);
	// inline asm
	setp.ne.s32	%p5, %r9, 0;
	@%p5 bra 	BB1_8;

BB1_5:
	sub.ftz.f32 	%f18, %f13, %f11;
	ld.global.f32 	%f44, [ray+12];
	ld.global.f32 	%f45, [ray+16];
	ld.global.f32 	%f46, [ray+20];
	ld.global.f32 	%f47, [ray];
	fma.rn.ftz.f32 	%f48, %f18, %f44, %f47;
	ld.global.f32 	%f49, [ray+4];
	fma.rn.ftz.f32 	%f50, %f18, %f45, %f49;
	ld.global.f32 	%f51, [ray+8];
	fma.rn.ftz.f32 	%f52, %f18, %f46, %f51;
	sub.ftz.f32 	%f19, %f48, %f3;
	sub.ftz.f32 	%f20, %f50, %f5;
	sub.ftz.f32 	%f21, %f52, %f7;
	mul.ftz.f32 	%f53, %f20, %f45;
	fma.rn.ftz.f32 	%f54, %f19, %f44, %f53;
	fma.rn.ftz.f32 	%f55, %f21, %f46, %f54;
	setp.geu.ftz.f32	%p6, %f55, 0f00000000;
	@%p6 bra 	BB1_8;

	// inline asm
	call (%r12), _rt_potential_intersection, (%f18);
	// inline asm
	setp.eq.s32	%p7, %r12, 0;
	@%p7 bra 	BB1_8;

	st.global.u32 	[tex_coord+4], %rd7;
	st.global.u32 	[tex_coord], %rd7;
	mov.u32 	%r16, 0;
	st.global.u32 	[tex_coord+8], %r16;
	mov.u64 	%rd29, colors_buffer;
	cvta.global.u64 	%rd24, %rd29;
	// inline asm
	call (%rd23), _rt_buffer_get_64, (%rd24, %r2, %r5, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f57, [%rd23];
	ld.f32 	%f58, [%rd23+4];
	ld.f32 	%f59, [%rd23+8];
	st.global.f32 	[shading_color], %f57;
	st.global.f32 	[shading_color+4], %f58;
	st.global.f32 	[shading_color+8], %f59;
	st.global.f32 	[shading_normal], %f19;
	st.global.f32 	[shading_normal+4], %f20;
	st.global.f32 	[shading_normal+8], %f21;
	st.global.f32 	[geo_normal], %f19;
	st.global.f32 	[geo_normal+4], %f20;
	st.global.f32 	[geo_normal+8], %f21;
	ld.global.u32 	%r17, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r17, %r1};
	// inline asm
	call (%r15), _rt_report_intersection, (%r16);
	// inline asm

BB1_8:
	ret;
}

	// .globl	_Z15particle_boundsiPf
.visible .entry _Z15particle_boundsiPf(
	.param .u32 _Z15particle_boundsiPf_param_0,
	.param .u64 _Z15particle_boundsiPf_param_1
)
{
	.reg .f32 	%f<11>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd13, [_Z15particle_boundsiPf_param_1];
	ld.param.s32 	%rd9, [_Z15particle_boundsiPf_param_0];
	mov.u64 	%rd14, positions_buffer;
	cvta.global.u64 	%rd2, %rd14;
	mov.u32 	%r3, 1;
	mov.u32 	%r2, 12;
	mov.u64 	%rd12, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r3, %r2, %rd9, %rd12, %rd12, %rd12);
	// inline asm
	ld.f32 	%f1, [%rd1];
	ld.f32 	%f2, [%rd1+4];
	ld.f32 	%f3, [%rd1+8];
	mov.u64 	%rd15, radii_buffer;
	cvta.global.u64 	%rd8, %rd15;
	mov.u32 	%r4, 4;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd8, %r3, %r4, %rd9, %rd12, %rd12, %rd12);
	// inline asm
	ld.f32 	%f4, [%rd7];
	cvta.to.global.u64 	%rd16, %rd13;
	sub.ftz.f32 	%f5, %f1, %f4;
	sub.ftz.f32 	%f6, %f2, %f4;
	sub.ftz.f32 	%f7, %f3, %f4;
	add.ftz.f32 	%f8, %f1, %f4;
	add.ftz.f32 	%f9, %f2, %f4;
	add.ftz.f32 	%f10, %f3, %f4;
	st.global.f32 	[%rd16], %f5;
	st.global.f32 	[%rd16+4], %f6;
	st.global.f32 	[%rd16+8], %f7;
	st.global.f32 	[%rd16+12], %f8;
	st.global.f32 	[%rd16+16], %f9;
	st.global.f32 	[%rd16+20], %f10;
	ret;
}

	// .globl	_Z21particle_tx_intersecti
.visible .entry _Z21particle_tx_intersecti(
	.param .u32 _Z21particle_tx_intersecti_param_0
)
{
	.reg .pred 	%p<28>;
	.reg .f32 	%f<248>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<66>;


	ld.param.u32 	%r5, [_Z21particle_tx_intersecti_param_0];
	cvt.s64.s32	%rd4, %r5;
	mov.u64 	%rd8, radii_buffer;
	cvta.global.u64 	%rd3, %rd8;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 4;
	mov.u64 	%rd7, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r6, %r7, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f1, [%rd2];
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	@%p1 bra 	BB3_16;

	mov.u64 	%rd15, positions_buffer;
	cvta.global.u64 	%rd10, %rd15;
	mov.u32 	%r9, 12;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.global.f32 	%f24, [ray];
	ld.f32 	%f2, [%rd9];
	sub.ftz.f32 	%f25, %f24, %f2;
	ld.global.f32 	%f26, [ray+4];
	ld.f32 	%f3, [%rd9+4];
	sub.ftz.f32 	%f27, %f26, %f3;
	ld.global.f32 	%f28, [ray+8];
	ld.f32 	%f4, [%rd9+8];
	sub.ftz.f32 	%f29, %f28, %f4;
	ld.global.f32 	%f30, [ray+12];
	ld.global.f32 	%f31, [ray+16];
	mul.ftz.f32 	%f32, %f27, %f31;
	fma.rn.ftz.f32 	%f33, %f25, %f30, %f32;
	ld.global.f32 	%f34, [ray+20];
	fma.rn.ftz.f32 	%f5, %f29, %f34, %f33;
	mul.ftz.f32 	%f35, %f27, %f27;
	fma.rn.ftz.f32 	%f36, %f25, %f25, %f35;
	fma.rn.ftz.f32 	%f37, %f29, %f29, %f36;
	mul.ftz.f32 	%f38, %f1, %f1;
	sub.ftz.f32 	%f39, %f37, %f38;
	mul.ftz.f32 	%f40, %f5, %f5;
	sub.ftz.f32 	%f6, %f40, %f39;
	setp.leu.ftz.f32	%p2, %f6, 0f00000000;
	@%p2 bra 	BB3_16;

	sqrt.approx.ftz.f32 	%f7, %f6;
	neg.ftz.f32 	%f42, %f5;
	sub.ftz.f32 	%f41, %f42, %f7;
	// inline asm
	call (%r10), _rt_potential_intersection, (%f41);
	// inline asm
	setp.eq.s32	%p3, %r10, 0;
	@%p3 bra 	BB3_9;

	mov.u64 	%rd34, colors_buffer;
	cvta.global.u64 	%rd17, %rd34;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd17, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%rd35, [%rd16];
	ld.u32 	%rd36, [%rd16+4];
	bfi.b64 	%rd37, %rd36, %rd35, 32, 32;
	ld.f32 	%f43, [%rd16+8];
	st.global.u32 	[shading_color], %rd37;
	shr.u64 	%rd38, %rd37, 32;
	st.global.u32 	[shading_color+4], %rd38;
	st.global.f32 	[shading_color+8], %f43;
	ld.global.f32 	%f44, [ray+12];
	ld.global.f32 	%f45, [ray+16];
	ld.global.f32 	%f46, [ray+20];
	ld.global.f32 	%f47, [ray];
	fma.rn.ftz.f32 	%f48, %f41, %f44, %f47;
	ld.global.f32 	%f49, [ray+4];
	fma.rn.ftz.f32 	%f50, %f41, %f45, %f49;
	ld.global.f32 	%f51, [ray+8];
	fma.rn.ftz.f32 	%f52, %f41, %f46, %f51;
	sub.ftz.f32 	%f53, %f48, %f2;
	sub.ftz.f32 	%f54, %f50, %f3;
	sub.ftz.f32 	%f55, %f52, %f4;
	mul.ftz.f32 	%f56, %f54, %f54;
	fma.rn.ftz.f32 	%f57, %f53, %f53, %f56;
	fma.rn.ftz.f32 	%f58, %f55, %f55, %f57;
	rsqrt.approx.ftz.f32 	%f59, %f58;
	mul.ftz.f32 	%f60, %f53, %f59;
	mul.ftz.f32 	%f61, %f54, %f59;
	mul.ftz.f32 	%f62, %f55, %f59;
	st.global.f32 	[shading_normal], %f60;
	st.global.f32 	[shading_normal+4], %f61;
	st.global.f32 	[shading_normal+8], %f62;
	st.global.f32 	[geo_normal], %f60;
	st.global.f32 	[geo_normal+4], %f61;
	st.global.f32 	[geo_normal+8], %f62;
	mov.u64 	%rd39, particle_u_buffer;
	cvta.global.u64 	%rd23, %rd39;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f63, [%rd22];
	ld.f32 	%f64, [%rd22+4];
	ld.f32 	%f65, [%rd22+8];
	mov.u64 	%rd40, particle_v_buffer;
	cvta.global.u64 	%rd29, %rd40;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f66, [%rd28+8];
	mul.ftz.f32 	%f67, %f64, %f66;
	ld.f32 	%f68, [%rd28+4];
	mul.ftz.f32 	%f69, %f65, %f68;
	sub.ftz.f32 	%f70, %f67, %f69;
	ld.f32 	%f71, [%rd28];
	mul.ftz.f32 	%f72, %f65, %f71;
	mul.ftz.f32 	%f73, %f63, %f66;
	sub.ftz.f32 	%f74, %f72, %f73;
	mul.ftz.f32 	%f75, %f63, %f68;
	mul.ftz.f32 	%f76, %f64, %f71;
	sub.ftz.f32 	%f77, %f75, %f76;
	mul.ftz.f32 	%f78, %f61, %f68;
	fma.rn.ftz.f32 	%f79, %f60, %f71, %f78;
	fma.rn.ftz.f32 	%f80, %f62, %f66, %f79;
	mul.ftz.f32 	%f81, %f61, %f64;
	fma.rn.ftz.f32 	%f82, %f60, %f63, %f81;
	fma.rn.ftz.f32 	%f9, %f62, %f65, %f82;
	mul.ftz.f32 	%f83, %f61, %f74;
	fma.rn.ftz.f32 	%f84, %f60, %f70, %f83;
	fma.rn.ftz.f32 	%f85, %f62, %f77, %f84;
	abs.ftz.f32 	%f10, %f80;
	abs.ftz.f32 	%f11, %f85;
	setp.eq.ftz.f32	%p4, %f10, 0f00000000;
	setp.eq.ftz.f32	%p5, %f11, 0f00000000;
	and.pred  	%p6, %p4, %p5;
	mov.b32 	 %r1, %f80;
	mov.b32 	 %r17, %f85;
	and.b32  	%r2, %r17, -2147483648;
	@%p6 bra 	BB3_7;
	bra.uni 	BB3_4;

BB3_7:
	shr.s32 	%r24, %r1, 31;
	and.b32  	%r25, %r24, 1078530011;
	or.b32  	%r26, %r2, %r25;
	mov.b32 	 %f246, %r26;
	bra.uni 	BB3_8;

BB3_4:
	setp.eq.ftz.f32	%p7, %f10, 0f7F800000;
	setp.eq.ftz.f32	%p8, %f11, 0f7F800000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB3_6;
	bra.uni 	BB3_5;

BB3_6:
	shr.s32 	%r20, %r1, 31;
	and.b32  	%r21, %r20, 13483017;
	add.s32 	%r22, %r21, 1061752795;
	or.b32  	%r23, %r22, %r2;
	mov.b32 	 %f246, %r23;
	bra.uni 	BB3_8;

BB3_5:
	max.ftz.f32 	%f86, %f11, %f10;
	min.ftz.f32 	%f87, %f11, %f10;
	div.full.ftz.f32 	%f88, %f87, %f86;
	mul.rn.ftz.f32 	%f89, %f88, %f88;
	mov.f32 	%f90, 0fC0B59883;
	mov.f32 	%f91, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f92, %f89, %f91, %f90;
	mov.f32 	%f93, 0fC0D21907;
	fma.rn.ftz.f32 	%f94, %f92, %f89, %f93;
	mul.ftz.f32 	%f95, %f89, %f94;
	mul.ftz.f32 	%f96, %f88, %f95;
	add.ftz.f32 	%f97, %f89, 0f41355DC0;
	mov.f32 	%f98, 0f41E6BD60;
	fma.rn.ftz.f32 	%f99, %f97, %f89, %f98;
	mov.f32 	%f100, 0f419D92C8;
	fma.rn.ftz.f32 	%f101, %f99, %f89, %f100;
	rcp.approx.ftz.f32 	%f102, %f101;
	fma.rn.ftz.f32 	%f103, %f96, %f102, %f88;
	mov.f32 	%f104, 0f3FC90FDB;
	sub.ftz.f32 	%f105, %f104, %f103;
	setp.gt.ftz.f32	%p10, %f11, %f10;
	selp.f32	%f106, %f105, %f103, %p10;
	mov.f32 	%f107, 0f40490FDB;
	sub.ftz.f32 	%f108, %f107, %f106;
	setp.lt.s32	%p11, %r1, 0;
	selp.f32	%f109, %f108, %f106, %p11;
	mov.b32 	 %r18, %f109;
	or.b32  	%r19, %r18, %r2;
	mov.b32 	 %f110, %r19;
	add.ftz.f32 	%f111, %f10, %f11;
	setp.gtu.ftz.f32	%p12, %f111, 0f7F800000;
	selp.f32	%f246, %f111, %f110, %p12;

BB3_8:
	mov.f32 	%f112, 0f40C90FDB;
	div.approx.ftz.f32 	%f113, %f246, %f112;
	add.ftz.f32 	%f114, %f113, 0f3F000000;
	abs.ftz.f32 	%f115, %f9;
	mov.f32 	%f116, 0f3F800000;
	sub.ftz.f32 	%f117, %f116, %f115;
	mul.ftz.f32 	%f118, %f117, 0f3F000000;
	sqrt.approx.ftz.f32 	%f119, %f118;
	setp.gt.ftz.f32	%p13, %f115, 0f3F11EB85;
	selp.f32	%f120, %f119, %f115, %p13;
	mul.ftz.f32 	%f121, %f120, %f120;
	mov.f32 	%f122, 0f3C94D2E9;
	mov.f32 	%f123, 0f3D53F941;
	fma.rn.ftz.f32 	%f124, %f123, %f121, %f122;
	mov.f32 	%f125, 0f3D3F841F;
	fma.rn.ftz.f32 	%f126, %f124, %f121, %f125;
	mov.f32 	%f127, 0f3D994929;
	fma.rn.ftz.f32 	%f128, %f126, %f121, %f127;
	mov.f32 	%f129, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f130, %f128, %f121, %f129;
	mul.ftz.f32 	%f131, %f121, %f130;
	fma.rn.ftz.f32 	%f132, %f131, %f120, %f120;
	mov.f32 	%f133, 0f3FC90FDB;
	mov.f32 	%f134, 0fC0000000;
	fma.rn.ftz.f32 	%f135, %f134, %f132, %f133;
	selp.f32	%f136, %f135, %f132, %p13;
	setp.gtu.ftz.f32	%p14, %f136, 0f7F800000;
	mov.b32 	 %r29, %f136;
	mov.b32 	 %r30, %f9;
	and.b32  	%r31, %r30, -2147483648;
	or.b32  	%r32, %r29, %r31;
	mov.b32 	 %f137, %r32;
	selp.f32	%f138, %f136, %f137, %p14;
	mov.f32 	%f139, 0f40490FDB;
	div.approx.ftz.f32 	%f140, %f138, %f139;
	mov.f32 	%f141, 0f3F000000;
	sub.ftz.f32 	%f142, %f141, %f140;
	st.global.f32 	[tex_coord], %f114;
	st.global.f32 	[tex_coord+4], %f142;
	cvt.rn.f32.s32	%f143, %r5;
	st.global.f32 	[tex_coord+8], %f143;
	mov.u32 	%r28, 0;
	ld.global.u32 	%r33, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r33, %r5};
	// inline asm
	call (%r27), _rt_report_intersection, (%r28);
	// inline asm
	setp.ne.s32	%p15, %r27, 0;
	@%p15 bra 	BB3_16;

BB3_9:
	sub.ftz.f32 	%f144, %f7, %f5;
	// inline asm
	call (%r34), _rt_potential_intersection, (%f144);
	// inline asm
	setp.eq.s32	%p16, %r34, 0;
	@%p16 bra 	BB3_16;

	mov.u64 	%rd59, colors_buffer;
	cvta.global.u64 	%rd42, %rd59;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd42, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%rd60, [%rd41];
	ld.u32 	%rd61, [%rd41+4];
	bfi.b64 	%rd62, %rd61, %rd60, 32, 32;
	ld.f32 	%f145, [%rd41+8];
	st.global.u32 	[shading_color], %rd62;
	shr.u64 	%rd63, %rd62, 32;
	st.global.u32 	[shading_color+4], %rd63;
	st.global.f32 	[shading_color+8], %f145;
	ld.global.f32 	%f146, [ray+12];
	ld.global.f32 	%f147, [ray+16];
	ld.global.f32 	%f148, [ray+20];
	ld.global.f32 	%f149, [ray];
	fma.rn.ftz.f32 	%f150, %f144, %f146, %f149;
	ld.global.f32 	%f151, [ray+4];
	fma.rn.ftz.f32 	%f152, %f144, %f147, %f151;
	ld.global.f32 	%f153, [ray+8];
	fma.rn.ftz.f32 	%f154, %f144, %f148, %f153;
	sub.ftz.f32 	%f155, %f150, %f2;
	sub.ftz.f32 	%f156, %f152, %f3;
	sub.ftz.f32 	%f157, %f154, %f4;
	mul.ftz.f32 	%f158, %f156, %f156;
	fma.rn.ftz.f32 	%f159, %f155, %f155, %f158;
	fma.rn.ftz.f32 	%f160, %f157, %f157, %f159;
	rsqrt.approx.ftz.f32 	%f161, %f160;
	mul.ftz.f32 	%f162, %f155, %f161;
	mul.ftz.f32 	%f163, %f156, %f161;
	mul.ftz.f32 	%f164, %f157, %f161;
	st.global.f32 	[shading_normal], %f162;
	st.global.f32 	[shading_normal+4], %f163;
	st.global.f32 	[shading_normal+8], %f164;
	st.global.f32 	[geo_normal], %f162;
	st.global.f32 	[geo_normal+4], %f163;
	st.global.f32 	[geo_normal+8], %f164;
	mov.u64 	%rd64, particle_u_buffer;
	cvta.global.u64 	%rd48, %rd64;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f165, [%rd47];
	ld.f32 	%f166, [%rd47+4];
	ld.f32 	%f167, [%rd47+8];
	mov.u64 	%rd65, particle_v_buffer;
	cvta.global.u64 	%rd54, %rd65;
	// inline asm
	call (%rd53), _rt_buffer_get_64, (%rd54, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f168, [%rd53+8];
	mul.ftz.f32 	%f169, %f166, %f168;
	ld.f32 	%f170, [%rd53+4];
	mul.ftz.f32 	%f171, %f167, %f170;
	sub.ftz.f32 	%f172, %f169, %f171;
	ld.f32 	%f173, [%rd53];
	mul.ftz.f32 	%f174, %f167, %f173;
	mul.ftz.f32 	%f175, %f165, %f168;
	sub.ftz.f32 	%f176, %f174, %f175;
	mul.ftz.f32 	%f177, %f165, %f170;
	mul.ftz.f32 	%f178, %f166, %f173;
	sub.ftz.f32 	%f179, %f177, %f178;
	mul.ftz.f32 	%f180, %f163, %f170;
	fma.rn.ftz.f32 	%f181, %f162, %f173, %f180;
	fma.rn.ftz.f32 	%f182, %f164, %f168, %f181;
	mul.ftz.f32 	%f183, %f163, %f166;
	fma.rn.ftz.f32 	%f184, %f162, %f165, %f183;
	fma.rn.ftz.f32 	%f17, %f164, %f167, %f184;
	mul.ftz.f32 	%f185, %f163, %f176;
	fma.rn.ftz.f32 	%f186, %f162, %f172, %f185;
	fma.rn.ftz.f32 	%f187, %f164, %f179, %f186;
	abs.ftz.f32 	%f18, %f182;
	abs.ftz.f32 	%f19, %f187;
	setp.eq.ftz.f32	%p17, %f18, 0f00000000;
	setp.eq.ftz.f32	%p18, %f19, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	mov.b32 	 %r3, %f182;
	mov.b32 	 %r41, %f187;
	and.b32  	%r4, %r41, -2147483648;
	@%p19 bra 	BB3_14;
	bra.uni 	BB3_11;

BB3_14:
	shr.s32 	%r48, %r3, 31;
	and.b32  	%r49, %r48, 1078530011;
	or.b32  	%r50, %r4, %r49;
	mov.b32 	 %f247, %r50;
	bra.uni 	BB3_15;

BB3_11:
	setp.eq.ftz.f32	%p20, %f18, 0f7F800000;
	setp.eq.ftz.f32	%p21, %f19, 0f7F800000;
	and.pred  	%p22, %p20, %p21;
	@%p22 bra 	BB3_13;
	bra.uni 	BB3_12;

BB3_13:
	shr.s32 	%r44, %r3, 31;
	and.b32  	%r45, %r44, 13483017;
	add.s32 	%r46, %r45, 1061752795;
	or.b32  	%r47, %r46, %r4;
	mov.b32 	 %f247, %r47;
	bra.uni 	BB3_15;

BB3_12:
	max.ftz.f32 	%f188, %f19, %f18;
	min.ftz.f32 	%f189, %f19, %f18;
	div.full.ftz.f32 	%f190, %f189, %f188;
	mul.rn.ftz.f32 	%f191, %f190, %f190;
	mov.f32 	%f192, 0fC0B59883;
	mov.f32 	%f193, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f194, %f191, %f193, %f192;
	mov.f32 	%f195, 0fC0D21907;
	fma.rn.ftz.f32 	%f196, %f194, %f191, %f195;
	mul.ftz.f32 	%f197, %f191, %f196;
	mul.ftz.f32 	%f198, %f190, %f197;
	add.ftz.f32 	%f199, %f191, 0f41355DC0;
	mov.f32 	%f200, 0f41E6BD60;
	fma.rn.ftz.f32 	%f201, %f199, %f191, %f200;
	mov.f32 	%f202, 0f419D92C8;
	fma.rn.ftz.f32 	%f203, %f201, %f191, %f202;
	rcp.approx.ftz.f32 	%f204, %f203;
	fma.rn.ftz.f32 	%f205, %f198, %f204, %f190;
	mov.f32 	%f206, 0f3FC90FDB;
	sub.ftz.f32 	%f207, %f206, %f205;
	setp.gt.ftz.f32	%p23, %f19, %f18;
	selp.f32	%f208, %f207, %f205, %p23;
	mov.f32 	%f209, 0f40490FDB;
	sub.ftz.f32 	%f210, %f209, %f208;
	setp.lt.s32	%p24, %r3, 0;
	selp.f32	%f211, %f210, %f208, %p24;
	mov.b32 	 %r42, %f211;
	or.b32  	%r43, %r42, %r4;
	mov.b32 	 %f212, %r43;
	add.ftz.f32 	%f213, %f18, %f19;
	setp.gtu.ftz.f32	%p25, %f213, 0f7F800000;
	selp.f32	%f247, %f213, %f212, %p25;

BB3_15:
	mov.f32 	%f214, 0f40C90FDB;
	div.approx.ftz.f32 	%f215, %f247, %f214;
	add.ftz.f32 	%f216, %f215, 0f3F000000;
	abs.ftz.f32 	%f217, %f17;
	mov.f32 	%f218, 0f3F800000;
	sub.ftz.f32 	%f219, %f218, %f217;
	mul.ftz.f32 	%f220, %f219, 0f3F000000;
	sqrt.approx.ftz.f32 	%f221, %f220;
	setp.gt.ftz.f32	%p26, %f217, 0f3F11EB85;
	selp.f32	%f222, %f221, %f217, %p26;
	mul.ftz.f32 	%f223, %f222, %f222;
	mov.f32 	%f224, 0f3C94D2E9;
	mov.f32 	%f225, 0f3D53F941;
	fma.rn.ftz.f32 	%f226, %f225, %f223, %f224;
	mov.f32 	%f227, 0f3D3F841F;
	fma.rn.ftz.f32 	%f228, %f226, %f223, %f227;
	mov.f32 	%f229, 0f3D994929;
	fma.rn.ftz.f32 	%f230, %f228, %f223, %f229;
	mov.f32 	%f231, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f232, %f230, %f223, %f231;
	mul.ftz.f32 	%f233, %f223, %f232;
	fma.rn.ftz.f32 	%f234, %f233, %f222, %f222;
	mov.f32 	%f235, 0f3FC90FDB;
	mov.f32 	%f236, 0fC0000000;
	fma.rn.ftz.f32 	%f237, %f236, %f234, %f235;
	selp.f32	%f238, %f237, %f234, %p26;
	setp.gtu.ftz.f32	%p27, %f238, 0f7F800000;
	mov.b32 	 %r53, %f238;
	mov.b32 	 %r54, %f17;
	and.b32  	%r55, %r54, -2147483648;
	or.b32  	%r56, %r53, %r55;
	mov.b32 	 %f239, %r56;
	selp.f32	%f240, %f238, %f239, %p27;
	mov.f32 	%f241, 0f40490FDB;
	div.approx.ftz.f32 	%f242, %f240, %f241;
	mov.f32 	%f243, 0f3F000000;
	sub.ftz.f32 	%f244, %f243, %f242;
	st.global.f32 	[tex_coord], %f216;
	st.global.f32 	[tex_coord+4], %f244;
	cvt.rn.f32.s32	%f245, %r5;
	st.global.f32 	[tex_coord+8], %f245;
	mov.u32 	%r52, 0;
	ld.global.u32 	%r57, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r57, %r5};
	// inline asm
	call (%r51), _rt_report_intersection, (%r52);
	// inline asm

BB3_16:
	ret;
}

	// .globl	_Z25particle_shaded_intersecti
.visible .entry _Z25particle_shaded_intersecti(
	.param .u32 _Z25particle_shaded_intersecti_param_0
)
{
	.reg .pred 	%p<28>;
	.reg .f32 	%f<318>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<68>;


	ld.param.u32 	%r5, [_Z25particle_shaded_intersecti_param_0];
	cvt.s64.s32	%rd4, %r5;
	mov.u64 	%rd8, radii_buffer;
	cvta.global.u64 	%rd3, %rd8;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 4;
	mov.u64 	%rd7, 0;
	// inline asm
	call (%rd2), _rt_buffer_get_64, (%rd3, %r6, %r7, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f1, [%rd2];
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	@%p1 bra 	BB4_16;

	mov.u64 	%rd15, positions_buffer;
	cvta.global.u64 	%rd10, %rd15;
	mov.u32 	%r9, 12;
	// inline asm
	call (%rd9), _rt_buffer_get_64, (%rd10, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.global.f32 	%f36, [ray];
	ld.f32 	%f2, [%rd9];
	sub.ftz.f32 	%f37, %f36, %f2;
	ld.global.f32 	%f38, [ray+4];
	ld.f32 	%f3, [%rd9+4];
	sub.ftz.f32 	%f39, %f38, %f3;
	ld.global.f32 	%f40, [ray+8];
	ld.f32 	%f4, [%rd9+8];
	sub.ftz.f32 	%f41, %f40, %f4;
	ld.global.f32 	%f42, [ray+12];
	ld.global.f32 	%f43, [ray+16];
	mul.ftz.f32 	%f44, %f39, %f43;
	fma.rn.ftz.f32 	%f45, %f37, %f42, %f44;
	ld.global.f32 	%f46, [ray+20];
	fma.rn.ftz.f32 	%f5, %f41, %f46, %f45;
	mul.ftz.f32 	%f47, %f39, %f39;
	fma.rn.ftz.f32 	%f48, %f37, %f37, %f47;
	fma.rn.ftz.f32 	%f49, %f41, %f41, %f48;
	mul.ftz.f32 	%f50, %f1, %f1;
	sub.ftz.f32 	%f51, %f49, %f50;
	mul.ftz.f32 	%f52, %f5, %f5;
	sub.ftz.f32 	%f6, %f52, %f51;
	setp.leu.ftz.f32	%p2, %f6, 0f00000000;
	@%p2 bra 	BB4_16;

	sqrt.approx.ftz.f32 	%f7, %f6;
	neg.ftz.f32 	%f54, %f5;
	sub.ftz.f32 	%f53, %f54, %f7;
	// inline asm
	call (%r10), _rt_potential_intersection, (%f53);
	// inline asm
	setp.eq.s32	%p3, %r10, 0;
	@%p3 bra 	BB4_9;

	mov.u64 	%rd34, colors_buffer;
	cvta.global.u64 	%rd17, %rd34;
	// inline asm
	call (%rd16), _rt_buffer_get_64, (%rd17, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%rd35, [%rd16];
	ld.u32 	%rd36, [%rd16+4];
	bfi.b64 	%rd37, %rd36, %rd35, 32, 32;
	ld.f32 	%f55, [%rd16+8];
	st.global.u32 	[shading_color], %rd37;
	shr.u64 	%rd38, %rd37, 32;
	st.global.u32 	[shading_color+4], %rd38;
	st.global.f32 	[shading_color+8], %f55;
	ld.global.f32 	%f56, [ray+12];
	ld.global.f32 	%f57, [ray+16];
	ld.global.f32 	%f58, [ray+20];
	ld.global.f32 	%f59, [ray];
	fma.rn.ftz.f32 	%f60, %f53, %f56, %f59;
	ld.global.f32 	%f61, [ray+4];
	fma.rn.ftz.f32 	%f62, %f53, %f57, %f61;
	ld.global.f32 	%f63, [ray+8];
	fma.rn.ftz.f32 	%f64, %f53, %f58, %f63;
	sub.ftz.f32 	%f65, %f60, %f2;
	sub.ftz.f32 	%f66, %f62, %f3;
	sub.ftz.f32 	%f67, %f64, %f4;
	mul.ftz.f32 	%f68, %f66, %f66;
	fma.rn.ftz.f32 	%f69, %f65, %f65, %f68;
	fma.rn.ftz.f32 	%f70, %f67, %f67, %f69;
	rsqrt.approx.ftz.f32 	%f71, %f70;
	mul.ftz.f32 	%f9, %f65, %f71;
	mul.ftz.f32 	%f10, %f66, %f71;
	mul.ftz.f32 	%f11, %f67, %f71;
	st.global.f32 	[geo_normal], %f9;
	st.global.f32 	[geo_normal+4], %f10;
	st.global.f32 	[geo_normal+8], %f11;
	mov.u64 	%rd39, particle_u_buffer;
	cvta.global.u64 	%rd23, %rd39;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f12, [%rd22];
	ld.f32 	%f13, [%rd22+4];
	ld.f32 	%f14, [%rd22+8];
	mov.u64 	%rd40, particle_v_buffer;
	cvta.global.u64 	%rd29, %rd40;
	// inline asm
	call (%rd28), _rt_buffer_get_64, (%rd29, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f72, [%rd28+8];
	mul.ftz.f32 	%f73, %f13, %f72;
	ld.f32 	%f74, [%rd28+4];
	mul.ftz.f32 	%f75, %f14, %f74;
	sub.ftz.f32 	%f76, %f73, %f75;
	ld.f32 	%f77, [%rd28];
	mul.ftz.f32 	%f78, %f14, %f77;
	mul.ftz.f32 	%f79, %f12, %f72;
	sub.ftz.f32 	%f80, %f78, %f79;
	mul.ftz.f32 	%f81, %f12, %f74;
	mul.ftz.f32 	%f82, %f13, %f77;
	sub.ftz.f32 	%f83, %f81, %f82;
	mul.ftz.f32 	%f84, %f10, %f74;
	fma.rn.ftz.f32 	%f85, %f9, %f77, %f84;
	fma.rn.ftz.f32 	%f86, %f11, %f72, %f85;
	mul.ftz.f32 	%f87, %f10, %f13;
	fma.rn.ftz.f32 	%f88, %f9, %f12, %f87;
	fma.rn.ftz.f32 	%f15, %f11, %f14, %f88;
	mul.ftz.f32 	%f89, %f10, %f80;
	fma.rn.ftz.f32 	%f90, %f9, %f76, %f89;
	fma.rn.ftz.f32 	%f91, %f11, %f83, %f90;
	abs.ftz.f32 	%f16, %f86;
	abs.ftz.f32 	%f17, %f91;
	setp.eq.ftz.f32	%p4, %f16, 0f00000000;
	setp.eq.ftz.f32	%p5, %f17, 0f00000000;
	and.pred  	%p6, %p4, %p5;
	mov.b32 	 %r1, %f86;
	mov.b32 	 %r17, %f91;
	and.b32  	%r2, %r17, -2147483648;
	@%p6 bra 	BB4_7;
	bra.uni 	BB4_4;

BB4_7:
	shr.s32 	%r24, %r1, 31;
	and.b32  	%r25, %r24, 1078530011;
	or.b32  	%r26, %r2, %r25;
	mov.b32 	 %f316, %r26;
	bra.uni 	BB4_8;

BB4_4:
	setp.eq.ftz.f32	%p7, %f16, 0f7F800000;
	setp.eq.ftz.f32	%p8, %f17, 0f7F800000;
	and.pred  	%p9, %p7, %p8;
	@%p9 bra 	BB4_6;
	bra.uni 	BB4_5;

BB4_6:
	shr.s32 	%r20, %r1, 31;
	and.b32  	%r21, %r20, 13483017;
	add.s32 	%r22, %r21, 1061752795;
	or.b32  	%r23, %r22, %r2;
	mov.b32 	 %f316, %r23;
	bra.uni 	BB4_8;

BB4_5:
	max.ftz.f32 	%f92, %f17, %f16;
	min.ftz.f32 	%f93, %f17, %f16;
	div.full.ftz.f32 	%f94, %f93, %f92;
	mul.rn.ftz.f32 	%f95, %f94, %f94;
	mov.f32 	%f96, 0fC0B59883;
	mov.f32 	%f97, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f98, %f95, %f97, %f96;
	mov.f32 	%f99, 0fC0D21907;
	fma.rn.ftz.f32 	%f100, %f98, %f95, %f99;
	mul.ftz.f32 	%f101, %f95, %f100;
	mul.ftz.f32 	%f102, %f94, %f101;
	add.ftz.f32 	%f103, %f95, 0f41355DC0;
	mov.f32 	%f104, 0f41E6BD60;
	fma.rn.ftz.f32 	%f105, %f103, %f95, %f104;
	mov.f32 	%f106, 0f419D92C8;
	fma.rn.ftz.f32 	%f107, %f105, %f95, %f106;
	rcp.approx.ftz.f32 	%f108, %f107;
	fma.rn.ftz.f32 	%f109, %f102, %f108, %f94;
	mov.f32 	%f110, 0f3FC90FDB;
	sub.ftz.f32 	%f111, %f110, %f109;
	setp.gt.ftz.f32	%p10, %f17, %f16;
	selp.f32	%f112, %f111, %f109, %p10;
	mov.f32 	%f113, 0f40490FDB;
	sub.ftz.f32 	%f114, %f113, %f112;
	setp.lt.s32	%p11, %r1, 0;
	selp.f32	%f115, %f114, %f112, %p11;
	mov.b32 	 %r18, %f115;
	or.b32  	%r19, %r18, %r2;
	mov.b32 	 %f116, %r19;
	add.ftz.f32 	%f117, %f16, %f17;
	setp.gtu.ftz.f32	%p12, %f117, 0f7F800000;
	selp.f32	%f316, %f117, %f116, %p12;

BB4_8:
	mov.f32 	%f118, 0f40C90FDB;
	div.approx.ftz.f32 	%f119, %f316, %f118;
	add.ftz.f32 	%f120, %f119, 0f3F000000;
	abs.ftz.f32 	%f121, %f15;
	mov.f32 	%f122, 0f3F800000;
	sub.ftz.f32 	%f123, %f122, %f121;
	mul.ftz.f32 	%f124, %f123, 0f3F000000;
	sqrt.approx.ftz.f32 	%f125, %f124;
	setp.gt.ftz.f32	%p13, %f121, 0f3F11EB85;
	selp.f32	%f126, %f125, %f121, %p13;
	mul.ftz.f32 	%f127, %f126, %f126;
	mov.f32 	%f128, 0f3C94D2E9;
	mov.f32 	%f129, 0f3D53F941;
	fma.rn.ftz.f32 	%f130, %f129, %f127, %f128;
	mov.f32 	%f131, 0f3D3F841F;
	fma.rn.ftz.f32 	%f132, %f130, %f127, %f131;
	mov.f32 	%f133, 0f3D994929;
	fma.rn.ftz.f32 	%f134, %f132, %f127, %f133;
	mov.f32 	%f135, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f136, %f134, %f127, %f135;
	mul.ftz.f32 	%f137, %f127, %f136;
	fma.rn.ftz.f32 	%f138, %f137, %f126, %f126;
	mov.f32 	%f139, 0f3FC90FDB;
	mov.f32 	%f140, 0fC0000000;
	fma.rn.ftz.f32 	%f141, %f140, %f138, %f139;
	selp.f32	%f142, %f141, %f138, %p13;
	setp.gtu.ftz.f32	%p14, %f142, 0f7F800000;
	mov.b32 	 %r29, %f142;
	mov.b32 	 %r30, %f15;
	and.b32  	%r31, %r30, -2147483648;
	or.b32  	%r32, %r29, %r31;
	mov.b32 	 %f143, %r32;
	selp.f32	%f144, %f142, %f143, %p14;
	mov.f32 	%f145, 0f40490FDB;
	div.approx.ftz.f32 	%f146, %f144, %f145;
	mov.f32 	%f147, 0f3F000000;
	sub.ftz.f32 	%f148, %f147, %f146;
	st.global.f32 	[tex_coord], %f120;
	st.global.f32 	[tex_coord+4], %f148;
	cvt.rn.f32.s32	%f149, %r5;
	st.global.f32 	[tex_coord+8], %f149;
	tex.2d.v4.f32.f32	{%f150, %f151, %f152, %f153}, [normaltilt_tex, {%f120, %f148}];
	mul.ftz.f32 	%f154, %f10, %f14;
	mul.ftz.f32 	%f155, %f11, %f13;
	sub.ftz.f32 	%f156, %f155, %f154;
	mul.ftz.f32 	%f157, %f11, %f12;
	mul.ftz.f32 	%f158, %f9, %f14;
	sub.ftz.f32 	%f159, %f158, %f157;
	mul.ftz.f32 	%f160, %f9, %f13;
	mul.ftz.f32 	%f161, %f10, %f12;
	sub.ftz.f32 	%f162, %f161, %f160;
	mul.ftz.f32 	%f163, %f159, %f159;
	fma.rn.ftz.f32 	%f164, %f156, %f156, %f163;
	fma.rn.ftz.f32 	%f165, %f162, %f162, %f164;
	rsqrt.approx.ftz.f32 	%f166, %f165;
	mul.ftz.f32 	%f167, %f156, %f166;
	mul.ftz.f32 	%f168, %f159, %f166;
	mul.ftz.f32 	%f169, %f162, %f166;
	mul.ftz.f32 	%f170, %f10, %f169;
	mul.ftz.f32 	%f171, %f11, %f168;
	sub.ftz.f32 	%f172, %f170, %f171;
	mul.ftz.f32 	%f173, %f11, %f167;
	mul.ftz.f32 	%f174, %f9, %f169;
	sub.ftz.f32 	%f175, %f173, %f174;
	mul.ftz.f32 	%f176, %f9, %f168;
	mul.ftz.f32 	%f177, %f10, %f167;
	sub.ftz.f32 	%f178, %f176, %f177;
	fma.rn.ftz.f32 	%f179, %f150, %f167, %f9;
	fma.rn.ftz.f32 	%f180, %f150, %f168, %f10;
	fma.rn.ftz.f32 	%f181, %f150, %f169, %f11;
	fma.rn.ftz.f32 	%f182, %f151, %f172, %f179;
	fma.rn.ftz.f32 	%f183, %f151, %f175, %f180;
	fma.rn.ftz.f32 	%f184, %f151, %f178, %f181;
	st.global.f32 	[shading_normal], %f182;
	st.global.f32 	[shading_normal+4], %f183;
	st.global.f32 	[shading_normal+8], %f184;
	mov.u32 	%r28, 0;
	ld.global.u32 	%r33, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r33, %r5};
	// inline asm
	call (%r27), _rt_report_intersection, (%r28);
	// inline asm
	setp.ne.s32	%p15, %r27, 0;
	@%p15 bra 	BB4_16;

BB4_9:
	sub.ftz.f32 	%f185, %f7, %f5;
	// inline asm
	call (%r34), _rt_potential_intersection, (%f185);
	// inline asm
	setp.eq.s32	%p16, %r34, 0;
	@%p16 bra 	BB4_16;

	mov.u64 	%rd60, colors_buffer;
	cvta.global.u64 	%rd43, %rd60;
	// inline asm
	call (%rd42), _rt_buffer_get_64, (%rd43, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.u32 	%rd61, [%rd42];
	ld.u32 	%rd62, [%rd42+4];
	bfi.b64 	%rd63, %rd62, %rd61, 32, 32;
	ld.f32 	%f186, [%rd42+8];
	st.global.u32 	[shading_color], %rd63;
	shr.u64 	%rd64, %rd63, 32;
	st.global.u32 	[shading_color+4], %rd64;
	st.global.f32 	[shading_color+8], %f186;
	ld.global.f32 	%f187, [ray+12];
	ld.global.f32 	%f188, [ray+16];
	ld.global.f32 	%f189, [ray+20];
	ld.global.f32 	%f190, [ray];
	fma.rn.ftz.f32 	%f191, %f185, %f187, %f190;
	ld.global.f32 	%f192, [ray+4];
	fma.rn.ftz.f32 	%f193, %f185, %f188, %f192;
	ld.global.f32 	%f194, [ray+8];
	fma.rn.ftz.f32 	%f195, %f185, %f189, %f194;
	sub.ftz.f32 	%f196, %f191, %f2;
	sub.ftz.f32 	%f197, %f193, %f3;
	sub.ftz.f32 	%f198, %f195, %f4;
	mul.ftz.f32 	%f199, %f197, %f197;
	fma.rn.ftz.f32 	%f200, %f196, %f196, %f199;
	fma.rn.ftz.f32 	%f201, %f198, %f198, %f200;
	rsqrt.approx.ftz.f32 	%f202, %f201;
	mul.ftz.f32 	%f23, %f196, %f202;
	mul.ftz.f32 	%f24, %f197, %f202;
	mul.ftz.f32 	%f25, %f198, %f202;
	st.global.f32 	[geo_normal], %f23;
	st.global.f32 	[geo_normal+4], %f24;
	st.global.f32 	[geo_normal+8], %f25;
	mov.u64 	%rd65, particle_u_buffer;
	cvta.global.u64 	%rd49, %rd65;
	// inline asm
	call (%rd48), _rt_buffer_get_64, (%rd49, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f26, [%rd48];
	ld.f32 	%f27, [%rd48+4];
	ld.f32 	%f28, [%rd48+8];
	mov.u64 	%rd66, particle_v_buffer;
	cvta.global.u64 	%rd55, %rd66;
	// inline asm
	call (%rd54), _rt_buffer_get_64, (%rd55, %r6, %r9, %rd4, %rd7, %rd7, %rd7);
	// inline asm
	ld.f32 	%f203, [%rd54+8];
	mul.ftz.f32 	%f204, %f27, %f203;
	ld.f32 	%f205, [%rd54+4];
	mul.ftz.f32 	%f206, %f28, %f205;
	sub.ftz.f32 	%f207, %f204, %f206;
	ld.f32 	%f208, [%rd54];
	mul.ftz.f32 	%f209, %f28, %f208;
	mul.ftz.f32 	%f210, %f26, %f203;
	sub.ftz.f32 	%f211, %f209, %f210;
	mul.ftz.f32 	%f212, %f26, %f205;
	mul.ftz.f32 	%f213, %f27, %f208;
	sub.ftz.f32 	%f214, %f212, %f213;
	mul.ftz.f32 	%f215, %f24, %f205;
	fma.rn.ftz.f32 	%f216, %f23, %f208, %f215;
	fma.rn.ftz.f32 	%f217, %f25, %f203, %f216;
	mul.ftz.f32 	%f218, %f24, %f27;
	fma.rn.ftz.f32 	%f219, %f23, %f26, %f218;
	fma.rn.ftz.f32 	%f29, %f25, %f28, %f219;
	mul.ftz.f32 	%f220, %f24, %f211;
	fma.rn.ftz.f32 	%f221, %f23, %f207, %f220;
	fma.rn.ftz.f32 	%f222, %f25, %f214, %f221;
	abs.ftz.f32 	%f30, %f217;
	abs.ftz.f32 	%f31, %f222;
	setp.eq.ftz.f32	%p17, %f30, 0f00000000;
	setp.eq.ftz.f32	%p18, %f31, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	mov.b32 	 %r3, %f217;
	mov.b32 	 %r41, %f222;
	and.b32  	%r4, %r41, -2147483648;
	@%p19 bra 	BB4_14;
	bra.uni 	BB4_11;

BB4_14:
	shr.s32 	%r48, %r3, 31;
	and.b32  	%r49, %r48, 1078530011;
	or.b32  	%r50, %r4, %r49;
	mov.b32 	 %f317, %r50;
	bra.uni 	BB4_15;

BB4_11:
	setp.eq.ftz.f32	%p20, %f30, 0f7F800000;
	setp.eq.ftz.f32	%p21, %f31, 0f7F800000;
	and.pred  	%p22, %p20, %p21;
	@%p22 bra 	BB4_13;
	bra.uni 	BB4_12;

BB4_13:
	shr.s32 	%r44, %r3, 31;
	and.b32  	%r45, %r44, 13483017;
	add.s32 	%r46, %r45, 1061752795;
	or.b32  	%r47, %r46, %r4;
	mov.b32 	 %f317, %r47;
	bra.uni 	BB4_15;

BB4_12:
	max.ftz.f32 	%f223, %f31, %f30;
	min.ftz.f32 	%f224, %f31, %f30;
	div.full.ftz.f32 	%f225, %f224, %f223;
	mul.rn.ftz.f32 	%f226, %f225, %f225;
	mov.f32 	%f227, 0fC0B59883;
	mov.f32 	%f228, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f229, %f226, %f228, %f227;
	mov.f32 	%f230, 0fC0D21907;
	fma.rn.ftz.f32 	%f231, %f229, %f226, %f230;
	mul.ftz.f32 	%f232, %f226, %f231;
	mul.ftz.f32 	%f233, %f225, %f232;
	add.ftz.f32 	%f234, %f226, 0f41355DC0;
	mov.f32 	%f235, 0f41E6BD60;
	fma.rn.ftz.f32 	%f236, %f234, %f226, %f235;
	mov.f32 	%f237, 0f419D92C8;
	fma.rn.ftz.f32 	%f238, %f236, %f226, %f237;
	rcp.approx.ftz.f32 	%f239, %f238;
	fma.rn.ftz.f32 	%f240, %f233, %f239, %f225;
	mov.f32 	%f241, 0f3FC90FDB;
	sub.ftz.f32 	%f242, %f241, %f240;
	setp.gt.ftz.f32	%p23, %f31, %f30;
	selp.f32	%f243, %f242, %f240, %p23;
	mov.f32 	%f244, 0f40490FDB;
	sub.ftz.f32 	%f245, %f244, %f243;
	setp.lt.s32	%p24, %r3, 0;
	selp.f32	%f246, %f245, %f243, %p24;
	mov.b32 	 %r42, %f246;
	or.b32  	%r43, %r42, %r4;
	mov.b32 	 %f247, %r43;
	add.ftz.f32 	%f248, %f30, %f31;
	setp.gtu.ftz.f32	%p25, %f248, 0f7F800000;
	selp.f32	%f317, %f248, %f247, %p25;

BB4_15:
	mov.f32 	%f249, 0f40C90FDB;
	div.approx.ftz.f32 	%f250, %f317, %f249;
	add.ftz.f32 	%f251, %f250, 0f3F000000;
	abs.ftz.f32 	%f252, %f29;
	mov.f32 	%f253, 0f3F800000;
	sub.ftz.f32 	%f254, %f253, %f252;
	mul.ftz.f32 	%f255, %f254, 0f3F000000;
	sqrt.approx.ftz.f32 	%f256, %f255;
	setp.gt.ftz.f32	%p26, %f252, 0f3F11EB85;
	selp.f32	%f257, %f256, %f252, %p26;
	mul.ftz.f32 	%f258, %f257, %f257;
	mov.f32 	%f259, 0f3C94D2E9;
	mov.f32 	%f260, 0f3D53F941;
	fma.rn.ftz.f32 	%f261, %f260, %f258, %f259;
	mov.f32 	%f262, 0f3D3F841F;
	fma.rn.ftz.f32 	%f263, %f261, %f258, %f262;
	mov.f32 	%f264, 0f3D994929;
	fma.rn.ftz.f32 	%f265, %f263, %f258, %f264;
	mov.f32 	%f266, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f267, %f265, %f258, %f266;
	mul.ftz.f32 	%f268, %f258, %f267;
	fma.rn.ftz.f32 	%f269, %f268, %f257, %f257;
	mov.f32 	%f270, 0f3FC90FDB;
	mov.f32 	%f271, 0fC0000000;
	fma.rn.ftz.f32 	%f272, %f271, %f269, %f270;
	selp.f32	%f273, %f272, %f269, %p26;
	setp.gtu.ftz.f32	%p27, %f273, 0f7F800000;
	mov.b32 	 %r53, %f273;
	mov.b32 	 %r54, %f29;
	and.b32  	%r55, %r54, -2147483648;
	or.b32  	%r56, %r53, %r55;
	mov.b32 	 %f274, %r56;
	selp.f32	%f275, %f273, %f274, %p27;
	mov.f32 	%f276, 0f40490FDB;
	div.approx.ftz.f32 	%f277, %f275, %f276;
	mov.f32 	%f278, 0f3F000000;
	sub.ftz.f32 	%f279, %f278, %f277;
	st.global.f32 	[tex_coord], %f251;
	st.global.f32 	[tex_coord+4], %f279;
	cvt.rn.f32.s32	%f280, %r5;
	st.global.f32 	[tex_coord+8], %f280;
	tex.2d.v4.f32.f32	{%f281, %f282, %f283, %f284}, [normaltilt_tex, {%f251, %f279}];
	mul.ftz.f32 	%f285, %f24, %f28;
	mul.ftz.f32 	%f286, %f25, %f27;
	sub.ftz.f32 	%f287, %f286, %f285;
	mul.ftz.f32 	%f288, %f25, %f26;
	mul.ftz.f32 	%f289, %f23, %f28;
	sub.ftz.f32 	%f290, %f289, %f288;
	mul.ftz.f32 	%f291, %f23, %f27;
	mul.ftz.f32 	%f292, %f24, %f26;
	sub.ftz.f32 	%f293, %f292, %f291;
	mul.ftz.f32 	%f294, %f290, %f290;
	fma.rn.ftz.f32 	%f295, %f287, %f287, %f294;
	fma.rn.ftz.f32 	%f296, %f293, %f293, %f295;
	rsqrt.approx.ftz.f32 	%f297, %f296;
	mul.ftz.f32 	%f298, %f287, %f297;
	mul.ftz.f32 	%f299, %f290, %f297;
	mul.ftz.f32 	%f300, %f293, %f297;
	mul.ftz.f32 	%f301, %f24, %f300;
	mul.ftz.f32 	%f302, %f25, %f299;
	sub.ftz.f32 	%f303, %f301, %f302;
	mul.ftz.f32 	%f304, %f25, %f298;
	mul.ftz.f32 	%f305, %f23, %f300;
	sub.ftz.f32 	%f306, %f304, %f305;
	mul.ftz.f32 	%f307, %f23, %f299;
	mul.ftz.f32 	%f308, %f24, %f298;
	sub.ftz.f32 	%f309, %f307, %f308;
	fma.rn.ftz.f32 	%f310, %f281, %f298, %f23;
	fma.rn.ftz.f32 	%f311, %f281, %f299, %f24;
	fma.rn.ftz.f32 	%f312, %f281, %f300, %f25;
	fma.rn.ftz.f32 	%f313, %f282, %f303, %f310;
	fma.rn.ftz.f32 	%f314, %f282, %f306, %f311;
	fma.rn.ftz.f32 	%f315, %f282, %f309, %f312;
	st.global.f32 	[shading_normal], %f313;
	st.global.f32 	[shading_normal+4], %f314;
	st.global.f32 	[shading_normal+8], %f315;
	mov.u32 	%r52, 0;
	ld.global.u32 	%r57, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r57, %r5};
	// inline asm
	call (%r51), _rt_report_intersection, (%r52);
	// inline asm

BB4_16:
	ret;
}

	// .globl	_Z25particle_bumped_intersecti
.visible .entry _Z25particle_bumped_intersecti(
	.param .u32 _Z25particle_bumped_intersecti_param_0
)
{
	.reg .pred 	%p<34>;
	.reg .f32 	%f<335>;
	.reg .b32 	%r<51>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<39>;


	ld.param.u32 	%r5, [_Z25particle_bumped_intersecti_param_0];
	cvt.s64.s32	%rd5, %r5;
	mov.u64 	%rd9, radii_buffer;
	cvta.global.u64 	%rd4, %rd9;
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 4;
	mov.u64 	%rd8, 0;
	// inline asm
	call (%rd3), _rt_buffer_get_64, (%rd4, %r6, %r7, %rd5, %rd8, %rd8, %rd8);
	// inline asm
	ld.f32 	%f1, [%rd3];
	setp.eq.ftz.f32	%p1, %f1, 0f00000000;
	@%p1 bra 	BB5_24;

	mov.u64 	%rd16, positions_buffer;
	cvta.global.u64 	%rd11, %rd16;
	mov.u32 	%r9, 12;
	// inline asm
	call (%rd10), _rt_buffer_get_64, (%rd11, %r6, %r9, %rd5, %rd8, %rd8, %rd8);
	// inline asm
	ld.global.f32 	%f60, [ray];
	ld.f32 	%f2, [%rd10];
	sub.ftz.f32 	%f61, %f60, %f2;
	ld.global.f32 	%f62, [ray+4];
	ld.f32 	%f3, [%rd10+4];
	sub.ftz.f32 	%f63, %f62, %f3;
	ld.global.f32 	%f64, [ray+8];
	ld.f32 	%f4, [%rd10+8];
	sub.ftz.f32 	%f65, %f64, %f4;
	ld.global.f32 	%f66, [ray+12];
	ld.global.f32 	%f67, [ray+16];
	mul.ftz.f32 	%f68, %f63, %f67;
	fma.rn.ftz.f32 	%f69, %f61, %f66, %f68;
	ld.global.f32 	%f70, [ray+20];
	fma.rn.ftz.f32 	%f5, %f65, %f70, %f69;
	mul.ftz.f32 	%f71, %f63, %f63;
	fma.rn.ftz.f32 	%f72, %f61, %f61, %f71;
	fma.rn.ftz.f32 	%f73, %f65, %f65, %f72;
	mul.ftz.f32 	%f74, %f1, %f1;
	sub.ftz.f32 	%f75, %f73, %f74;
	mul.ftz.f32 	%f76, %f5, %f5;
	sub.ftz.f32 	%f6, %f76, %f75;
	setp.leu.ftz.f32	%p2, %f6, 0f00000000;
	@%p2 bra 	BB5_24;

	sqrt.approx.ftz.f32 	%f77, %f6;
	neg.ftz.f32 	%f78, %f5;
	sub.ftz.f32 	%f79, %f78, %f77;
	sub.ftz.f32 	%f80, %f77, %f5;
	setp.lt.ftz.f32	%p3, %f80, %f79;
	selp.f32	%f81, %f79, %f80, %p3;
	selp.f32	%f82, %f80, %f79, %p3;
	ld.global.f32 	%f83, [ray+28];
	max.ftz.f32 	%f331, %f82, %f83;
	ld.global.f32 	%f84, [ray+32];
	min.ftz.f32 	%f8, %f81, %f84;
	setp.gtu.ftz.f32	%p4, %f331, %f8;
	@%p4 bra 	BB5_24;

	mov.u64 	%rd29, particle_u_buffer;
	cvta.global.u64 	%rd18, %rd29;
	// inline asm
	call (%rd17), _rt_buffer_get_64, (%rd18, %r6, %r9, %rd5, %rd8, %rd8, %rd8);
	// inline asm
	ld.f32 	%f9, [%rd17];
	ld.f32 	%f10, [%rd17+4];
	ld.f32 	%f11, [%rd17+8];
	mov.u64 	%rd30, particle_v_buffer;
	cvta.global.u64 	%rd24, %rd30;
	// inline asm
	call (%rd23), _rt_buffer_get_64, (%rd24, %r6, %r9, %rd5, %rd8, %rd8, %rd8);
	// inline asm
	ld.f32 	%f12, [%rd23+8];
	mul.ftz.f32 	%f85, %f10, %f12;
	ld.f32 	%f13, [%rd23+4];
	mul.ftz.f32 	%f86, %f11, %f13;
	sub.ftz.f32 	%f14, %f85, %f86;
	ld.f32 	%f15, [%rd23];
	mul.ftz.f32 	%f87, %f11, %f15;
	mul.ftz.f32 	%f88, %f9, %f12;
	sub.ftz.f32 	%f16, %f87, %f88;
	mul.ftz.f32 	%f89, %f9, %f13;
	mul.ftz.f32 	%f90, %f10, %f15;
	sub.ftz.f32 	%f17, %f89, %f90;
	ld.global.f32 	%f91, [ray];
	sub.ftz.f32 	%f92, %f91, %f2;
	ld.global.f32 	%f93, [ray+4];
	sub.ftz.f32 	%f94, %f93, %f3;
	ld.global.f32 	%f95, [ray+8];
	sub.ftz.f32 	%f96, %f95, %f4;
	mul.ftz.f32 	%f97, %f94, %f94;
	fma.rn.ftz.f32 	%f98, %f92, %f92, %f97;
	fma.rn.ftz.f32 	%f18, %f96, %f96, %f98;
	rsqrt.approx.ftz.f32 	%f99, %f18;
	mul.ftz.f32 	%f100, %f92, %f99;
	mul.ftz.f32 	%f101, %f94, %f99;
	mul.ftz.f32 	%f102, %f96, %f99;
	mul.ftz.f32 	%f103, %f13, %f101;
	fma.rn.ftz.f32 	%f104, %f15, %f100, %f103;
	fma.rn.ftz.f32 	%f105, %f12, %f102, %f104;
	mul.ftz.f32 	%f106, %f10, %f101;
	fma.rn.ftz.f32 	%f107, %f9, %f100, %f106;
	fma.rn.ftz.f32 	%f19, %f11, %f102, %f107;
	mul.ftz.f32 	%f108, %f16, %f101;
	fma.rn.ftz.f32 	%f109, %f14, %f100, %f108;
	fma.rn.ftz.f32 	%f110, %f17, %f102, %f109;
	abs.ftz.f32 	%f20, %f105;
	abs.ftz.f32 	%f21, %f110;
	setp.eq.ftz.f32	%p5, %f20, 0f00000000;
	setp.eq.ftz.f32	%p6, %f21, 0f00000000;
	and.pred  	%p7, %p5, %p6;
	mov.b32 	 %r1, %f105;
	mov.b32 	 %r14, %f110;
	and.b32  	%r2, %r14, -2147483648;
	@%p7 bra 	BB5_7;
	bra.uni 	BB5_4;

BB5_7:
	shr.s32 	%r21, %r1, 31;
	and.b32  	%r22, %r21, 1078530011;
	or.b32  	%r23, %r22, %r2;
	mov.b32 	 %f329, %r23;
	bra.uni 	BB5_8;

BB5_4:
	setp.eq.ftz.f32	%p8, %f20, 0f7F800000;
	setp.eq.ftz.f32	%p9, %f21, 0f7F800000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB5_6;
	bra.uni 	BB5_5;

BB5_6:
	shr.s32 	%r17, %r1, 31;
	and.b32  	%r18, %r17, 13483017;
	add.s32 	%r19, %r18, 1061752795;
	or.b32  	%r20, %r19, %r2;
	mov.b32 	 %f329, %r20;
	bra.uni 	BB5_8;

BB5_5:
	max.ftz.f32 	%f111, %f21, %f20;
	min.ftz.f32 	%f112, %f21, %f20;
	div.full.ftz.f32 	%f113, %f112, %f111;
	mul.rn.ftz.f32 	%f114, %f113, %f113;
	mov.f32 	%f115, 0fC0B59883;
	mov.f32 	%f116, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f117, %f114, %f116, %f115;
	mov.f32 	%f118, 0fC0D21907;
	fma.rn.ftz.f32 	%f119, %f117, %f114, %f118;
	mul.ftz.f32 	%f120, %f114, %f119;
	mul.ftz.f32 	%f121, %f113, %f120;
	add.ftz.f32 	%f122, %f114, 0f41355DC0;
	mov.f32 	%f123, 0f41E6BD60;
	fma.rn.ftz.f32 	%f124, %f122, %f114, %f123;
	mov.f32 	%f125, 0f419D92C8;
	fma.rn.ftz.f32 	%f126, %f124, %f114, %f125;
	rcp.approx.ftz.f32 	%f127, %f126;
	fma.rn.ftz.f32 	%f128, %f121, %f127, %f113;
	mov.f32 	%f129, 0f3FC90FDB;
	sub.ftz.f32 	%f130, %f129, %f128;
	setp.gt.ftz.f32	%p11, %f21, %f20;
	selp.f32	%f131, %f130, %f128, %p11;
	mov.f32 	%f132, 0f40490FDB;
	sub.ftz.f32 	%f133, %f132, %f131;
	setp.lt.s32	%p12, %r1, 0;
	selp.f32	%f134, %f133, %f131, %p12;
	mov.b32 	 %r15, %f134;
	or.b32  	%r16, %r15, %r2;
	mov.b32 	 %f135, %r16;
	add.ftz.f32 	%f136, %f20, %f21;
	setp.gtu.ftz.f32	%p13, %f136, 0f7F800000;
	selp.f32	%f329, %f136, %f135, %p13;

BB5_8:
	mov.f32 	%f137, 0f40C90FDB;
	div.approx.ftz.f32 	%f138, %f329, %f137;
	add.ftz.f32 	%f139, %f138, 0f3F000000;
	abs.ftz.f32 	%f140, %f19;
	mov.f32 	%f141, 0f3F800000;
	sub.ftz.f32 	%f142, %f141, %f140;
	mul.ftz.f32 	%f143, %f142, 0f3F000000;
	sqrt.approx.ftz.f32 	%f144, %f143;
	setp.gt.ftz.f32	%p14, %f140, 0f3F11EB85;
	selp.f32	%f145, %f144, %f140, %p14;
	mul.ftz.f32 	%f146, %f145, %f145;
	mov.f32 	%f147, 0f3C94D2E9;
	mov.f32 	%f148, 0f3D53F941;
	fma.rn.ftz.f32 	%f149, %f148, %f146, %f147;
	mov.f32 	%f150, 0f3D3F841F;
	fma.rn.ftz.f32 	%f151, %f149, %f146, %f150;
	mov.f32 	%f152, 0f3D994929;
	fma.rn.ftz.f32 	%f153, %f151, %f146, %f152;
	mov.f32 	%f154, 0f3E2AAB94;
	fma.rn.ftz.f32 	%f155, %f153, %f146, %f154;
	mul.ftz.f32 	%f156, %f146, %f155;
	fma.rn.ftz.f32 	%f157, %f156, %f145, %f145;
	mov.f32 	%f158, 0f3FC90FDB;
	mov.f32 	%f159, 0fC0000000;
	fma.rn.ftz.f32 	%f160, %f159, %f157, %f158;
	selp.f32	%f161, %f160, %f157, %p14;
	setp.gtu.ftz.f32	%p15, %f161, 0f7F800000;
	mov.b32 	 %r24, %f161;
	mov.b32 	 %r25, %f19;
	and.b32  	%r26, %r25, -2147483648;
	or.b32  	%r27, %r24, %r26;
	mov.b32 	 %f162, %r27;
	selp.f32	%f163, %f161, %f162, %p15;
	mov.f32 	%f164, 0f40490FDB;
	div.approx.ftz.f32 	%f165, %f163, %f164;
	mov.f32 	%f166, 0f3F000000;
	sub.ftz.f32 	%f167, %f166, %f165;
	tex.2d.v4.f32.f32	{%f168, %f169, %f170, %f171}, [displacement_tex, {%f139, %f167}];
	mul.ftz.f32 	%f172, %f1, %f168;
	mul.ftz.f32 	%f173, %f172, %f172;
	setp.ltu.ftz.f32	%p16, %f18, %f173;
	selp.f32	%f334, 0fBF800000, 0f3F800000, %p16;
	cvt.rn.f32.s32	%f27, %r5;

BB5_9:
	ld.global.f32 	%f174, [ray+12];
	ld.global.f32 	%f175, [ray+16];
	ld.global.f32 	%f176, [ray+20];
	ld.global.f32 	%f177, [ray];
	fma.rn.ftz.f32 	%f178, %f331, %f174, %f177;
	ld.global.f32 	%f179, [ray+4];
	fma.rn.ftz.f32 	%f180, %f331, %f175, %f179;
	ld.global.f32 	%f181, [ray+8];
	fma.rn.ftz.f32 	%f182, %f331, %f176, %f181;
	sub.ftz.f32 	%f183, %f178, %f2;
	sub.ftz.f32 	%f184, %f180, %f3;
	sub.ftz.f32 	%f185, %f182, %f4;
	mul.ftz.f32 	%f186, %f184, %f184;
	fma.rn.ftz.f32 	%f187, %f183, %f183, %f186;
	fma.rn.ftz.f32 	%f30, %f185, %f185, %f187;
	rsqrt.approx.ftz.f32 	%f188, %f30;
	mul.ftz.f32 	%f31, %f183, %f188;
	mul.ftz.f32 	%f32, %f184, %f188;
	mul.ftz.f32 	%f33, %f185, %f188;
	mul.ftz.f32 	%f189, %f13, %f32;
	fma.rn.ftz.f32 	%f190, %f15, %f31, %f189;
	fma.rn.ftz.f32 	%f191, %f12, %f33, %f190;
	mul.ftz.f32 	%f192, %f10, %f32;
	fma.rn.ftz.f32 	%f193, %f9, %f31, %f192;
	fma.rn.ftz.f32 	%f34, %f11, %f33, %f193;
	mul.ftz.f32 	%f194, %f16, %f32;
	fma.rn.ftz.f32 	%f195, %f14, %f31, %f194;
	fma.rn.ftz.f32 	%f196, %f17, %f33, %f195;
	abs.ftz.f32 	%f35, %f191;
	abs.ftz.f32 	%f36, %f196;
	setp.eq.ftz.f32	%p17, %f35, 0f00000000;
	setp.eq.ftz.f32	%p18, %f36, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	mov.b32 	 %r3, %f191;
	mov.b32 	 %r28, %f196;
	and.b32  	%r4, %r28, -2147483648;
	@%p19 bra 	BB5_13;
	bra.uni 	BB5_10;

BB5_13:
	shr.s32 	%r35, %r3, 31;
	and.b32  	%r36, %r35, 1078530011;
	or.b32  	%r37, %r36, %r4;
	mov.b32 	 %f332, %r37;
	bra.uni 	BB5_14;

BB5_10:
	setp.eq.ftz.f32	%p20, %f35, 0f7F800000;
	setp.eq.ftz.f32	%p21, %f36, 0f7F800000;
	and.pred  	%p22, %p20, %p21;
	@%p22 bra 	BB5_12;
	bra.uni 	BB5_11;

BB5_12:
	shr.s32 	%r31, %r3, 31;
	and.b32  	%r32, %r31, 13483017;
	add.s32 	%r33, %r32, 1061752795;
	or.b32  	%r34, %r33, %r4;
	mov.b32 	 %f332, %r34;
	bra.uni 	BB5_14;

BB5_11:
	max.ftz.f32 	%f197, %f36, %f35;
	min.ftz.f32 	%f198, %f36, %f35;
	div.full.ftz.f32 	%f199, %f198, %f197;
	mul.rn.ftz.f32 	%f200, %f199, %f199;
	mov.f32 	%f201, 0fC0B59883;
	mov.f32 	%f202, 0fBF52C7EA;
	fma.rn.ftz.f32 	%f203, %f200, %f202, %f201;
	mov.f32 	%f204, 0fC0D21907;
	fma.rn.ftz.f32 	%f205, %f203, %f200, %f204;
	mul.ftz.f32 	%f206, %f200, %f205;
	mul.ftz.f32 	%f207, %f199, %f206;
	add.ftz.f32 	%f208, %f200, 0f41355DC0;
	mov.f32 	%f209, 0f41E6BD60;
	fma.rn.ftz.f32 	%f210, %f208, %f200, %f209;
	mov.f32 	%f211, 0f419D92C8;
	fma.rn.ftz.f32 	%f212, %f210, %f200, %f211;
	rcp.approx.ftz.f32 	%f213, %f212;
	fma.rn.ftz.f32 	%f214, %f207, %f213, %f199;
	sub.ftz.f32 	%f216, %f158, %f214;
	setp.gt.ftz.f32	%p23, %f36, %f35;
	selp.f32	%f217, %f216, %f214, %p23;
	sub.ftz.f32 	%f219, %f164, %f217;
	setp.lt.s32	%p24, %r3, 0;
	selp.f32	%f220, %f219, %f217, %p24;
	mov.b32 	 %r29, %f220;
	or.b32  	%r30, %r29, %r4;
	mov.b32 	 %f221, %r30;
	add.ftz.f32 	%f222, %f35, %f36;
	setp.gtu.ftz.f32	%p25, %f222, 0f7F800000;
	selp.f32	%f332, %f222, %f221, %p25;

BB5_14:
	div.approx.ftz.f32 	%f224, %f332, %f137;
	add.ftz.f32 	%f41, %f224, 0f3F000000;
	abs.ftz.f32 	%f225, %f34;
	sub.ftz.f32 	%f227, %f141, %f225;
	mul.ftz.f32 	%f228, %f227, 0f3F000000;
	sqrt.approx.ftz.f32 	%f229, %f228;
	setp.gt.ftz.f32	%p26, %f225, 0f3F11EB85;
	selp.f32	%f230, %f229, %f225, %p26;
	mul.ftz.f32 	%f231, %f230, %f230;
	fma.rn.ftz.f32 	%f234, %f148, %f231, %f147;
	fma.rn.ftz.f32 	%f236, %f234, %f231, %f150;
	fma.rn.ftz.f32 	%f238, %f236, %f231, %f152;
	fma.rn.ftz.f32 	%f240, %f238, %f231, %f154;
	mul.ftz.f32 	%f241, %f231, %f240;
	fma.rn.ftz.f32 	%f242, %f241, %f230, %f230;
	fma.rn.ftz.f32 	%f245, %f159, %f242, %f158;
	selp.f32	%f246, %f245, %f242, %p26;
	setp.gtu.ftz.f32	%p27, %f246, 0f7F800000;
	mov.b32 	 %r38, %f246;
	mov.b32 	 %r39, %f34;
	and.b32  	%r40, %r39, -2147483648;
	or.b32  	%r41, %r38, %r40;
	mov.b32 	 %f247, %r41;
	selp.f32	%f248, %f246, %f247, %p27;
	div.approx.ftz.f32 	%f250, %f248, %f164;
	sub.ftz.f32 	%f42, %f166, %f250;
	tex.2d.v4.f32.f32	{%f43, %f252, %f253, %f254}, [displacement_tex, {%f41, %f42}];
	mul.ftz.f32 	%f255, %f1, %f43;
	mul.ftz.f32 	%f256, %f334, %f255;
	mul.ftz.f32 	%f257, %f255, %f256;
	mul.ftz.f32 	%f258, %f334, %f30;
	setp.geu.ftz.f32	%p28, %f258, %f257;
	@%p28 bra 	BB5_23;

	// inline asm
	call (%r42), _rt_potential_intersection, (%f331);
	// inline asm
	setp.eq.s32	%p29, %r42, 0;
	@%p29 bra 	BB5_23;

	mov.u32 	%r49, 12;
	mov.u64 	%rd38, 0;
	mov.u32 	%r48, 1;
	mov.u64 	%rd37, colors_buffer;
	cvta.global.u64 	%rd32, %rd37;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r48, %r49, %rd5, %rd38, %rd38, %rd38);
	// inline asm
	ld.f32 	%f260, [%rd31];
	ld.f32 	%f261, [%rd31+4];
	ld.f32 	%f262, [%rd31+8];
	st.global.f32 	[shading_color], %f260;
	st.global.f32 	[shading_color+4], %f261;
	st.global.f32 	[shading_color+8], %f262;
	st.global.f32 	[tex_coord], %f41;
	st.global.f32 	[tex_coord+4], %f42;
	st.global.f32 	[tex_coord+8], %f27;
	ld.global.f32 	%f263, [displacement_size+4];
	ld.global.v2.f32 	{%f264, %f265}, [displacement_step];
	add.ftz.f32 	%f268, %f41, %f264;
	add.ftz.f32 	%f269, %f42, %f265;
	sub.ftz.f32 	%f270, %f41, %f264;
	sub.ftz.f32 	%f271, %f42, %f265;
	tex.2d.v4.f32.f32	{%f272, %f273, %f274, %f275}, [displacement_tex, {%f268, %f42}];
	tex.2d.v4.f32.f32	{%f276, %f277, %f278, %f279}, [displacement_tex, {%f270, %f42}];
	mul.ftz.f32 	%f280, %f42, 0f40490FDB;
	sin.approx.ftz.f32 	%f281, %f280;
	ld.global.f32 	%f282, [displacement_size];
	mul.ftz.f32 	%f283, %f282, 0f3DA2F983;
	div.approx.ftz.f32 	%f284, %f283, %f281;
	sub.ftz.f32 	%f285, %f272, %f276;
	mul.ftz.f32 	%f44, %f284, %f285;
	tex.2d.v4.f32.f32	{%f45, %f286, %f287, %f288}, [displacement_tex, {%f41, %f269}];
	tex.2d.v4.f32.f32	{%f46, %f47, %f48, %f49}, [displacement_tex, {%f41, %f271}];
	mul.ftz.f32 	%f50, %f263, 0f3EA2F983;
	ld.global.f32 	%f51, [displacement_step+4];
	setp.gt.ftz.f32	%p30, %f42, %f51;
	@%p30 bra 	BB5_18;
	bra.uni 	BB5_17;

BB5_18:
	ld.global.f32 	%f290, [displacement_size+4];
	sub.ftz.f32 	%f291, %f290, %f51;
	setp.lt.ftz.f32	%p31, %f42, %f291;
	@%p31 bra 	BB5_20;
	bra.uni 	BB5_19;

BB5_20:
	sub.ftz.f32 	%f293, %f45, %f46;
	cvt.ftz.f64.f32	%fd1, %f293;
	mul.f64 	%fd2, %fd1, 0d3FE0000000000000;
	cvt.ftz.f64.f32	%fd3, %f50;
	mul.f64 	%fd4, %fd3, %fd2;
	cvt.rn.ftz.f32.f64	%f333, %fd4;
	bra.uni 	BB5_21;

BB5_17:
	sub.ftz.f32 	%f289, %f45, %f43;
	mul.ftz.f32 	%f333, %f50, %f289;
	bra.uni 	BB5_21;

BB5_19:
	sub.ftz.f32 	%f292, %f43, %f46;
	mul.ftz.f32 	%f333, %f50, %f292;

BB5_21:
	ld.param.u32 	%r50, [_Z25particle_bumped_intersecti_param_0];
	mul.ftz.f32 	%f294, %f11, %f32;
	mul.ftz.f32 	%f295, %f10, %f33;
	sub.ftz.f32 	%f296, %f295, %f294;
	mul.ftz.f32 	%f297, %f9, %f33;
	mul.ftz.f32 	%f298, %f11, %f31;
	sub.ftz.f32 	%f299, %f298, %f297;
	mul.ftz.f32 	%f300, %f10, %f31;
	mul.ftz.f32 	%f301, %f9, %f32;
	sub.ftz.f32 	%f302, %f301, %f300;
	mul.ftz.f32 	%f303, %f299, %f299;
	fma.rn.ftz.f32 	%f304, %f296, %f296, %f303;
	fma.rn.ftz.f32 	%f305, %f302, %f302, %f304;
	rsqrt.approx.ftz.f32 	%f306, %f305;
	mul.ftz.f32 	%f307, %f296, %f306;
	mul.ftz.f32 	%f308, %f299, %f306;
	mul.ftz.f32 	%f309, %f302, %f306;
	mul.ftz.f32 	%f310, %f32, %f309;
	mul.ftz.f32 	%f311, %f33, %f308;
	sub.ftz.f32 	%f312, %f310, %f311;
	mul.ftz.f32 	%f313, %f33, %f307;
	mul.ftz.f32 	%f314, %f31, %f309;
	sub.ftz.f32 	%f315, %f313, %f314;
	mul.ftz.f32 	%f316, %f31, %f308;
	mul.ftz.f32 	%f317, %f32, %f307;
	sub.ftz.f32 	%f318, %f316, %f317;
	mul.ftz.f32 	%f319, %f44, %f307;
	mul.ftz.f32 	%f320, %f44, %f308;
	mul.ftz.f32 	%f321, %f44, %f309;
	sub.ftz.f32 	%f322, %f31, %f319;
	sub.ftz.f32 	%f323, %f32, %f320;
	sub.ftz.f32 	%f324, %f33, %f321;
	fma.rn.ftz.f32 	%f325, %f333, %f312, %f322;
	fma.rn.ftz.f32 	%f326, %f333, %f315, %f323;
	fma.rn.ftz.f32 	%f327, %f333, %f318, %f324;
	st.global.f32 	[shading_normal], %f325;
	st.global.f32 	[shading_normal+4], %f326;
	st.global.f32 	[shading_normal+8], %f327;
	st.global.f32 	[geo_normal], %f325;
	st.global.f32 	[geo_normal+4], %f326;
	st.global.f32 	[geo_normal+8], %f327;
	mov.u32 	%r46, 0;
	ld.global.u32 	%r47, [geom_handle];
	st.global.v2.u32 	[geom_uid], {%r47, %r50};
	// inline asm
	call (%r45), _rt_report_intersection, (%r46);
	// inline asm
	setp.ne.s32	%p32, %r45, 0;
	@%p32 bra 	BB5_24;

	neg.ftz.f32 	%f334, %f334;

BB5_23:
	ld.global.f32 	%f328, [scene_epsilon];
	fma.rn.ftz.f32 	%f331, %f328, 0f3F000000, %f331;
	setp.le.ftz.f32	%p33, %f331, %f8;
	@%p33 bra 	BB5_9;

BB5_24:
	ret;
}

	// .globl	_Z22particle_uvnorm_boundsiPf
.visible .entry _Z22particle_uvnorm_boundsiPf(
	.param .u32 _Z22particle_uvnorm_boundsiPf_param_0,
	.param .u64 _Z22particle_uvnorm_boundsiPf_param_1
)
{
	.reg .f32 	%f<40>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<43>;


	ld.param.u64 	%rd37, [_Z22particle_uvnorm_boundsiPf_param_1];
	ld.param.s32 	%rd33, [_Z22particle_uvnorm_boundsiPf_param_0];
	mov.u64 	%rd38, particle_u_buffer;
	cvta.global.u64 	%rd2, %rd38;
	mov.u32 	%r11, 1;
	mov.u32 	%r10, 12;
	mov.u64 	%rd36, 0;
	// inline asm
	call (%rd1), _rt_buffer_get_64, (%rd2, %r11, %r10, %rd33, %rd36, %rd36, %rd36);
	// inline asm
	ld.f32 	%f1, [%rd1];
	ld.f32 	%f2, [%rd1+4];
	mul.ftz.f32 	%f3, %f2, %f2;
	fma.rn.ftz.f32 	%f4, %f1, %f1, %f3;
	ld.f32 	%f5, [%rd1+8];
	fma.rn.ftz.f32 	%f6, %f5, %f5, %f4;
	rsqrt.approx.ftz.f32 	%f7, %f6;
	mul.ftz.f32 	%f8, %f7, %f1;
	mul.ftz.f32 	%f9, %f7, %f2;
	mul.ftz.f32 	%f10, %f7, %f5;
	// inline asm
	call (%rd7), _rt_buffer_get_64, (%rd2, %r11, %r10, %rd33, %rd36, %rd36, %rd36);
	// inline asm
	st.f32 	[%rd7], %f8;
	st.f32 	[%rd7+4], %f9;
	st.f32 	[%rd7+8], %f10;
	mov.u64 	%rd39, particle_v_buffer;
	cvta.global.u64 	%rd14, %rd39;
	// inline asm
	call (%rd13), _rt_buffer_get_64, (%rd14, %r11, %r10, %rd33, %rd36, %rd36, %rd36);
	// inline asm
	ld.f32 	%f11, [%rd13];
	ld.f32 	%f12, [%rd13+4];
	ld.f32 	%f13, [%rd13+8];
	// inline asm
	call (%rd19), _rt_buffer_get_64, (%rd14, %r11, %r10, %rd33, %rd36, %rd36, %rd36);
	// inline asm
	mul.ftz.f32 	%f14, %f9, %f12;
	fma.rn.ftz.f32 	%f15, %f8, %f11, %f14;
	fma.rn.ftz.f32 	%f16, %f10, %f13, %f15;
	mul.ftz.f32 	%f17, %f8, %f16;
	mul.ftz.f32 	%f18, %f9, %f16;
	mul.ftz.f32 	%f19, %f10, %f16;
	sub.ftz.f32 	%f20, %f11, %f17;
	sub.ftz.f32 	%f21, %f12, %f18;
	sub.ftz.f32 	%f22, %f13, %f19;
	mul.ftz.f32 	%f23, %f21, %f21;
	fma.rn.ftz.f32 	%f24, %f20, %f20, %f23;
	fma.rn.ftz.f32 	%f25, %f22, %f22, %f24;
	rsqrt.approx.ftz.f32 	%f26, %f25;
	mul.ftz.f32 	%f27, %f26, %f20;
	mul.ftz.f32 	%f28, %f26, %f21;
	mul.ftz.f32 	%f29, %f26, %f22;
	st.f32 	[%rd19], %f27;
	st.f32 	[%rd19+4], %f28;
	st.f32 	[%rd19+8], %f29;
	mov.u64 	%rd40, positions_buffer;
	cvta.global.u64 	%rd26, %rd40;
	// inline asm
	call (%rd25), _rt_buffer_get_64, (%rd26, %r11, %r10, %rd33, %rd36, %rd36, %rd36);
	// inline asm
	ld.f32 	%f30, [%rd25];
	ld.f32 	%f31, [%rd25+4];
	ld.f32 	%f32, [%rd25+8];
	mov.u64 	%rd41, radii_buffer;
	cvta.global.u64 	%rd32, %rd41;
	mov.u32 	%r12, 4;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r11, %r12, %rd33, %rd36, %rd36, %rd36);
	// inline asm
	ld.f32 	%f33, [%rd31];
	cvta.to.global.u64 	%rd42, %rd37;
	sub.ftz.f32 	%f34, %f30, %f33;
	sub.ftz.f32 	%f35, %f31, %f33;
	sub.ftz.f32 	%f36, %f32, %f33;
	add.ftz.f32 	%f37, %f30, %f33;
	add.ftz.f32 	%f38, %f31, %f33;
	add.ftz.f32 	%f39, %f32, %f33;
	st.global.f32 	[%rd42], %f34;
	st.global.f32 	[%rd42+4], %f35;
	st.global.f32 	[%rd42+8], %f36;
	st.global.f32 	[%rd42+12], %f37;
	st.global.f32 	[%rd42+16], %f38;
	st.global.f32 	[%rd42+20], %f39;
	ret;
}


 