(dp0
Vis_builtin
p1
I01
sVchilds
p2
(lp3
(dp4
g1
I01
sVname
p5
V__doc__
p6
sVtype
p7
L5L
sa(dp8
g1
I01
sg2
(lp9
(dp10
g1
I01
sg5
V__delattr__
p11
sg7
L5L
sa(dp12
g1
I01
sg5
V__dict__
p13
sg7
L5L
sa(dp14
g1
I01
sVdoc
p15
V__dir__() -> list\u000adefault dir() implementation
p16
sg5
V__dir__
p17
sg7
L2L
sa(dp18
g1
I01
sg5
g6
sg7
L5L
sa(dp19
g1
I01
sg5
V__eq__
p20
sg7
L5L
sa(dp21
g1
I01
sg15
Vdefault object formatter
p22
sg5
V__format__
p23
sg7
L2L
sa(dp24
g1
I01
sg5
V__ge__
p25
sg7
L5L
sa(dp26
g1
I01
sg5
V__getattribute__
p27
sg7
L5L
sa(dp28
g1
I01
sg5
V__gt__
p29
sg7
L5L
sa(dp30
g1
I01
sg5
V__hash__
p31
sg7
L5L
sa(dp32
g1
I01
sg5
V__init__
p33
sg7
L5L
sa(dp34
g1
I01
sg5
V__le__
p35
sg7
L5L
sa(dp36
g1
I01
sg5
V__lt__
p37
sg7
L5L
sa(dp38
g1
I01
sg5
V__module__
p39
sg7
L5L
sa(dp40
g1
I01
sg5
V__ne__
p41
sg7
L5L
sa(dp42
g1
I01
sg15
VCreate and return a new object.  See help(type) for accurate signature.
p43
sg5
V__new__
p44
sg7
L2L
sa(dp45
g1
I01
sg15
Vhelper for pickle
p46
sg5
V__reduce__
p47
sg7
L2L
sa(dp48
g1
I01
sg15
Vhelper for pickle
p49
sg5
V__reduce_ex__
p50
sg7
L2L
sa(dp51
g1
I01
sg5
V__repr__
p52
sg7
L5L
sa(dp53
g1
I01
sg5
V__setattr__
p54
sg7
L5L
sa(dp55
g1
I01
sg15
V__sizeof__() -> int\u000asize of object in memory, in bytes
p56
sg5
V__sizeof__
p57
sg7
L2L
sa(dp58
g1
I01
sg5
V__str__
p59
sg7
L5L
sa(dp60
g1
I01
sg15
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p61
sg5
V__subclasshook__
p62
sg7
L2L
sa(dp63
g1
I01
sg5
V__weakref__
p64
sg7
L5L
sa(dp65
g1
I01
sg5
Vcreate_module
p66
sg7
L5L
sa(dp67
g1
I01
sg5
Vexec_module
p68
sg7
L5L
sa(dp69
g1
I01
sg5
Vfind_module
p70
sg7
L5L
sa(dp71
g1
I01
sg5
Vfind_spec
p72
sg7
L5L
sa(dp73
g1
I01
sg5
Vget_code
p74
sg7
L5L
sa(dp75
g1
I01
sg5
Vget_source
p76
sg7
L5L
sa(dp77
g1
I01
sg5
Vis_package
p78
sg7
L5L
sa(dp79
g1
I01
sg5
Vload_module
p80
sg7
L5L
sa(dp81
g1
I01
sg5
Vmodule_repr
p82
sg7
L5L
sasg15
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p83
sg5
V__loader__
p84
sg7
L3L
sa(dp85
g1
I01
sg5
V__name__
p86
sg7
L5L
sa(dp87
g1
I01
sg5
V__package__
p88
sg7
L5L
sa(dp89
g1
I01
sg5
V__spec__
p90
sg7
L5L
sa(dp91
g1
I01
sg15
VPurge the named codec from the internal codec lookup cache
p92
sg5
V_forget_codec
p93
sg7
L2L
sa(dp94
g1
I01
sg15
Nsg5
Vascii_decode
p95
sg7
L2L
sa(dp96
g1
I01
sg15
Nsg5
Vascii_encode
p97
sg7
L2L
sa(dp98
g1
I01
sg15
Nsg5
Vcharmap_build
p99
sg7
L2L
sa(dp100
g1
I01
sg15
Nsg5
Vcharmap_decode
p101
sg7
L2L
sa(dp102
g1
I01
sg15
Nsg5
Vcharmap_encode
p103
sg7
L2L
sa(dp104
g1
I01
sg15
VDecodes obj using the codec registered for encoding.\u000a\u000aDefault encoding is 'utf-8'.  errors may be given to set a\u000adifferent error handling scheme.  Default is 'strict' meaning that encoding\u000aerrors raise a ValueError.  Other possible values are 'ignore', 'replace'\u000aand 'backslashreplace' as well as any other name registered with\u000acodecs.register_error that can handle ValueErrors.
p105
sg5
Vdecode
p106
sg7
L2L
sa(dp107
g1
I01
sg15
VEncodes obj using the codec registered for encoding.\u000a\u000aThe default encoding is 'utf-8'.  errors may be given to set a\u000adifferent error handling scheme.  Default is 'strict' meaning that encoding\u000aerrors raise a ValueError.  Other possible values are 'ignore', 'replace'\u000aand 'backslashreplace' as well as any other name registered with\u000acodecs.register_error that can handle ValueErrors.
p108
sg5
Vencode
p109
sg7
L2L
sa(dp110
g1
I01
sg15
Nsg5
Vescape_decode
p111
sg7
L2L
sa(dp112
g1
I01
sg15
Nsg5
Vescape_encode
p113
sg7
L2L
sa(dp114
g1
I01
sg15
Nsg5
Vlatin_1_decode
p115
sg7
L2L
sa(dp116
g1
I01
sg15
Nsg5
Vlatin_1_encode
p117
sg7
L2L
sa(dp118
g1
I01
sg15
VLooks up a codec tuple in the Python codec registry and returns a CodecInfo object.
p119
sg5
Vlookup
p120
sg7
L2L
sa(dp121
g1
I01
sg15
Vlookup_error(errors) -> handler\u000a\u000aReturn the error handler for the specified error handling name or raise a\u000aLookupError, if no handler exists under this name.
p122
sg5
Vlookup_error
p123
sg7
L2L
sa(dp124
g1
I01
sg15
Nsg5
Vraw_unicode_escape_decode
p125
sg7
L2L
sa(dp126
g1
I01
sg15
Nsg5
Vraw_unicode_escape_encode
p127
sg7
L2L
sa(dp128
g1
I01
sg15
Nsg5
Vreadbuffer_encode
p129
sg7
L2L
sa(dp130
g1
I01
sg15
VRegister a codec search function.\u000a\u000aSearch functions are expected to take one argument, the encoding name in\u000aall lower case letters, and either return None, or a tuple of functions\u000a(encoder, decoder, stream_reader, stream_writer) (or a CodecInfo object).
p131
sg5
Vregister
p132
sg7
L2L
sa(dp133
g1
I01
sg15
VRegister the specified error handler under the name errors.\u000a\u000ahandler must be a callable object, that will be called with an exception\u000ainstance containing information about the location of the encoding/decoding\u000aerror and must return a (replacement, new position) tuple.
p134
sg5
Vregister_error
p135
sg7
L2L
sa(dp136
g1
I01
sg15
Nsg5
Vunicode_escape_decode
p137
sg7
L2L
sa(dp138
g1
I01
sg15
Nsg5
Vunicode_escape_encode
p139
sg7
L2L
sa(dp140
g1
I01
sg15
Nsg5
Vunicode_internal_decode
p141
sg7
L2L
sa(dp142
g1
I01
sg15
Nsg5
Vunicode_internal_encode
p143
sg7
L2L
sa(dp144
g1
I01
sg15
Nsg5
Vutf_16_be_decode
p145
sg7
L2L
sa(dp146
g1
I01
sg15
Nsg5
Vutf_16_be_encode
p147
sg7
L2L
sa(dp148
g1
I01
sg15
Nsg5
Vutf_16_decode
p149
sg7
L2L
sa(dp150
g1
I01
sg15
Nsg5
Vutf_16_encode
p151
sg7
L2L
sa(dp152
g1
I01
sg15
Nsg5
Vutf_16_ex_decode
p153
sg7
L2L
sa(dp154
g1
I01
sg15
Nsg5
Vutf_16_le_decode
p155
sg7
L2L
sa(dp156
g1
I01
sg15
Nsg5
Vutf_16_le_encode
p157
sg7
L2L
sa(dp158
g1
I01
sg15
Nsg5
Vutf_32_be_decode
p159
sg7
L2L
sa(dp160
g1
I01
sg15
Nsg5
Vutf_32_be_encode
p161
sg7
L2L
sa(dp162
g1
I01
sg15
Nsg5
Vutf_32_decode
p163
sg7
L2L
sa(dp164
g1
I01
sg15
Nsg5
Vutf_32_encode
p165
sg7
L2L
sa(dp166
g1
I01
sg15
Nsg5
Vutf_32_ex_decode
p167
sg7
L2L
sa(dp168
g1
I01
sg15
Nsg5
Vutf_32_le_decode
p169
sg7
L2L
sa(dp170
g1
I01
sg15
Nsg5
Vutf_32_le_encode
p171
sg7
L2L
sa(dp172
g1
I01
sg15
Nsg5
Vutf_7_decode
p173
sg7
L2L
sa(dp174
g1
I01
sg15
Nsg5
Vutf_7_encode
p175
sg7
L2L
sa(dp176
g1
I01
sg15
Nsg5
Vutf_8_decode
p177
sg7
L2L
sa(dp178
g1
I01
sg15
Nsg5
Vutf_8_encode
p179
sg7
L2L
sasg15
Nsg5
V_codecs
p180
sg7
L1L
s.