(dp0
Vis_builtin
p1
I01
sVchilds
p2
(lp3
(dp4
g1
I01
sVname
p5
VDEFLATED
p6
sVtype
p7
L5L
sa(dp8
g1
I01
sg5
VDEF_BUF_SIZE
p9
sg7
L5L
sa(dp10
g1
I01
sg5
VDEF_MEM_LEVEL
p11
sg7
L5L
sa(dp12
g1
I01
sg5
VMAX_WBITS
p13
sg7
L5L
sa(dp14
g1
I01
sg5
VZLIB_RUNTIME_VERSION
p15
sg7
L5L
sa(dp16
g1
I01
sg5
VZLIB_VERSION
p17
sg7
L5L
sa(dp18
g1
I01
sg5
VZ_BEST_COMPRESSION
p19
sg7
L5L
sa(dp20
g1
I01
sg5
VZ_BEST_SPEED
p21
sg7
L5L
sa(dp22
g1
I01
sg5
VZ_DEFAULT_COMPRESSION
p23
sg7
L5L
sa(dp24
g1
I01
sg5
VZ_DEFAULT_STRATEGY
p25
sg7
L5L
sa(dp26
g1
I01
sg5
VZ_FILTERED
p27
sg7
L5L
sa(dp28
g1
I01
sg5
VZ_FINISH
p29
sg7
L5L
sa(dp30
g1
I01
sg5
VZ_FULL_FLUSH
p31
sg7
L5L
sa(dp32
g1
I01
sg5
VZ_HUFFMAN_ONLY
p33
sg7
L5L
sa(dp34
g1
I01
sg5
VZ_NO_FLUSH
p35
sg7
L5L
sa(dp36
g1
I01
sg5
VZ_SYNC_FLUSH
p37
sg7
L5L
sa(dp38
g1
I01
sg5
V__doc__
p39
sg7
L5L
sa(dp40
g1
I01
sg2
(lp41
(dp42
g1
I01
sg5
V__delattr__
p43
sg7
L5L
sa(dp44
g1
I01
sg5
V__dict__
p45
sg7
L5L
sa(dp46
g1
I01
sVdoc
p47
V__dir__() -> list\u000adefault dir() implementation
p48
sg5
V__dir__
p49
sg7
L2L
sa(dp50
g1
I01
sg5
g39
sg7
L5L
sa(dp51
g1
I01
sg5
V__eq__
p52
sg7
L5L
sa(dp53
g1
I01
sg47
Vdefault object formatter
p54
sg5
V__format__
p55
sg7
L2L
sa(dp56
g1
I01
sg5
V__ge__
p57
sg7
L5L
sa(dp58
g1
I01
sg5
V__getattribute__
p59
sg7
L5L
sa(dp60
g1
I01
sg5
V__gt__
p61
sg7
L5L
sa(dp62
g1
I01
sg5
V__hash__
p63
sg7
L5L
sa(dp64
g1
I01
sg5
V__init__
p65
sg7
L5L
sa(dp66
g1
I01
sg5
V__le__
p67
sg7
L5L
sa(dp68
g1
I01
sg5
V__lt__
p69
sg7
L5L
sa(dp70
g1
I01
sg5
V__module__
p71
sg7
L5L
sa(dp72
g1
I01
sg5
V__ne__
p73
sg7
L5L
sa(dp74
g1
I01
sg47
VCreate and return a new object.  See help(type) for accurate signature.
p75
sg5
V__new__
p76
sg7
L2L
sa(dp77
g1
I01
sg47
Vhelper for pickle
p78
sg5
V__reduce__
p79
sg7
L2L
sa(dp80
g1
I01
sg47
Vhelper for pickle
p81
sg5
V__reduce_ex__
p82
sg7
L2L
sa(dp83
g1
I01
sg5
V__repr__
p84
sg7
L5L
sa(dp85
g1
I01
sg5
V__setattr__
p86
sg7
L5L
sa(dp87
g1
I01
sg47
V__sizeof__() -> int\u000asize of object in memory, in bytes
p88
sg5
V__sizeof__
p89
sg7
L2L
sa(dp90
g1
I01
sg5
V__str__
p91
sg7
L5L
sa(dp92
g1
I01
sg47
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p93
sg5
V__subclasshook__
p94
sg7
L2L
sa(dp95
g1
I01
sg5
V__weakref__
p96
sg7
L5L
sa(dp97
g1
I01
sg5
Vcreate_module
p98
sg7
L5L
sa(dp99
g1
I01
sg5
Vexec_module
p100
sg7
L5L
sa(dp101
g1
I01
sg5
Vfind_module
p102
sg7
L5L
sa(dp103
g1
I01
sg5
Vfind_spec
p104
sg7
L5L
sa(dp105
g1
I01
sg5
Vget_code
p106
sg7
L5L
sa(dp107
g1
I01
sg5
Vget_source
p108
sg7
L5L
sa(dp109
g1
I01
sg5
Vis_package
p110
sg7
L5L
sa(dp111
g1
I01
sg5
Vload_module
p112
sg7
L5L
sa(dp113
g1
I01
sg5
Vmodule_repr
p114
sg7
L5L
sasg47
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p115
sg5
V__loader__
p116
sg7
L3L
sa(dp117
g1
I01
sg5
V__name__
p118
sg7
L5L
sa(dp119
g1
I01
sg5
V__package__
p120
sg7
L5L
sa(dp121
g1
I01
sg5
V__spec__
p122
sg7
L5L
sa(dp123
g1
I01
sg5
V__version__
p124
sg7
L5L
sa(dp125
g1
I01
sg47
VCompute an Adler-32 checksum of data.\u000a\u000a  value\u000a    Starting value of the checksum.\u000a\u000aThe returned checksum is an integer.
p126
sg5
Vadler32
p127
sg7
L2L
sa(dp128
g1
I01
sg47
VReturns a bytes object containing compressed data.\u000a\u000a  bytes\u000a    Binary data to be compressed.\u000a  level\u000a    Compression level, in 0-9.
p129
sg5
Vcompress
p130
sg7
L2L
sa(dp131
g1
I01
sg47
VReturn a compressor object.\u000a\u000a  level\u000a    The compression level (an integer in the range 0-9 or -1; default is\u000a    currently equivalent to 6).  Higher compression levels are slower,\u000a    but produce smaller results.\u000a  method\u000a    The compression algorithm.  If given, this must be DEFLATED.\u000a  wbits\u000a    +9 to +15: The base-two logarithm of the window size.  Include a zlib\u000a        container.\u000a    -9 to -15: Generate a raw stream.\u000a    +25 to +31: Include a gzip container.\u000a  memLevel\u000a    Controls the amount of memory used for internal compression state.\u000a    Valid values range from 1 to 9.  Higher values result in higher memory\u000a    usage, faster compression, and smaller output.\u000a  strategy\u000a    Used to tune the compression algorithm.  Possible values are\u000a    Z_DEFAULT_STRATEGY, Z_FILTERED, and Z_HUFFMAN_ONLY.\u000a  zdict\u000a    The predefined compression dictionary - a sequence of bytes\u000a    containing subsequences that are likely to occur in the input data.
p132
sg5
Vcompressobj
p133
sg7
L2L
sa(dp134
g1
I01
sg47
VCompute a CRC-32 checksum of data.\u000a\u000a  value\u000a    Starting value of the checksum.\u000a\u000aThe returned checksum is an integer.
p135
sg5
Vcrc32
p136
sg7
L2L
sa(dp137
g1
I01
sg47
VReturns a bytes object containing the uncompressed data.\u000a\u000a  data\u000a    Compressed data.\u000a  wbits\u000a    The window buffer size and container format.\u000a  bufsize\u000a    The initial output buffer size.
p138
sg5
Vdecompress
p139
sg7
L2L
sa(dp140
g1
I01
sg47
VReturn a decompressor object.\u000a\u000a  wbits\u000a    The window buffer size and container format.\u000a  zdict\u000a    The predefined compression dictionary.  This must be the same\u000a    dictionary as used by the compressor that produced the input data.
p141
sg5
Vdecompressobj
p142
sg7
L2L
sa(dp143
g1
I01
sg2
(lp144
(dp145
g1
I01
sg5
V__cause__
p146
sg7
L5L
sa(dp147
g1
I01
sg5
V__context__
p148
sg7
L5L
sa(dp149
g1
I01
sg5
g43
sg7
L5L
sa(dp150
g1
I01
sg5
g45
sg7
L5L
sa(dp151
g1
I01
sg47
V__dir__() -> list\u000adefault dir() implementation
p152
sg5
g49
sg7
L2L
sa(dp153
g1
I01
sg5
g39
sg7
L5L
sa(dp154
g1
I01
sg5
g52
sg7
L5L
sa(dp155
g1
I01
sg47
Vdefault object formatter
p156
sg5
g55
sg7
L2L
sa(dp157
g1
I01
sg5
g57
sg7
L5L
sa(dp158
g1
I01
sg5
g59
sg7
L5L
sa(dp159
g1
I01
sg5
g61
sg7
L5L
sa(dp160
g1
I01
sg5
g63
sg7
L5L
sa(dp161
g1
I01
sg5
g65
sg7
L5L
sa(dp162
g1
I01
sg5
g67
sg7
L5L
sa(dp163
g1
I01
sg5
g69
sg7
L5L
sa(dp164
g1
I01
sg5
g71
sg7
L5L
sa(dp165
g1
I01
sg5
g73
sg7
L5L
sa(dp166
g1
I01
sg47
VCreate and return a new object.  See help(type) for accurate signature.
p167
sg5
g76
sg7
L2L
sa(dp168
g1
I01
sg47
Nsg5
g79
sg7
L2L
sa(dp169
g1
I01
sg47
Vhelper for pickle
p170
sg5
g82
sg7
L2L
sa(dp171
g1
I01
sg5
g84
sg7
L5L
sa(dp172
g1
I01
sg5
g86
sg7
L5L
sa(dp173
g1
I01
sg47
Nsg5
V__setstate__
p174
sg7
L2L
sa(dp175
g1
I01
sg47
V__sizeof__() -> int\u000asize of object in memory, in bytes
p176
sg5
g89
sg7
L2L
sa(dp177
g1
I01
sg5
g91
sg7
L5L
sa(dp178
g1
I01
sg47
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p179
sg5
g94
sg7
L2L
sa(dp180
g1
I01
sg5
V__suppress_context__
p181
sg7
L5L
sa(dp182
g1
I01
sg5
V__traceback__
p183
sg7
L5L
sa(dp184
g1
I01
sg5
g96
sg7
L5L
sa(dp185
g1
I01
sg5
Vargs
p186
sg7
L5L
sa(dp187
g1
I01
sg47
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p188
sg5
Vwith_traceback
p189
sg7
L2L
sasg47
Nsg5
Verror
p190
sg7
L3L
sasg47
VThe functions in this module allow compression and decompression using the\u000azlib library, which is based on GNU zip.\u000a\u000aadler32(string[, start]) -- Compute an Adler-32 checksum.\u000acompress(string[, level]) -- Compress string, with compression level in 0-9.\u000acompressobj([level[, ...]]) -- Return a compressor object.\u000acrc32(string[, start]) -- Compute a CRC-32 checksum.\u000adecompress(string,[wbits],[bufsize]) -- Decompresses a compressed string.\u000adecompressobj([wbits[, zdict]]]) -- Return a decompressor object.\u000a\u000a'wbits' is window buffer size and container format.\u000aCompressor objects support compress() and flush() methods; decompressor\u000aobjects support decompress() and flush().
p191
sg5
Vzlib
p192
sg7
L1L
s.