(dp0
Vis_builtin
p1
I01
sVchilds
p2
(lp3
(dp4
g1
I01
sVname
p5
V__doc__
p6
sVtype
p7
L5L
sa(dp8
g1
I01
sg2
(lp9
(dp10
g1
I01
sg5
V__delattr__
p11
sg7
L5L
sa(dp12
g1
I01
sg5
V__dict__
p13
sg7
L5L
sa(dp14
g1
I01
sVdoc
p15
V__dir__() -> list\u000adefault dir() implementation
p16
sg5
V__dir__
p17
sg7
L2L
sa(dp18
g1
I01
sg5
g6
sg7
L5L
sa(dp19
g1
I01
sg5
V__eq__
p20
sg7
L5L
sa(dp21
g1
I01
sg15
Vdefault object formatter
p22
sg5
V__format__
p23
sg7
L2L
sa(dp24
g1
I01
sg5
V__ge__
p25
sg7
L5L
sa(dp26
g1
I01
sg5
V__getattribute__
p27
sg7
L5L
sa(dp28
g1
I01
sg5
V__gt__
p29
sg7
L5L
sa(dp30
g1
I01
sg5
V__hash__
p31
sg7
L5L
sa(dp32
g1
I01
sg5
V__init__
p33
sg7
L5L
sa(dp34
g1
I01
sg5
V__le__
p35
sg7
L5L
sa(dp36
g1
I01
sg5
V__lt__
p37
sg7
L5L
sa(dp38
g1
I01
sg5
V__module__
p39
sg7
L5L
sa(dp40
g1
I01
sg5
V__ne__
p41
sg7
L5L
sa(dp42
g1
I01
sg15
VCreate and return a new object.  See help(type) for accurate signature.
p43
sg5
V__new__
p44
sg7
L2L
sa(dp45
g1
I01
sg15
Vhelper for pickle
p46
sg5
V__reduce__
p47
sg7
L2L
sa(dp48
g1
I01
sg15
Vhelper for pickle
p49
sg5
V__reduce_ex__
p50
sg7
L2L
sa(dp51
g1
I01
sg5
V__repr__
p52
sg7
L5L
sa(dp53
g1
I01
sg5
V__setattr__
p54
sg7
L5L
sa(dp55
g1
I01
sg15
V__sizeof__() -> int\u000asize of object in memory, in bytes
p56
sg5
V__sizeof__
p57
sg7
L2L
sa(dp58
g1
I01
sg5
V__str__
p59
sg7
L5L
sa(dp60
g1
I01
sg15
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p61
sg5
V__subclasshook__
p62
sg7
L2L
sa(dp63
g1
I01
sg5
V__weakref__
p64
sg7
L5L
sa(dp65
g1
I01
sg5
Vcreate_module
p66
sg7
L5L
sa(dp67
g1
I01
sg5
Vexec_module
p68
sg7
L5L
sa(dp69
g1
I01
sg5
Vfind_module
p70
sg7
L5L
sa(dp71
g1
I01
sg5
Vfind_spec
p72
sg7
L5L
sa(dp73
g1
I01
sg5
Vget_code
p74
sg7
L5L
sa(dp75
g1
I01
sg5
Vget_source
p76
sg7
L5L
sa(dp77
g1
I01
sg5
Vis_package
p78
sg7
L5L
sa(dp79
g1
I01
sg5
Vload_module
p80
sg7
L5L
sa(dp81
g1
I01
sg5
Vmodule_repr
p82
sg7
L5L
sasg15
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p83
sg5
V__loader__
p84
sg7
L3L
sa(dp85
g1
I01
sg5
V__name__
p86
sg7
L5L
sa(dp87
g1
I01
sg5
V__package__
p88
sg7
L5L
sa(dp89
g1
I01
sg5
V__spec__
p90
sg7
L5L
sa(dp91
g1
I01
sg15
Nsg5
Vbench
p92
sg7
L2L
sa(dp93
g1
I01
sg2
(lp94
(dp95
g1
I01
sg15
VTrue if D has a key k, else False.
p96
sg5
V__contains__
p97
sg7
L2L
sa(dp98
g1
I01
sg5
g11
sg7
L5L
sa(dp99
g1
I01
sg5
V__delitem__
p100
sg7
L5L
sa(dp101
g1
I01
sg15
V__dir__() -> list\u000adefault dir() implementation
p102
sg5
g17
sg7
L2L
sa(dp103
g1
I01
sg5
g6
sg7
L5L
sa(dp104
g1
I01
sg5
g20
sg7
L5L
sa(dp105
g1
I01
sg15
Vdefault object formatter
p106
sg5
g23
sg7
L2L
sa(dp107
g1
I01
sg5
g25
sg7
L5L
sa(dp108
g1
I01
sg5
g27
sg7
L5L
sa(dp109
g1
I01
sg15
Vx.__getitem__(y) <==> x[y]
p110
sg5
V__getitem__
p111
sg7
L2L
sa(dp112
g1
I01
sg5
g29
sg7
L5L
sa(dp113
g1
I01
sg5
g31
sg7
L5L
sa(dp114
g1
I01
sg5
g33
sg7
L5L
sa(dp115
g1
I01
sg5
V__iter__
p116
sg7
L5L
sa(dp117
g1
I01
sg5
g35
sg7
L5L
sa(dp118
g1
I01
sg5
V__len__
p119
sg7
L5L
sa(dp120
g1
I01
sg5
g37
sg7
L5L
sa(dp121
g1
I01
sg5
g41
sg7
L5L
sa(dp122
g1
I01
sg15
VCreate and return a new object.  See help(type) for accurate signature.
p123
sg5
g44
sg7
L2L
sa(dp124
g1
I01
sg15
Vhelper for pickle
p125
sg5
g47
sg7
L2L
sa(dp126
g1
I01
sg15
Vhelper for pickle
p127
sg5
g50
sg7
L2L
sa(dp128
g1
I01
sg5
g52
sg7
L5L
sa(dp129
g1
I01
sg5
g54
sg7
L5L
sa(dp130
g1
I01
sg5
V__setitem__
p131
sg7
L5L
sa(dp132
g1
I01
sg15
VD.__sizeof__() -> size of D in memory, in bytes
p133
sg5
g57
sg7
L2L
sa(dp134
g1
I01
sg5
g59
sg7
L5L
sa(dp135
g1
I01
sg15
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p136
sg5
g62
sg7
L2L
sa(dp137
g1
I01
sg15
VD.clear() -> None.  Remove all items from D.
p138
sg5
Vclear
p139
sg7
L2L
sa(dp140
g1
I01
sg15
VD.copy() -> a shallow copy of D
p141
sg5
Vcopy
p142
sg7
L2L
sa(dp143
g1
I01
sg15
VReturns a new dict with keys from iterable and values equal to value.
p144
sg5
Vfromkeys
p145
sg7
L2L
sa(dp146
g1
I01
sg15
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p147
sg5
Vget
p148
sg7
L2L
sa(dp149
g1
I01
sg15
Vgetstate() -> state
p150
sg5
Vgetstate
p151
sg7
L2L
sa(dp152
g1
I01
sg15
VD.items() -> a set-like object providing a view on D's items
p153
sg5
Vitems
p154
sg7
L2L
sa(dp155
g1
I01
sg15
VD.keys() -> a set-like object providing a view on D's keys
p156
sg5
Vkeys
p157
sg7
L2L
sa(dp158
g1
I01
sg15
VD.pop(k[,d]) -> v, remove specified key and return the corresponding value.\u000aIf key is not found, d is returned if given, otherwise KeyError is raised
p159
sg5
Vpop
p160
sg7
L2L
sa(dp161
g1
I01
sg15
VD.popitem() -> (k, v), remove and return some (key, value) pair as a\u000a2-tuple; but raise KeyError if D is empty.
p162
sg5
Vpopitem
p163
sg7
L2L
sa(dp164
g1
I01
sg15
VD.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
p165
sg5
Vsetdefault
p166
sg7
L2L
sa(dp167
g1
I01
sg15
Vsetstate(state)
p168
sg5
Vsetstate
p169
sg7
L2L
sa(dp170
g1
I01
sg5
Vstate
p171
sg7
L5L
sa(dp172
g1
I01
sg15
VD.update([E, ]**F) -> None.  Update D from dict/iterable E and F.\u000aIf E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\u000aIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\u000aIn either case, this is followed by: for k in F:  D[k] = F[k]
p173
sg5
Vupdate
p174
sg7
L2L
sa(dp175
g1
I01
sg15
VD.values() -> an object providing a view on D's values
p176
sg5
Vvalues
p177
sg7
L2L
sasg15
Nsg5
Vspamdict
p178
sg7
L3L
sa(dp179
g1
I01
sg2
(lp180
(dp181
g1
I01
sg5
V__add__
p182
sg7
L5L
sa(dp183
g1
I01
sg5
g97
sg7
L5L
sa(dp184
g1
I01
sg5
g11
sg7
L5L
sa(dp185
g1
I01
sg5
g100
sg7
L5L
sa(dp186
g1
I01
sg15
V__dir__() -> list\u000adefault dir() implementation
p187
sg5
g17
sg7
L2L
sa(dp188
g1
I01
sg5
g6
sg7
L5L
sa(dp189
g1
I01
sg5
g20
sg7
L5L
sa(dp190
g1
I01
sg15
Vdefault object formatter
p191
sg5
g23
sg7
L2L
sa(dp192
g1
I01
sg5
g25
sg7
L5L
sa(dp193
g1
I01
sg5
g27
sg7
L5L
sa(dp194
g1
I01
sg15
Vx.__getitem__(y) <==> x[y]
p195
sg5
g111
sg7
L2L
sa(dp196
g1
I01
sg5
g29
sg7
L5L
sa(dp197
g1
I01
sg5
g31
sg7
L5L
sa(dp198
g1
I01
sg5
V__iadd__
p199
sg7
L5L
sa(dp200
g1
I01
sg5
V__imul__
p201
sg7
L5L
sa(dp202
g1
I01
sg5
g33
sg7
L5L
sa(dp203
g1
I01
sg5
g116
sg7
L5L
sa(dp204
g1
I01
sg5
g35
sg7
L5L
sa(dp205
g1
I01
sg5
g119
sg7
L5L
sa(dp206
g1
I01
sg5
g37
sg7
L5L
sa(dp207
g1
I01
sg5
V__mul__
p208
sg7
L5L
sa(dp209
g1
I01
sg5
g41
sg7
L5L
sa(dp210
g1
I01
sg15
VCreate and return a new object.  See help(type) for accurate signature.
p211
sg5
g44
sg7
L2L
sa(dp212
g1
I01
sg15
Vhelper for pickle
p213
sg5
g47
sg7
L2L
sa(dp214
g1
I01
sg15
Vhelper for pickle
p215
sg5
g50
sg7
L2L
sa(dp216
g1
I01
sg5
g52
sg7
L5L
sa(dp217
g1
I01
sg15
VL.__reversed__() -- return a reverse iterator over the list
p218
sg5
V__reversed__
p219
sg7
L2L
sa(dp220
g1
I01
sg5
V__rmul__
p221
sg7
L5L
sa(dp222
g1
I01
sg5
g54
sg7
L5L
sa(dp223
g1
I01
sg5
g131
sg7
L5L
sa(dp224
g1
I01
sg15
VL.__sizeof__() -- size of L in memory, in bytes
p225
sg5
g57
sg7
L2L
sa(dp226
g1
I01
sg5
g59
sg7
L5L
sa(dp227
g1
I01
sg15
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p228
sg5
g62
sg7
L2L
sa(dp229
g1
I01
sg15
VL.append(object) -> None -- append object to end
p230
sg5
Vappend
p231
sg7
L2L
sa(dp232
g1
I01
sg15
Vclassmeth(*args, **kw)
p233
sg5
Vclassmeth
p234
sg7
L2L
sa(dp235
g1
I01
sg15
VL.clear() -> None -- remove all items from L
p236
sg5
g139
sg7
L2L
sa(dp237
g1
I01
sg15
VL.copy() -> list -- a shallow copy of L
p238
sg5
g142
sg7
L2L
sa(dp239
g1
I01
sg15
VL.count(value) -> integer -- return number of occurrences of value
p240
sg5
Vcount
p241
sg7
L2L
sa(dp242
g1
I01
sg15
VL.extend(iterable) -> None -- extend list by appending elements from the iterable
p243
sg5
Vextend
p244
sg7
L2L
sa(dp245
g1
I01
sg15
Vgetstate() -> state
p246
sg5
g151
sg7
L2L
sa(dp247
g1
I01
sg15
VL.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p248
sg5
Vindex
p249
sg7
L2L
sa(dp250
g1
I01
sg15
VL.insert(index, object) -- insert object before index
p251
sg5
Vinsert
p252
sg7
L2L
sa(dp253
g1
I01
sg15
VL.pop([index]) -> item -- remove and return item at index (default last).\u000aRaises IndexError if list is empty or index is out of range.
p254
sg5
g160
sg7
L2L
sa(dp255
g1
I01
sg15
VL.remove(value) -> None -- remove first occurrence of value.\u000aRaises ValueError if the value is not present.
p256
sg5
Vremove
p257
sg7
L2L
sa(dp258
g1
I01
sg15
VL.reverse() -- reverse *IN PLACE*
p259
sg5
Vreverse
p260
sg7
L2L
sa(dp261
g1
I01
sg15
Vsetstate(state)
p262
sg5
g169
sg7
L2L
sa(dp263
g1
I01
sg15
VL.sort(key=None, reverse=False) -> None -- stable sort *IN PLACE*
p264
sg5
Vsort
p265
sg7
L2L
sa(dp266
g1
I01
sg5
g171
sg7
L5L
sa(dp267
g1
I01
sg15
Vstaticmeth(*args, **kw)
p268
sg5
Vstaticmeth
p269
sg7
L2L
sasg15
Nsg5
Vspamlist
p270
sg7
L3L
sasg15
Vxxsubtype is an example module showing how to subtype builtin types from C.\u000atest_descr.py in the standard test suite requires it in order to complete.\u000aIf you don't care about the examples, and don't intend to run the Python\u000atest suite, you can recompile Python without Modules/xxsubtype.c.
p271
sg5
Vxxsubtype
p272
sg7
L1L
s.