(dp0
S'doc'
p1
S"This module provides access to the Unix password database.\nIt is available on all Unix versions.\n\nPassword database entries are reported as 7-tuples containing the following\nitems from the password database (see `<pwd.h>'), in order:\npw_name, pw_passwd, pw_uid, pw_gid, pw_gecos, pw_dir, pw_shell.\nThe uid and gid items are integers, all others are strings. An\nexception is raised if the entry asked for cannot be found."
p2
sS'is_builtin'
p3
I01
sS'childs'
p4
(lp5
(dp6
g3
I01
sS'type'
p7
I5
sS'name'
p8
S'__doc__'
p9
sa(dp10
g3
I01
sg7
I5
sg8
S'__name__'
p11
sa(dp12
g3
I01
sg7
I5
sg8
S'__package__'
p13
sa(dp14
g1
S'getpwall() -> list_of_entries\nReturn a list of all available password database entries, in arbitrary order.\nSee help(pwd) for more on password database entries.'
p15
sg3
I01
sg7
I2
sg8
S'getpwall'
p16
sa(dp17
g1
S'getpwnam(name) -> (pw_name,pw_passwd,pw_uid,\n                    pw_gid,pw_gecos,pw_dir,pw_shell)\nReturn the password database entry for the given user name.\nSee help(pwd) for more on password database entries.'
p18
sg3
I01
sg7
I2
sg8
S'getpwnam'
p19
sa(dp20
g1
S'getpwuid(uid) -> (pw_name,pw_passwd,pw_uid,\n                  pw_gid,pw_gecos,pw_dir,pw_shell)\nReturn the password database entry for the given numeric user ID.\nSee help(pwd) for more on password database entries.'
p21
sg3
I01
sg7
I2
sg8
S'getpwuid'
p22
sa(dp23
g1
S'pwd.struct_passwd: Results from getpw*() routines.\n\nThis object may be accessed either as a tuple of\n  (pw_name,pw_passwd,pw_uid,pw_gid,pw_gecos,pw_dir,pw_shell)\nor via the object attributes as named in the above tuple.'
p24
sg3
I01
sg4
(lp25
(dp26
g3
I01
sg7
I5
sg8
S'__add__'
p27
sa(dp28
g3
I01
sg7
I5
sg8
S'__contains__'
p29
sa(dp30
g3
I01
sg7
I5
sg8
S'__delattr__'
p31
sa(dp32
g3
I01
sg7
I5
sg8
g9
sa(dp33
g3
I01
sg7
I5
sg8
S'__eq__'
p34
sa(dp35
g1
S'default object formatter'
p36
sg3
I01
sg7
I2
sg8
S'__format__'
p37
sa(dp38
g3
I01
sg7
I5
sg8
S'__ge__'
p39
sa(dp40
g3
I01
sg7
I5
sg8
S'__getattribute__'
p41
sa(dp42
g3
I01
sg7
I5
sg8
S'__getitem__'
p43
sa(dp44
g3
I01
sg7
I5
sg8
S'__getslice__'
p45
sa(dp46
g3
I01
sg7
I5
sg8
S'__gt__'
p47
sa(dp48
g3
I01
sg7
I5
sg8
S'__hash__'
p49
sa(dp50
g3
I01
sg7
I5
sg8
S'__init__'
p51
sa(dp52
g3
I01
sg7
I5
sg8
S'__le__'
p53
sa(dp54
g3
I01
sg7
I5
sg8
S'__len__'
p55
sa(dp56
g3
I01
sg7
I5
sg8
S'__lt__'
p57
sa(dp58
g3
I01
sg7
I5
sg8
S'__mul__'
p59
sa(dp60
g3
I01
sg7
I5
sg8
S'__ne__'
p61
sa(dp62
g1
S'T.__new__(S, ...) -> a new object with type S, a subtype of T'
p63
sg3
I01
sg7
I2
sg8
S'__new__'
p64
sa(dp65
g1
Nsg3
I01
sg7
I2
sg8
S'__reduce__'
p66
sa(dp67
g1
S'helper for pickle'
p68
sg3
I01
sg7
I2
sg8
S'__reduce_ex__'
p69
sa(dp70
g3
I01
sg7
I5
sg8
S'__repr__'
p71
sa(dp72
g3
I01
sg7
I5
sg8
S'__rmul__'
p73
sa(dp74
g3
I01
sg7
I5
sg8
S'__setattr__'
p75
sa(dp76
g1
S'__sizeof__() -> int\nsize of object in memory, in bytes'
p77
sg3
I01
sg7
I2
sg8
S'__sizeof__'
p78
sa(dp79
g3
I01
sg7
I5
sg8
S'__str__'
p80
sa(dp81
g1
S'Abstract classes can override this to customize issubclass().\n\nThis is invoked early on by abc.ABCMeta.__subclasscheck__().\nIt should return True, False or NotImplemented.  If it returns\nNotImplemented, the normal algorithm is used.  Otherwise, it\noverrides the normal algorithm (and the outcome is cached).\n'
p82
sg3
I01
sg7
I2
sg8
S'__subclasshook__'
p83
sa(dp84
g3
I01
sg7
I5
sg8
S'n_fields'
p85
sa(dp86
g3
I01
sg7
I5
sg8
S'n_sequence_fields'
p87
sa(dp88
g3
I01
sg7
I5
sg8
S'n_unnamed_fields'
p89
sa(dp90
g3
I01
sg7
I5
sg8
S'pw_dir'
p91
sa(dp92
g3
I01
sg7
I5
sg8
S'pw_gecos'
p93
sa(dp94
g3
I01
sg7
I5
sg8
S'pw_gid'
p95
sa(dp96
g3
I01
sg7
I5
sg8
S'pw_name'
p97
sa(dp98
g3
I01
sg7
I5
sg8
S'pw_passwd'
p99
sa(dp100
g3
I01
sg7
I5
sg8
S'pw_shell'
p101
sa(dp102
g3
I01
sg7
I5
sg8
S'pw_uid'
p103
sasg7
I3
sg8
S'struct_passwd'
p104
sa(dp105
g1
S'pwd.struct_passwd: Results from getpw*() routines.\n\nThis object may be accessed either as a tuple of\n  (pw_name,pw_passwd,pw_uid,pw_gid,pw_gecos,pw_dir,pw_shell)\nor via the object attributes as named in the above tuple.'
p106
sg3
I01
sg4
(lp107
(dp108
g3
I01
sg7
I5
sg8
g27
sa(dp109
g3
I01
sg7
I5
sg8
g29
sa(dp110
g3
I01
sg7
I5
sg8
g31
sa(dp111
g3
I01
sg7
I5
sg8
g9
sa(dp112
g3
I01
sg7
I5
sg8
g34
sa(dp113
g1
S'default object formatter'
p114
sg3
I01
sg7
I2
sg8
g37
sa(dp115
g3
I01
sg7
I5
sg8
g39
sa(dp116
g3
I01
sg7
I5
sg8
g41
sa(dp117
g3
I01
sg7
I5
sg8
g43
sa(dp118
g3
I01
sg7
I5
sg8
g45
sa(dp119
g3
I01
sg7
I5
sg8
g47
sa(dp120
g3
I01
sg7
I5
sg8
g49
sa(dp121
g3
I01
sg7
I5
sg8
g51
sa(dp122
g3
I01
sg7
I5
sg8
g53
sa(dp123
g3
I01
sg7
I5
sg8
g55
sa(dp124
g3
I01
sg7
I5
sg8
g57
sa(dp125
g3
I01
sg7
I5
sg8
g59
sa(dp126
g3
I01
sg7
I5
sg8
g61
sa(dp127
g1
S'T.__new__(S, ...) -> a new object with type S, a subtype of T'
p128
sg3
I01
sg7
I2
sg8
g64
sa(dp129
g1
Nsg3
I01
sg7
I2
sg8
g66
sa(dp130
g1
S'helper for pickle'
p131
sg3
I01
sg7
I2
sg8
g69
sa(dp132
g3
I01
sg7
I5
sg8
g71
sa(dp133
g3
I01
sg7
I5
sg8
g73
sa(dp134
g3
I01
sg7
I5
sg8
g75
sa(dp135
g1
S'__sizeof__() -> int\nsize of object in memory, in bytes'
p136
sg3
I01
sg7
I2
sg8
g78
sa(dp137
g3
I01
sg7
I5
sg8
g80
sa(dp138
g1
S'Abstract classes can override this to customize issubclass().\n\nThis is invoked early on by abc.ABCMeta.__subclasscheck__().\nIt should return True, False or NotImplemented.  If it returns\nNotImplemented, the normal algorithm is used.  Otherwise, it\noverrides the normal algorithm (and the outcome is cached).\n'
p139
sg3
I01
sg7
I2
sg8
g83
sa(dp140
g3
I01
sg7
I5
sg8
g85
sa(dp141
g3
I01
sg7
I5
sg8
g87
sa(dp142
g3
I01
sg7
I5
sg8
g89
sa(dp143
g3
I01
sg7
I5
sg8
g91
sa(dp144
g3
I01
sg7
I5
sg8
g93
sa(dp145
g3
I01
sg7
I5
sg8
g95
sa(dp146
g3
I01
sg7
I5
sg8
g97
sa(dp147
g3
I01
sg7
I5
sg8
g99
sa(dp148
g3
I01
sg7
I5
sg8
g101
sa(dp149
g3
I01
sg7
I5
sg8
g103
sasg7
I3
sg8
S'struct_pwent'
p150
sasg7
I1
sg8
S'pwd'
p151
s.