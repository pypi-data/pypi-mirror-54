(dp0
Vis_builtin
p1
I01
sVchilds
p2
(lp3
(dp4
g1
I01
sg2
(lp5
(dp6
g1
I01
sVname
p7
V__cause__
p8
sVtype
p9
L5L
sa(dp10
g1
I01
sg7
V__context__
p11
sg9
L5L
sa(dp12
g1
I01
sg7
V__delattr__
p13
sg9
L5L
sa(dp14
g1
I01
sg7
V__dict__
p15
sg9
L5L
sa(dp16
g1
I01
sVdoc
p17
V__dir__() -> list\u000adefault dir() implementation
p18
sg7
V__dir__
p19
sg9
L2L
sa(dp20
g1
I01
sg7
V__doc__
p21
sg9
L5L
sa(dp22
g1
I01
sg7
V__eq__
p23
sg9
L5L
sa(dp24
g1
I01
sg17
Vdefault object formatter
p25
sg7
V__format__
p26
sg9
L2L
sa(dp27
g1
I01
sg7
V__ge__
p28
sg9
L5L
sa(dp29
g1
I01
sg7
V__getattribute__
p30
sg9
L5L
sa(dp31
g1
I01
sg7
V__gt__
p32
sg9
L5L
sa(dp33
g1
I01
sg7
V__hash__
p34
sg9
L5L
sa(dp35
g1
I01
sg7
V__init__
p36
sg9
L5L
sa(dp37
g1
I01
sg7
V__le__
p38
sg9
L5L
sa(dp39
g1
I01
sg7
V__lt__
p40
sg9
L5L
sa(dp41
g1
I01
sg7
V__module__
p42
sg9
L5L
sa(dp43
g1
I01
sg7
V__ne__
p44
sg9
L5L
sa(dp45
g1
I01
sg17
VCreate and return a new object.  See help(type) for accurate signature.
p46
sg7
V__new__
p47
sg9
L2L
sa(dp48
g1
I01
sg17
Nsg7
V__reduce__
p49
sg9
L2L
sa(dp50
g1
I01
sg17
Vhelper for pickle
p51
sg7
V__reduce_ex__
p52
sg9
L2L
sa(dp53
g1
I01
sg7
V__repr__
p54
sg9
L5L
sa(dp55
g1
I01
sg7
V__setattr__
p56
sg9
L5L
sa(dp57
g1
I01
sg17
Nsg7
V__setstate__
p58
sg9
L2L
sa(dp59
g1
I01
sg17
V__sizeof__() -> int\u000asize of object in memory, in bytes
p60
sg7
V__sizeof__
p61
sg9
L2L
sa(dp62
g1
I01
sg7
V__str__
p63
sg9
L5L
sa(dp64
g1
I01
sg17
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p65
sg7
V__subclasshook__
p66
sg9
L2L
sa(dp67
g1
I01
sg7
V__suppress_context__
p68
sg9
L5L
sa(dp69
g1
I01
sg7
V__traceback__
p70
sg9
L5L
sa(dp71
g1
I01
sg7
V__weakref__
p72
sg9
L5L
sa(dp73
g1
I01
sg7
Vargs
p74
sg9
L5L
sa(dp75
g1
I01
sg17
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p76
sg7
Vwith_traceback
p77
sg9
L2L
sasg17
Nsg7
VPickleError
p78
sg9
L3L
sa(dp79
g1
I01
sg2
(lp80
(dp81
g1
I01
sg7
g13
sg9
L5L
sa(dp82
g1
I01
sg17
V__dir__() -> list\u000adefault dir() implementation
p83
sg7
g19
sg9
L2L
sa(dp84
g1
I01
sg7
g21
sg9
L5L
sa(dp85
g1
I01
sg7
g23
sg9
L5L
sa(dp86
g1
I01
sg17
Vdefault object formatter
p87
sg7
g26
sg9
L2L
sa(dp88
g1
I01
sg7
g28
sg9
L5L
sa(dp89
g1
I01
sg7
g30
sg9
L5L
sa(dp90
g1
I01
sg7
g32
sg9
L5L
sa(dp91
g1
I01
sg7
g34
sg9
L5L
sa(dp92
g1
I01
sg7
g36
sg9
L5L
sa(dp93
g1
I01
sg7
g38
sg9
L5L
sa(dp94
g1
I01
sg7
g40
sg9
L5L
sa(dp95
g1
I01
sg7
g44
sg9
L5L
sa(dp96
g1
I01
sg17
VCreate and return a new object.  See help(type) for accurate signature.
p97
sg7
g47
sg9
L2L
sa(dp98
g1
I01
sg17
Vhelper for pickle
p99
sg7
g49
sg9
L2L
sa(dp100
g1
I01
sg17
Vhelper for pickle
p101
sg7
g52
sg9
L2L
sa(dp102
g1
I01
sg7
g54
sg9
L5L
sa(dp103
g1
I01
sg7
g56
sg9
L5L
sa(dp104
g1
I01
sg17
VReturns size in memory, in bytes.
p105
sg7
g61
sg9
L2L
sa(dp106
g1
I01
sg7
g63
sg9
L5L
sa(dp107
g1
I01
sg17
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p108
sg7
g66
sg9
L2L
sa(dp109
g1
I01
sg7
Vbin
p110
sg9
L5L
sa(dp111
g1
I01
sg17
VClears the pickler's "memo".\u000a\u000aThe memo is the data structure that remembers which objects the\u000apickler has already seen, so that shared or recursive objects are\u000apickled by reference and not by value.  This method is useful when\u000are-using picklers.
p112
sg7
Vclear_memo
p113
sg9
L2L
sa(dp114
g1
I01
sg7
Vdispatch_table
p115
sg9
L5L
sa(dp116
g1
I01
sg17
VWrite a pickled representation of the given object to the open file.
p117
sg7
Vdump
p118
sg9
L2L
sa(dp119
g1
I01
sg7
Vfast
p120
sg9
L5L
sa(dp121
g1
I01
sg7
Vmemo
p122
sg9
L5L
sa(dp123
g1
I01
sg7
Vpersistent_id
p124
sg9
L5L
sasg17
VThis takes a binary file for writing a pickle data stream.\u000a\u000aThe optional *protocol* argument tells the pickler to use the given\u000aprotocol; supported protocols are 0, 1, 2, 3 and 4.  The default\u000aprotocol is 3; a backward-incompatible protocol designed for Python 3.\u000a\u000aSpecifying a negative protocol version selects the highest protocol\u000aversion supported.  The higher the protocol used, the more recent the\u000aversion of Python needed to read the pickle produced.\u000a\u000aThe *file* argument must have a write() method that accepts a single\u000abytes argument. It can thus be a file object opened for binary\u000awriting, an io.BytesIO instance, or any other custom object that meets\u000athis interface.\u000a\u000aIf *fix_imports* is True and protocol is less than 3, pickle will try\u000ato map the new Python 3 names to the old module names used in Python\u000a2, so that the pickle data stream is readable with Python 2.
p125
sg7
VPickler
p126
sg9
L3L
sa(dp127
g1
I01
sg2
(lp128
(dp129
g1
I01
sg7
g8
sg9
L5L
sa(dp130
g1
I01
sg7
g11
sg9
L5L
sa(dp131
g1
I01
sg7
g13
sg9
L5L
sa(dp132
g1
I01
sg7
g15
sg9
L5L
sa(dp133
g1
I01
sg17
V__dir__() -> list\u000adefault dir() implementation
p134
sg7
g19
sg9
L2L
sa(dp135
g1
I01
sg7
g21
sg9
L5L
sa(dp136
g1
I01
sg7
g23
sg9
L5L
sa(dp137
g1
I01
sg17
Vdefault object formatter
p138
sg7
g26
sg9
L2L
sa(dp139
g1
I01
sg7
g28
sg9
L5L
sa(dp140
g1
I01
sg7
g30
sg9
L5L
sa(dp141
g1
I01
sg7
g32
sg9
L5L
sa(dp142
g1
I01
sg7
g34
sg9
L5L
sa(dp143
g1
I01
sg7
g36
sg9
L5L
sa(dp144
g1
I01
sg7
g38
sg9
L5L
sa(dp145
g1
I01
sg7
g40
sg9
L5L
sa(dp146
g1
I01
sg7
g42
sg9
L5L
sa(dp147
g1
I01
sg7
g44
sg9
L5L
sa(dp148
g1
I01
sg17
VCreate and return a new object.  See help(type) for accurate signature.
p149
sg7
g47
sg9
L2L
sa(dp150
g1
I01
sg17
Nsg7
g49
sg9
L2L
sa(dp151
g1
I01
sg17
Vhelper for pickle
p152
sg7
g52
sg9
L2L
sa(dp153
g1
I01
sg7
g54
sg9
L5L
sa(dp154
g1
I01
sg7
g56
sg9
L5L
sa(dp155
g1
I01
sg17
Nsg7
g58
sg9
L2L
sa(dp156
g1
I01
sg17
V__sizeof__() -> int\u000asize of object in memory, in bytes
p157
sg7
g61
sg9
L2L
sa(dp158
g1
I01
sg7
g63
sg9
L5L
sa(dp159
g1
I01
sg17
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p160
sg7
g66
sg9
L2L
sa(dp161
g1
I01
sg7
g68
sg9
L5L
sa(dp162
g1
I01
sg7
g70
sg9
L5L
sa(dp163
g1
I01
sg7
g72
sg9
L5L
sa(dp164
g1
I01
sg7
g74
sg9
L5L
sa(dp165
g1
I01
sg17
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p166
sg7
g77
sg9
L2L
sasg17
Nsg7
VPicklingError
p167
sg9
L3L
sa(dp168
g1
I01
sg2
(lp169
(dp170
g1
I01
sg7
g13
sg9
L5L
sa(dp171
g1
I01
sg17
V__dir__() -> list\u000adefault dir() implementation
p172
sg7
g19
sg9
L2L
sa(dp173
g1
I01
sg7
g21
sg9
L5L
sa(dp174
g1
I01
sg7
g23
sg9
L5L
sa(dp175
g1
I01
sg17
Vdefault object formatter
p176
sg7
g26
sg9
L2L
sa(dp177
g1
I01
sg7
g28
sg9
L5L
sa(dp178
g1
I01
sg7
g30
sg9
L5L
sa(dp179
g1
I01
sg7
g32
sg9
L5L
sa(dp180
g1
I01
sg7
g34
sg9
L5L
sa(dp181
g1
I01
sg7
g36
sg9
L5L
sa(dp182
g1
I01
sg7
g38
sg9
L5L
sa(dp183
g1
I01
sg7
g40
sg9
L5L
sa(dp184
g1
I01
sg7
g44
sg9
L5L
sa(dp185
g1
I01
sg17
VCreate and return a new object.  See help(type) for accurate signature.
p186
sg7
g47
sg9
L2L
sa(dp187
g1
I01
sg17
Vhelper for pickle
p188
sg7
g49
sg9
L2L
sa(dp189
g1
I01
sg17
Vhelper for pickle
p190
sg7
g52
sg9
L2L
sa(dp191
g1
I01
sg7
g54
sg9
L5L
sa(dp192
g1
I01
sg7
g56
sg9
L5L
sa(dp193
g1
I01
sg17
VReturns size in memory, in bytes.
p194
sg7
g61
sg9
L2L
sa(dp195
g1
I01
sg7
g63
sg9
L5L
sa(dp196
g1
I01
sg17
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p197
sg7
g66
sg9
L2L
sa(dp198
g1
I01
sg17
VReturn an object from a specified module.\u000a\u000aIf necessary, the module will be imported. Subclasses may override\u000athis method (e.g. to restrict unpickling of arbitrary classes and\u000afunctions).\u000a\u000aThis method is called whenever a class or a function object is\u000aneeded.  Both arguments passed are str objects.
p199
sg7
Vfind_class
p200
sg9
L2L
sa(dp201
g1
I01
sg17
VLoad a pickle.\u000a\u000aRead a pickled object representation from the open file object given\u000ain the constructor, and return the reconstituted object hierarchy\u000aspecified therein.
p202
sg7
Vload
p203
sg9
L2L
sa(dp204
g1
I01
sg7
g122
sg9
L5L
sa(dp205
g1
I01
sg7
Vpersistent_load
p206
sg9
L5L
sasg17
VThis takes a binary file for reading a pickle data stream.\u000a\u000aThe protocol version of the pickle is detected automatically, so no\u000aprotocol argument is needed.  Bytes past the pickled object's\u000arepresentation are ignored.\u000a\u000aThe argument *file* must have two methods, a read() method that takes\u000aan integer argument, and a readline() method that requires no\u000aarguments.  Both methods should return bytes.  Thus *file* can be a\u000abinary file object opened for reading, an io.BytesIO object, or any\u000aother custom object that meets this interface.\u000a\u000aOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\u000awhich are used to control compatibility support for pickle stream\u000agenerated by Python 2.  If *fix_imports* is True, pickle will try to\u000amap the old Python 2 names to the new names used in Python 3.  The\u000a*encoding* and *errors* tell pickle how to decode 8-bit string\u000ainstances pickled by Python 2; these default to 'ASCII' and 'strict',\u000arespectively.  The *encoding* can be 'bytes' to read these 8-bit\u000astring instances as bytes objects.
p207
sg7
VUnpickler
p208
sg9
L3L
sa(dp209
g1
I01
sg2
(lp210
(dp211
g1
I01
sg7
g8
sg9
L5L
sa(dp212
g1
I01
sg7
g11
sg9
L5L
sa(dp213
g1
I01
sg7
g13
sg9
L5L
sa(dp214
g1
I01
sg7
g15
sg9
L5L
sa(dp215
g1
I01
sg17
V__dir__() -> list\u000adefault dir() implementation
p216
sg7
g19
sg9
L2L
sa(dp217
g1
I01
sg7
g21
sg9
L5L
sa(dp218
g1
I01
sg7
g23
sg9
L5L
sa(dp219
g1
I01
sg17
Vdefault object formatter
p220
sg7
g26
sg9
L2L
sa(dp221
g1
I01
sg7
g28
sg9
L5L
sa(dp222
g1
I01
sg7
g30
sg9
L5L
sa(dp223
g1
I01
sg7
g32
sg9
L5L
sa(dp224
g1
I01
sg7
g34
sg9
L5L
sa(dp225
g1
I01
sg7
g36
sg9
L5L
sa(dp226
g1
I01
sg7
g38
sg9
L5L
sa(dp227
g1
I01
sg7
g40
sg9
L5L
sa(dp228
g1
I01
sg7
g42
sg9
L5L
sa(dp229
g1
I01
sg7
g44
sg9
L5L
sa(dp230
g1
I01
sg17
VCreate and return a new object.  See help(type) for accurate signature.
p231
sg7
g47
sg9
L2L
sa(dp232
g1
I01
sg17
Nsg7
g49
sg9
L2L
sa(dp233
g1
I01
sg17
Vhelper for pickle
p234
sg7
g52
sg9
L2L
sa(dp235
g1
I01
sg7
g54
sg9
L5L
sa(dp236
g1
I01
sg7
g56
sg9
L5L
sa(dp237
g1
I01
sg17
Nsg7
g58
sg9
L2L
sa(dp238
g1
I01
sg17
V__sizeof__() -> int\u000asize of object in memory, in bytes
p239
sg7
g61
sg9
L2L
sa(dp240
g1
I01
sg7
g63
sg9
L5L
sa(dp241
g1
I01
sg17
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p242
sg7
g66
sg9
L2L
sa(dp243
g1
I01
sg7
g68
sg9
L5L
sa(dp244
g1
I01
sg7
g70
sg9
L5L
sa(dp245
g1
I01
sg7
g72
sg9
L5L
sa(dp246
g1
I01
sg7
g74
sg9
L5L
sa(dp247
g1
I01
sg17
VException.with_traceback(tb) --\u000a    set self.__traceback__ to tb and return self.
p248
sg7
g77
sg9
L2L
sasg17
Nsg7
VUnpicklingError
p249
sg9
L3L
sa(dp250
g1
I01
sg7
g21
sg9
L5L
sa(dp251
g1
I01
sg2
(lp252
(dp253
g1
I01
sg7
g13
sg9
L5L
sa(dp254
g1
I01
sg7
g15
sg9
L5L
sa(dp255
g1
I01
sg17
V__dir__() -> list\u000adefault dir() implementation
p256
sg7
g19
sg9
L2L
sa(dp257
g1
I01
sg7
g21
sg9
L5L
sa(dp258
g1
I01
sg7
g23
sg9
L5L
sa(dp259
g1
I01
sg17
Vdefault object formatter
p260
sg7
g26
sg9
L2L
sa(dp261
g1
I01
sg7
g28
sg9
L5L
sa(dp262
g1
I01
sg7
g30
sg9
L5L
sa(dp263
g1
I01
sg7
g32
sg9
L5L
sa(dp264
g1
I01
sg7
g34
sg9
L5L
sa(dp265
g1
I01
sg7
g36
sg9
L5L
sa(dp266
g1
I01
sg7
g38
sg9
L5L
sa(dp267
g1
I01
sg7
g40
sg9
L5L
sa(dp268
g1
I01
sg7
g42
sg9
L5L
sa(dp269
g1
I01
sg7
g44
sg9
L5L
sa(dp270
g1
I01
sg17
VCreate and return a new object.  See help(type) for accurate signature.
p271
sg7
g47
sg9
L2L
sa(dp272
g1
I01
sg17
Vhelper for pickle
p273
sg7
g49
sg9
L2L
sa(dp274
g1
I01
sg17
Vhelper for pickle
p275
sg7
g52
sg9
L2L
sa(dp276
g1
I01
sg7
g54
sg9
L5L
sa(dp277
g1
I01
sg7
g56
sg9
L5L
sa(dp278
g1
I01
sg17
V__sizeof__() -> int\u000asize of object in memory, in bytes
p279
sg7
g61
sg9
L2L
sa(dp280
g1
I01
sg7
g63
sg9
L5L
sa(dp281
g1
I01
sg17
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p282
sg7
g66
sg9
L2L
sa(dp283
g1
I01
sg7
g72
sg9
L5L
sa(dp284
g1
I01
sg7
Vcreate_module
p285
sg9
L5L
sa(dp286
g1
I01
sg7
Vexec_module
p287
sg9
L5L
sa(dp288
g1
I01
sg7
Vfind_module
p289
sg9
L5L
sa(dp290
g1
I01
sg7
Vfind_spec
p291
sg9
L5L
sa(dp292
g1
I01
sg7
Vget_code
p293
sg9
L5L
sa(dp294
g1
I01
sg7
Vget_source
p295
sg9
L5L
sa(dp296
g1
I01
sg7
Vis_package
p297
sg9
L5L
sa(dp298
g1
I01
sg7
Vload_module
p299
sg9
L5L
sa(dp300
g1
I01
sg7
Vmodule_repr
p301
sg9
L5L
sasg17
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p302
sg7
V__loader__
p303
sg9
L3L
sa(dp304
g1
I01
sg7
V__name__
p305
sg9
L5L
sa(dp306
g1
I01
sg7
V__package__
p307
sg9
L5L
sa(dp308
g1
I01
sg7
V__spec__
p309
sg9
L5L
sa(dp310
g1
I01
sg17
VWrite a pickled representation of obj to the open file object file.\u000a\u000aThis is equivalent to ``Pickler(file, protocol).dump(obj)``, but may\u000abe more efficient.\u000a\u000aThe optional *protocol* argument tells the pickler to use the given\u000aprotocol supported protocols are 0, 1, 2, 3 and 4.  The default\u000aprotocol is 3; a backward-incompatible protocol designed for Python 3.\u000a\u000aSpecifying a negative protocol version selects the highest protocol\u000aversion supported.  The higher the protocol used, the more recent the\u000aversion of Python needed to read the pickle produced.\u000a\u000aThe *file* argument must have a write() method that accepts a single\u000abytes argument.  It can thus be a file object opened for binary\u000awriting, an io.BytesIO instance, or any other custom object that meets\u000athis interface.\u000a\u000aIf *fix_imports* is True and protocol is less than 3, pickle will try\u000ato map the new Python 3 names to the old module names used in Python\u000a2, so that the pickle data stream is readable with Python 2.
p311
sg7
g118
sg9
L2L
sa(dp312
g1
I01
sg17
VReturn the pickled representation of the object as a bytes object.\u000a\u000aThe optional *protocol* argument tells the pickler to use the given\u000aprotocol; supported protocols are 0, 1, 2, 3 and 4.  The default\u000aprotocol is 3; a backward-incompatible protocol designed for Python 3.\u000a\u000aSpecifying a negative protocol version selects the highest protocol\u000aversion supported.  The higher the protocol used, the more recent the\u000aversion of Python needed to read the pickle produced.\u000a\u000aIf *fix_imports* is True and *protocol* is less than 3, pickle will\u000atry to map the new Python 3 names to the old module names used in\u000aPython 2, so that the pickle data stream is readable with Python 2.
p313
sg7
Vdumps
p314
sg9
L2L
sa(dp315
g1
I01
sg17
VRead and return an object from the pickle data stored in a file.\u000a\u000aThis is equivalent to ``Unpickler(file).load()``, but may be more\u000aefficient.\u000a\u000aThe protocol version of the pickle is detected automatically, so no\u000aprotocol argument is needed.  Bytes past the pickled object's\u000arepresentation are ignored.\u000a\u000aThe argument *file* must have two methods, a read() method that takes\u000aan integer argument, and a readline() method that requires no\u000aarguments.  Both methods should return bytes.  Thus *file* can be a\u000abinary file object opened for reading, an io.BytesIO object, or any\u000aother custom object that meets this interface.\u000a\u000aOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\u000awhich are used to control compatibility support for pickle stream\u000agenerated by Python 2.  If *fix_imports* is True, pickle will try to\u000amap the old Python 2 names to the new names used in Python 3.  The\u000a*encoding* and *errors* tell pickle how to decode 8-bit string\u000ainstances pickled by Python 2; these default to 'ASCII' and 'strict',\u000arespectively.  The *encoding* can be 'bytes' to read these 8-bit\u000astring instances as bytes objects.
p316
sg7
g203
sg9
L2L
sa(dp317
g1
I01
sg17
VRead and return an object from the given pickle data.\u000a\u000aThe protocol version of the pickle is detected automatically, so no\u000aprotocol argument is needed.  Bytes past the pickled object's\u000arepresentation are ignored.\u000a\u000aOptional keyword arguments are *fix_imports*, *encoding* and *errors*,\u000awhich are used to control compatibility support for pickle stream\u000agenerated by Python 2.  If *fix_imports* is True, pickle will try to\u000amap the old Python 2 names to the new names used in Python 3.  The\u000a*encoding* and *errors* tell pickle how to decode 8-bit string\u000ainstances pickled by Python 2; these default to 'ASCII' and 'strict',\u000arespectively.  The *encoding* can be 'bytes' to read these 8-bit\u000astring instances as bytes objects.
p318
sg7
Vloads
p319
sg9
L2L
sasg17
VOptimized C implementation for the Python pickle module.
p320
sg7
V_pickle
p321
sg9
L1L
s.