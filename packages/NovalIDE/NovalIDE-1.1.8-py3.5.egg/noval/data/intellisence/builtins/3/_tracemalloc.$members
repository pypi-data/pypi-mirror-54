(dp0
Vis_builtin
p1
I01
sVchilds
p2
(lp3
(dp4
g1
I01
sVname
p5
V__doc__
p6
sVtype
p7
L5L
sa(dp8
g1
I01
sg2
(lp9
(dp10
g1
I01
sg5
V__delattr__
p11
sg7
L5L
sa(dp12
g1
I01
sg5
V__dict__
p13
sg7
L5L
sa(dp14
g1
I01
sVdoc
p15
V__dir__() -> list\u000adefault dir() implementation
p16
sg5
V__dir__
p17
sg7
L2L
sa(dp18
g1
I01
sg5
g6
sg7
L5L
sa(dp19
g1
I01
sg5
V__eq__
p20
sg7
L5L
sa(dp21
g1
I01
sg15
Vdefault object formatter
p22
sg5
V__format__
p23
sg7
L2L
sa(dp24
g1
I01
sg5
V__ge__
p25
sg7
L5L
sa(dp26
g1
I01
sg5
V__getattribute__
p27
sg7
L5L
sa(dp28
g1
I01
sg5
V__gt__
p29
sg7
L5L
sa(dp30
g1
I01
sg5
V__hash__
p31
sg7
L5L
sa(dp32
g1
I01
sg5
V__init__
p33
sg7
L5L
sa(dp34
g1
I01
sg5
V__le__
p35
sg7
L5L
sa(dp36
g1
I01
sg5
V__lt__
p37
sg7
L5L
sa(dp38
g1
I01
sg5
V__module__
p39
sg7
L5L
sa(dp40
g1
I01
sg5
V__ne__
p41
sg7
L5L
sa(dp42
g1
I01
sg15
VCreate and return a new object.  See help(type) for accurate signature.
p43
sg5
V__new__
p44
sg7
L2L
sa(dp45
g1
I01
sg15
Vhelper for pickle
p46
sg5
V__reduce__
p47
sg7
L2L
sa(dp48
g1
I01
sg15
Vhelper for pickle
p49
sg5
V__reduce_ex__
p50
sg7
L2L
sa(dp51
g1
I01
sg5
V__repr__
p52
sg7
L5L
sa(dp53
g1
I01
sg5
V__setattr__
p54
sg7
L5L
sa(dp55
g1
I01
sg15
V__sizeof__() -> int\u000asize of object in memory, in bytes
p56
sg5
V__sizeof__
p57
sg7
L2L
sa(dp58
g1
I01
sg5
V__str__
p59
sg7
L5L
sa(dp60
g1
I01
sg15
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p61
sg5
V__subclasshook__
p62
sg7
L2L
sa(dp63
g1
I01
sg5
V__weakref__
p64
sg7
L5L
sa(dp65
g1
I01
sg5
Vcreate_module
p66
sg7
L5L
sa(dp67
g1
I01
sg5
Vexec_module
p68
sg7
L5L
sa(dp69
g1
I01
sg5
Vfind_module
p70
sg7
L5L
sa(dp71
g1
I01
sg5
Vfind_spec
p72
sg7
L5L
sa(dp73
g1
I01
sg5
Vget_code
p74
sg7
L5L
sa(dp75
g1
I01
sg5
Vget_source
p76
sg7
L5L
sa(dp77
g1
I01
sg5
Vis_package
p78
sg7
L5L
sa(dp79
g1
I01
sg5
Vload_module
p80
sg7
L5L
sa(dp81
g1
I01
sg5
Vmodule_repr
p82
sg7
L5L
sasg15
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p83
sg5
V__loader__
p84
sg7
L3L
sa(dp85
g1
I01
sg5
V__name__
p86
sg7
L5L
sa(dp87
g1
I01
sg5
V__package__
p88
sg7
L5L
sa(dp89
g1
I01
sg5
V__spec__
p90
sg7
L5L
sa(dp91
g1
I01
sg15
V_get_object_traceback(obj)\u000a\u000aGet the traceback where the Python object obj was allocated.\u000aReturn a tuple of (filename: str, lineno: int) tuples.\u000a\u000aReturn None if the tracemalloc module is disabled or did not\u000atrace the allocation of the object.
p92
sg5
V_get_object_traceback
p93
sg7
L2L
sa(dp94
g1
I01
sg15
V_get_traces() -> list\u000a\u000aGet traces of all memory blocks allocated by Python.\u000aReturn a list of (size: int, traceback: tuple) tuples.\u000atraceback is a tuple of (filename: str, lineno: int) tuples.\u000a\u000aReturn an empty list if the tracemalloc module is disabled.
p95
sg5
V_get_traces
p96
sg7
L2L
sa(dp97
g1
I01
sg15
Vclear_traces()\u000a\u000aClear traces of memory blocks allocated by Python.
p98
sg5
Vclear_traces
p99
sg7
L2L
sa(dp100
g1
I01
sg15
Vget_traceback_limit() -> int\u000a\u000aGet the maximum number of frames stored in the traceback\u000aof a trace.\u000a\u000aBy default, a trace of an allocated memory block only stores\u000athe most recent frame: the limit is 1.
p101
sg5
Vget_traceback_limit
p102
sg7
L2L
sa(dp103
g1
I01
sg15
Vget_traced_memory() -> (int, int)\u000a\u000aGet the current size and peak size of memory blocks traced\u000aby the tracemalloc module as a tuple: (current: int, peak: int).
p104
sg5
Vget_traced_memory
p105
sg7
L2L
sa(dp106
g1
I01
sg15
Vget_tracemalloc_memory() -> int\u000a\u000aGet the memory usage in bytes of the tracemalloc module\u000aused internally to trace memory allocations.
p107
sg5
Vget_tracemalloc_memory
p108
sg7
L2L
sa(dp109
g1
I01
sg15
Vis_tracing()->bool\u000a\u000aTrue if the tracemalloc module is tracing Python memory allocations,\u000aFalse otherwise.
p110
sg5
Vis_tracing
p111
sg7
L2L
sa(dp112
g1
I01
sg15
Vstart(nframe: int=1)\u000a\u000aStart tracing Python memory allocations. Set also the maximum number \u000aof frames stored in the traceback of a trace to nframe.
p113
sg5
Vstart
p114
sg7
L2L
sa(dp115
g1
I01
sg15
Vstop()\u000a\u000aStop tracing Python memory allocations and clear traces\u000aof memory blocks allocated by Python.
p116
sg5
Vstop
p117
sg7
L2L
sasg15
VDebug module to trace memory blocks allocated by Python.
p118
sg5
V_tracemalloc
p119
sg7
L1L
s.