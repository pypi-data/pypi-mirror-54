(dp0
Vis_builtin
p1
I01
sVchilds
p2
(lp3
(dp4
g1
I01
sg2
(lp5
(dp6
g1
I01
sVdoc
p7
VTrue if D has a key k, else False.
p8
sVname
p9
V__contains__
p10
sVtype
p11
L2L
sa(dp12
g1
I01
sg9
V__delattr__
p13
sg11
L5L
sa(dp14
g1
I01
sg9
V__delitem__
p15
sg11
L5L
sa(dp16
g1
I01
sg9
V__dict__
p17
sg11
L5L
sa(dp18
g1
I01
sg7
V__dir__() -> list\u000adefault dir() implementation
p19
sg9
V__dir__
p20
sg11
L2L
sa(dp21
g1
I01
sg9
V__doc__
p22
sg11
L5L
sa(dp23
g1
I01
sg9
V__eq__
p24
sg11
L5L
sa(dp25
g1
I01
sg7
Vdefault object formatter
p26
sg9
V__format__
p27
sg11
L2L
sa(dp28
g1
I01
sg9
V__ge__
p29
sg11
L5L
sa(dp30
g1
I01
sg9
V__getattribute__
p31
sg11
L5L
sa(dp32
g1
I01
sg7
Vx.__getitem__(y) <==> x[y]
p33
sg9
V__getitem__
p34
sg11
L2L
sa(dp35
g1
I01
sg9
V__gt__
p36
sg11
L5L
sa(dp37
g1
I01
sg9
V__hash__
p38
sg11
L5L
sa(dp39
g1
I01
sg9
V__init__
p40
sg11
L5L
sa(dp41
g1
I01
sg9
V__iter__
p42
sg11
L5L
sa(dp43
g1
I01
sg9
V__le__
p44
sg11
L5L
sa(dp45
g1
I01
sg9
V__len__
p46
sg11
L5L
sa(dp47
g1
I01
sg9
V__lt__
p48
sg11
L5L
sa(dp49
g1
I01
sg9
V__ne__
p50
sg11
L5L
sa(dp51
g1
I01
sg7
VCreate and return a new object.  See help(type) for accurate signature.
p52
sg9
V__new__
p53
sg11
L2L
sa(dp54
g1
I01
sg7
VReturn state information for pickling
p55
sg9
V__reduce__
p56
sg11
L2L
sa(dp57
g1
I01
sg7
Vhelper for pickle
p58
sg9
V__reduce_ex__
p59
sg11
L2L
sa(dp60
g1
I01
sg9
V__repr__
p61
sg11
L5L
sa(dp62
g1
I01
sg7
Vod.__reversed__() <==> reversed(od)
p63
sg9
V__reversed__
p64
sg11
L2L
sa(dp65
g1
I01
sg9
V__setattr__
p66
sg11
L5L
sa(dp67
g1
I01
sg9
V__setitem__
p68
sg11
L5L
sa(dp69
g1
I01
sg7
Nsg9
V__sizeof__
p70
sg11
L2L
sa(dp71
g1
I01
sg9
V__str__
p72
sg11
L5L
sa(dp73
g1
I01
sg7
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p74
sg9
V__subclasshook__
p75
sg11
L2L
sa(dp76
g1
I01
sg7
Vod.clear() -> None.  Remove all items from od.
p77
sg9
Vclear
p78
sg11
L2L
sa(dp79
g1
I01
sg7
Vod.copy() -> a shallow copy of od
p80
sg9
Vcopy
p81
sg11
L2L
sa(dp82
g1
I01
sg7
VOD.fromkeys(S[, v]) -> New ordered dictionary with keys from S.\u000a        If not specified, the value defaults to None.\u000a\u000a        
p83
sg9
Vfromkeys
p84
sg11
L2L
sa(dp85
g1
I01
sg7
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p86
sg9
Vget
p87
sg11
L2L
sa(dp88
g1
I01
sg7
Nsg9
Vitems
p89
sg11
L2L
sa(dp90
g1
I01
sg7
Nsg9
Vkeys
p91
sg11
L2L
sa(dp92
g1
I01
sg7
VMove an existing element to the end (or beginning if last==False).\u000a\u000a        Raises KeyError if the element does not exist.\u000a        When last=True, acts like a fast version of self[key]=self.pop(key).\u000a\u000a        
p93
sg9
Vmove_to_end
p94
sg11
L2L
sa(dp95
g1
I01
sg7
Vod.pop(k[,d]) -> v, remove specified key and return the corresponding\u000a        value.  If key is not found, d is returned if given, otherwise KeyError\u000a        is raised.\u000a\u000a        
p96
sg9
Vpop
p97
sg11
L2L
sa(dp98
g1
I01
sg7
Vod.popitem() -> (k, v), return and remove a (key, value) pair.\u000a        Pairs are returned in LIFO order if last is true or FIFO order if false.\u000a\u000a        
p99
sg9
Vpopitem
p100
sg11
L2L
sa(dp101
g1
I01
sg7
Vod.setdefault(k[,d]) -> od.get(k,d), also set od[k]=d if k not in od
p102
sg9
Vsetdefault
p103
sg11
L2L
sa(dp104
g1
I01
sg7
Nsg9
Vupdate
p105
sg11
L2L
sa(dp106
g1
I01
sg7
Nsg9
Vvalues
p107
sg11
L2L
sasg7
VDictionary that remembers insertion order
p108
sg9
VOrderedDict
p109
sg11
L3L
sa(dp110
g1
I01
sg9
g22
sg11
L5L
sa(dp111
g1
I01
sg2
(lp112
(dp113
g1
I01
sg9
g13
sg11
L5L
sa(dp114
g1
I01
sg9
g17
sg11
L5L
sa(dp115
g1
I01
sg7
V__dir__() -> list\u000adefault dir() implementation
p116
sg9
g20
sg11
L2L
sa(dp117
g1
I01
sg9
g22
sg11
L5L
sa(dp118
g1
I01
sg9
g24
sg11
L5L
sa(dp119
g1
I01
sg7
Vdefault object formatter
p120
sg9
g27
sg11
L2L
sa(dp121
g1
I01
sg9
g29
sg11
L5L
sa(dp122
g1
I01
sg9
g31
sg11
L5L
sa(dp123
g1
I01
sg9
g36
sg11
L5L
sa(dp124
g1
I01
sg9
g38
sg11
L5L
sa(dp125
g1
I01
sg9
g40
sg11
L5L
sa(dp126
g1
I01
sg9
g44
sg11
L5L
sa(dp127
g1
I01
sg9
g48
sg11
L5L
sa(dp128
g1
I01
sg9
V__module__
p129
sg11
L5L
sa(dp130
g1
I01
sg9
g50
sg11
L5L
sa(dp131
g1
I01
sg7
VCreate and return a new object.  See help(type) for accurate signature.
p132
sg9
g53
sg11
L2L
sa(dp133
g1
I01
sg7
Vhelper for pickle
p134
sg9
g56
sg11
L2L
sa(dp135
g1
I01
sg7
Vhelper for pickle
p136
sg9
g59
sg11
L2L
sa(dp137
g1
I01
sg9
g61
sg11
L5L
sa(dp138
g1
I01
sg9
g66
sg11
L5L
sa(dp139
g1
I01
sg7
V__sizeof__() -> int\u000asize of object in memory, in bytes
p140
sg9
g70
sg11
L2L
sa(dp141
g1
I01
sg9
g72
sg11
L5L
sa(dp142
g1
I01
sg7
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p143
sg9
g75
sg11
L2L
sa(dp144
g1
I01
sg9
V__weakref__
p145
sg11
L5L
sa(dp146
g1
I01
sg9
Vcreate_module
p147
sg11
L5L
sa(dp148
g1
I01
sg9
Vexec_module
p149
sg11
L5L
sa(dp150
g1
I01
sg9
Vfind_module
p151
sg11
L5L
sa(dp152
g1
I01
sg9
Vfind_spec
p153
sg11
L5L
sa(dp154
g1
I01
sg9
Vget_code
p155
sg11
L5L
sa(dp156
g1
I01
sg9
Vget_source
p157
sg11
L5L
sa(dp158
g1
I01
sg9
Vis_package
p159
sg11
L5L
sa(dp160
g1
I01
sg9
Vload_module
p161
sg11
L5L
sa(dp162
g1
I01
sg9
Vmodule_repr
p163
sg11
L5L
sasg7
VMeta path import for built-in modules.\u000a\u000a    All methods are either class or static methods to avoid the need to\u000a    instantiate the class.\u000a\u000a    
p164
sg9
V__loader__
p165
sg11
L3L
sa(dp166
g1
I01
sg9
V__name__
p167
sg11
L5L
sa(dp168
g1
I01
sg9
V__package__
p169
sg11
L5L
sa(dp170
g1
I01
sg9
V__spec__
p171
sg11
L5L
sa(dp172
g1
I01
sg7
V_count_elements(mapping, iterable) -> None\u000a\u000aCount elements in the iterable, updating the mappping
p173
sg9
V_count_elements
p174
sg11
L2L
sa(dp175
g1
I01
sg2
(lp176
(dp177
g1
I01
sg9
g13
sg11
L5L
sa(dp178
g1
I01
sg7
V__dir__() -> list\u000adefault dir() implementation
p179
sg9
g20
sg11
L2L
sa(dp180
g1
I01
sg9
g22
sg11
L5L
sa(dp181
g1
I01
sg9
g24
sg11
L5L
sa(dp182
g1
I01
sg7
Vdefault object formatter
p183
sg9
g27
sg11
L2L
sa(dp184
g1
I01
sg9
g29
sg11
L5L
sa(dp185
g1
I01
sg9
g31
sg11
L5L
sa(dp186
g1
I01
sg9
g36
sg11
L5L
sa(dp187
g1
I01
sg9
g38
sg11
L5L
sa(dp188
g1
I01
sg9
g40
sg11
L5L
sa(dp189
g1
I01
sg9
g42
sg11
L5L
sa(dp190
g1
I01
sg9
g44
sg11
L5L
sa(dp191
g1
I01
sg7
VPrivate method returning an estimate of len(list(it)).
p192
sg9
V__length_hint__
p193
sg11
L2L
sa(dp194
g1
I01
sg9
g48
sg11
L5L
sa(dp195
g1
I01
sg9
g50
sg11
L5L
sa(dp196
g1
I01
sg7
VCreate and return a new object.  See help(type) for accurate signature.
p197
sg9
g53
sg11
L2L
sa(dp198
g1
I01
sg9
V__next__
p199
sg11
L5L
sa(dp200
g1
I01
sg7
VReturn state information for pickling.
p201
sg9
g56
sg11
L2L
sa(dp202
g1
I01
sg7
Vhelper for pickle
p203
sg9
g59
sg11
L2L
sa(dp204
g1
I01
sg9
g61
sg11
L5L
sa(dp205
g1
I01
sg9
g66
sg11
L5L
sa(dp206
g1
I01
sg7
V__sizeof__() -> int\u000asize of object in memory, in bytes
p207
sg9
g70
sg11
L2L
sa(dp208
g1
I01
sg9
g72
sg11
L5L
sa(dp209
g1
I01
sg7
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p210
sg9
g75
sg11
L2L
sasg7
Nsg9
V_deque_iterator
p211
sg11
L3L
sa(dp212
g1
I01
sg2
(lp213
(dp214
g1
I01
sg9
g13
sg11
L5L
sa(dp215
g1
I01
sg7
V__dir__() -> list\u000adefault dir() implementation
p216
sg9
g20
sg11
L2L
sa(dp217
g1
I01
sg9
g22
sg11
L5L
sa(dp218
g1
I01
sg9
g24
sg11
L5L
sa(dp219
g1
I01
sg7
Vdefault object formatter
p220
sg9
g27
sg11
L2L
sa(dp221
g1
I01
sg9
g29
sg11
L5L
sa(dp222
g1
I01
sg9
g31
sg11
L5L
sa(dp223
g1
I01
sg9
g36
sg11
L5L
sa(dp224
g1
I01
sg9
g38
sg11
L5L
sa(dp225
g1
I01
sg9
g40
sg11
L5L
sa(dp226
g1
I01
sg9
g42
sg11
L5L
sa(dp227
g1
I01
sg9
g44
sg11
L5L
sa(dp228
g1
I01
sg7
VPrivate method returning an estimate of len(list(it)).
p229
sg9
g193
sg11
L2L
sa(dp230
g1
I01
sg9
g48
sg11
L5L
sa(dp231
g1
I01
sg9
g50
sg11
L5L
sa(dp232
g1
I01
sg7
VCreate and return a new object.  See help(type) for accurate signature.
p233
sg9
g53
sg11
L2L
sa(dp234
g1
I01
sg9
g199
sg11
L5L
sa(dp235
g1
I01
sg7
VReturn state information for pickling.
p236
sg9
g56
sg11
L2L
sa(dp237
g1
I01
sg7
Vhelper for pickle
p238
sg9
g59
sg11
L2L
sa(dp239
g1
I01
sg9
g61
sg11
L5L
sa(dp240
g1
I01
sg9
g66
sg11
L5L
sa(dp241
g1
I01
sg7
V__sizeof__() -> int\u000asize of object in memory, in bytes
p242
sg9
g70
sg11
L2L
sa(dp243
g1
I01
sg9
g72
sg11
L5L
sa(dp244
g1
I01
sg7
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p245
sg9
g75
sg11
L2L
sasg7
Nsg9
V_deque_reverse_iterator
p246
sg11
L3L
sa(dp247
g1
I01
sg2
(lp248
(dp249
g1
I01
sg7
VTrue if D has a key k, else False.
p250
sg9
g10
sg11
L2L
sa(dp251
g1
I01
sg7
VD.copy() -> a shallow copy of D.
p252
sg9
V__copy__
p253
sg11
L2L
sa(dp254
g1
I01
sg9
g13
sg11
L5L
sa(dp255
g1
I01
sg9
g15
sg11
L5L
sa(dp256
g1
I01
sg7
V__dir__() -> list\u000adefault dir() implementation
p257
sg9
g20
sg11
L2L
sa(dp258
g1
I01
sg9
g22
sg11
L5L
sa(dp259
g1
I01
sg9
g24
sg11
L5L
sa(dp260
g1
I01
sg7
Vdefault object formatter
p261
sg9
g27
sg11
L2L
sa(dp262
g1
I01
sg9
g29
sg11
L5L
sa(dp263
g1
I01
sg9
g31
sg11
L5L
sa(dp264
g1
I01
sg7
Vx.__getitem__(y) <==> x[y]
p265
sg9
g34
sg11
L2L
sa(dp266
g1
I01
sg9
g36
sg11
L5L
sa(dp267
g1
I01
sg9
g38
sg11
L5L
sa(dp268
g1
I01
sg9
g40
sg11
L5L
sa(dp269
g1
I01
sg9
g42
sg11
L5L
sa(dp270
g1
I01
sg9
g44
sg11
L5L
sa(dp271
g1
I01
sg9
g46
sg11
L5L
sa(dp272
g1
I01
sg9
g48
sg11
L5L
sa(dp273
g1
I01
sg7
V__missing__(key) # Called by __getitem__ for missing key; pseudo-code:\u000a  if self.default_factory is None: raise KeyError((key,))\u000a  self[key] = value = self.default_factory()\u000a  return value\u000a
p274
sg9
V__missing__
p275
sg11
L2L
sa(dp276
g1
I01
sg9
g50
sg11
L5L
sa(dp277
g1
I01
sg7
VCreate and return a new object.  See help(type) for accurate signature.
p278
sg9
g53
sg11
L2L
sa(dp279
g1
I01
sg7
VReturn state information for pickling.
p280
sg9
g56
sg11
L2L
sa(dp281
g1
I01
sg7
Vhelper for pickle
p282
sg9
g59
sg11
L2L
sa(dp283
g1
I01
sg9
g61
sg11
L5L
sa(dp284
g1
I01
sg9
g66
sg11
L5L
sa(dp285
g1
I01
sg9
g68
sg11
L5L
sa(dp286
g1
I01
sg7
VD.__sizeof__() -> size of D in memory, in bytes
p287
sg9
g70
sg11
L2L
sa(dp288
g1
I01
sg9
g72
sg11
L5L
sa(dp289
g1
I01
sg7
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p290
sg9
g75
sg11
L2L
sa(dp291
g1
I01
sg7
VD.clear() -> None.  Remove all items from D.
p292
sg9
g78
sg11
L2L
sa(dp293
g1
I01
sg7
VD.copy() -> a shallow copy of D.
p294
sg9
g81
sg11
L2L
sa(dp295
g1
I01
sg9
Vdefault_factory
p296
sg11
L5L
sa(dp297
g1
I01
sg7
VReturns a new dict with keys from iterable and values equal to value.
p298
sg9
g84
sg11
L2L
sa(dp299
g1
I01
sg7
VD.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.
p300
sg9
g87
sg11
L2L
sa(dp301
g1
I01
sg7
VD.items() -> a set-like object providing a view on D's items
p302
sg9
g89
sg11
L2L
sa(dp303
g1
I01
sg7
VD.keys() -> a set-like object providing a view on D's keys
p304
sg9
g91
sg11
L2L
sa(dp305
g1
I01
sg7
VD.pop(k[,d]) -> v, remove specified key and return the corresponding value.\u000aIf key is not found, d is returned if given, otherwise KeyError is raised
p306
sg9
g97
sg11
L2L
sa(dp307
g1
I01
sg7
VD.popitem() -> (k, v), remove and return some (key, value) pair as a\u000a2-tuple; but raise KeyError if D is empty.
p308
sg9
g100
sg11
L2L
sa(dp309
g1
I01
sg7
VD.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D
p310
sg9
g103
sg11
L2L
sa(dp311
g1
I01
sg7
VD.update([E, ]**F) -> None.  Update D from dict/iterable E and F.\u000aIf E is present and has a .keys() method, then does:  for k in E: D[k] = E[k]\u000aIf E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v\u000aIn either case, this is followed by: for k in F:  D[k] = F[k]
p312
sg9
g105
sg11
L2L
sa(dp313
g1
I01
sg7
VD.values() -> an object providing a view on D's values
p314
sg9
g107
sg11
L2L
sasg7
Vdefaultdict(default_factory[, ...]) --> dict with default factory\u000a\u000aThe default factory is called without arguments to produce\u000aa new value when a key is not present, in __getitem__ only.\u000aA defaultdict compares equal to a dict with the same items.\u000aAll remaining arguments are treated the same as if they were\u000apassed to the dict constructor, including keyword arguments.\u000a
p315
sg9
Vdefaultdict
p316
sg11
L3L
sa(dp317
g1
I01
sg2
(lp318
(dp319
g1
I01
sg9
V__add__
p320
sg11
L5L
sa(dp321
g1
I01
sg9
V__bool__
p322
sg11
L5L
sa(dp323
g1
I01
sg9
g10
sg11
L5L
sa(dp324
g1
I01
sg7
VReturn a shallow copy of a deque.
p325
sg9
g253
sg11
L2L
sa(dp326
g1
I01
sg9
g13
sg11
L5L
sa(dp327
g1
I01
sg9
g15
sg11
L5L
sa(dp328
g1
I01
sg7
V__dir__() -> list\u000adefault dir() implementation
p329
sg9
g20
sg11
L2L
sa(dp330
g1
I01
sg9
g22
sg11
L5L
sa(dp331
g1
I01
sg9
g24
sg11
L5L
sa(dp332
g1
I01
sg7
Vdefault object formatter
p333
sg9
g27
sg11
L2L
sa(dp334
g1
I01
sg9
g29
sg11
L5L
sa(dp335
g1
I01
sg9
g31
sg11
L5L
sa(dp336
g1
I01
sg9
g34
sg11
L5L
sa(dp337
g1
I01
sg9
g36
sg11
L5L
sa(dp338
g1
I01
sg9
g38
sg11
L5L
sa(dp339
g1
I01
sg9
V__iadd__
p340
sg11
L5L
sa(dp341
g1
I01
sg9
V__imul__
p342
sg11
L5L
sa(dp343
g1
I01
sg9
g40
sg11
L5L
sa(dp344
g1
I01
sg9
g42
sg11
L5L
sa(dp345
g1
I01
sg9
g44
sg11
L5L
sa(dp346
g1
I01
sg9
g46
sg11
L5L
sa(dp347
g1
I01
sg9
g48
sg11
L5L
sa(dp348
g1
I01
sg9
V__mul__
p349
sg11
L5L
sa(dp350
g1
I01
sg9
g50
sg11
L5L
sa(dp351
g1
I01
sg7
VCreate and return a new object.  See help(type) for accurate signature.
p352
sg9
g53
sg11
L2L
sa(dp353
g1
I01
sg7
VReturn state information for pickling.
p354
sg9
g56
sg11
L2L
sa(dp355
g1
I01
sg7
Vhelper for pickle
p356
sg9
g59
sg11
L2L
sa(dp357
g1
I01
sg9
g61
sg11
L5L
sa(dp358
g1
I01
sg7
VD.__reversed__() -- return a reverse iterator over the deque
p359
sg9
g64
sg11
L2L
sa(dp360
g1
I01
sg9
V__rmul__
p361
sg11
L5L
sa(dp362
g1
I01
sg9
g66
sg11
L5L
sa(dp363
g1
I01
sg9
g68
sg11
L5L
sa(dp364
g1
I01
sg7
VD.__sizeof__() -- size of D in memory, in bytes
p365
sg9
g70
sg11
L2L
sa(dp366
g1
I01
sg9
g72
sg11
L5L
sa(dp367
g1
I01
sg7
VAbstract classes can override this to customize issubclass().\u000a\u000aThis is invoked early on by abc.ABCMeta.__subclasscheck__().\u000aIt should return True, False or NotImplemented.  If it returns\u000aNotImplemented, the normal algorithm is used.  Otherwise, it\u000aoverrides the normal algorithm (and the outcome is cached).\u000a
p368
sg9
g75
sg11
L2L
sa(dp369
g1
I01
sg7
VAdd an element to the right side of the deque.
p370
sg9
Vappend
p371
sg11
L2L
sa(dp372
g1
I01
sg7
VAdd an element to the left side of the deque.
p373
sg9
Vappendleft
p374
sg11
L2L
sa(dp375
g1
I01
sg7
VRemove all elements from the deque.
p376
sg9
g78
sg11
L2L
sa(dp377
g1
I01
sg7
VReturn a shallow copy of a deque.
p378
sg9
g81
sg11
L2L
sa(dp379
g1
I01
sg7
VD.count(value) -> integer -- return number of occurrences of value
p380
sg9
Vcount
p381
sg11
L2L
sa(dp382
g1
I01
sg7
VExtend the right side of the deque with elements from the iterable
p383
sg9
Vextend
p384
sg11
L2L
sa(dp385
g1
I01
sg7
VExtend the left side of the deque with elements from the iterable
p386
sg9
Vextendleft
p387
sg11
L2L
sa(dp388
g1
I01
sg7
VD.index(value, [start, [stop]]) -> integer -- return first index of value.\u000aRaises ValueError if the value is not present.
p389
sg9
Vindex
p390
sg11
L2L
sa(dp391
g1
I01
sg7
VD.insert(index, object) -- insert object before index
p392
sg9
Vinsert
p393
sg11
L2L
sa(dp394
g1
I01
sg9
Vmaxlen
p395
sg11
L5L
sa(dp396
g1
I01
sg7
VRemove and return the rightmost element.
p397
sg9
g97
sg11
L2L
sa(dp398
g1
I01
sg7
VRemove and return the leftmost element.
p399
sg9
Vpopleft
p400
sg11
L2L
sa(dp401
g1
I01
sg7
VD.remove(value) -- remove first occurrence of value.
p402
sg9
Vremove
p403
sg11
L2L
sa(dp404
g1
I01
sg7
VD.reverse() -- reverse *IN PLACE*
p405
sg9
Vreverse
p406
sg11
L2L
sa(dp407
g1
I01
sg7
VRotate the deque n steps to the right (default n=1).  If n is negative, rotates left.
p408
sg9
Vrotate
p409
sg11
L2L
sasg7
Vdeque([iterable[, maxlen]]) --> deque object\u000a\u000aA list-like sequence optimized for data accesses near its endpoints.
p410
sg9
Vdeque
p411
sg11
L3L
sasg7
VHigh performance data structures.\u000a- deque:        ordered collection accessible from endpoints only\u000a- defaultdict:  dict subclass with a default value factory\u000a
p412
sg9
V_collections
p413
sg11
L1L
s.