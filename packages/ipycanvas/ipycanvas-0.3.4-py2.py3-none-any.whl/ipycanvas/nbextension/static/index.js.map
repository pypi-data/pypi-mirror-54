{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/version.ts","webpack:///./src/extension.ts","webpack:///./src/index.ts","webpack:///./src/widget.ts","webpack:///external \"@jupyter-widgets/base\"","webpack:///./src/utils.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","data","MODULE_VERSION","version","MODULE_NAME","window","__webpack_public_path__","document","querySelector","getAttribute","__export","base_1","version_1","utils_1","getContext","canvas","context","CanvasModel","DOMWidgetModel","[object Object]","assign","super","defaults","_model_name","model_name","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","size","attributes","options","initialize","this","createElement","ctx","resizeCanvas","on","onCommand","send","event","command","buffers","processCommand","forEachView","view","updateCanvas","Array","remainingBuffers","subcommand","subbuffers","n_buffers","slice","drawRects","args","fillArc","strokeArc","drawArcs","drawImage","putImageData","setAttr","attr","clearCanvas","executeCommand","commandName","x","getArg","y","width","height","numberRects","Math","min","length","idx","getItem","save","beginPath","closePath","fill","restore","stroke","radius","startAngle","endAngle","anticlockwise","numberArcs","arc","serializedImage","image","unpack_models","widget_manager","_drawImage","url","format","blob","Blob","type","URL","createObjectURL","TextDecoder","decode","buffer","img","Image","Promise","resolve","onload","src","undefined","bufferMetadata","dx","dy","shape","Uint8ClampedArray","imageData","ImageData","offscreenCanvas","clear","clearRect","callback","view_id","views","then","setAttribute","serializers","CanvasView","DOMWidgetView","el","appendChild","model","MultiCanvasModel","_canvases","deserialize","MultiCanvasView","container","style","position","canvas_views","ViewList","createCanvasView","removeCanvasView","updateCanvasViews","update","canvasModel","index","create_child_view","canvasView","zIndex","removeChild","__WEBPACK_EXTERNAL_MODULE__5__","Scalar","isScalar","Arg","ScalarArg","Infinity","BufferArg","dataview","metadata","dtype","Int32Array","getTypedArray"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nconst data = require('../package.json');\n\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexport const MODULE_VERSION = data.version;\n\n/*\n * The current package name.\n */\nexport const MODULE_NAME = data.name;\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n// Entry point for the notebook bundle containing custom model definitions.\n//\n// Setup notebook base URL\n//\n// Some static assets may be required by the custom widget javascript. The base\n// url for the notebook is not known at build time and is therefore computed\n// dynamically.\n(window as any).__webpack_public_path__ = document.querySelector('body')!.getAttribute('data-base-url') + 'nbextensions/ipycanvas';\n\nexport * from './index';\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './version';\nexport * from './widget';\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  DOMWidgetModel, DOMWidgetView, ISerializers, Dict, ViewList, unpack_models\n} from '@jupyter-widgets/base';\n\nimport {\n  MODULE_NAME, MODULE_VERSION\n} from './version';\n\nimport {\n  getArg\n} from './utils';\n\n\nfunction getContext(canvas: HTMLCanvasElement) {\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    throw 'Could not create 2d context.';\n  }\n  return context;\n}\n\n\nexport\nclass CanvasModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: CanvasModel.model_name,\n      _model_module: CanvasModel.model_module,\n      _model_module_version: CanvasModel.model_module_version,\n      _view_name: CanvasModel.view_name,\n      _view_module: CanvasModel.view_module,\n      _view_module_version: CanvasModel.view_module_version,\n      size: [700, 500],\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = getContext(this.canvas);\n\n    this.resizeCanvas();\n\n    this.on('change:size', this.resizeCanvas.bind(this));\n    this.on('msg:custom', this.onCommand.bind(this));\n\n    this.send({ event: 'client_ready' }, {});\n  }\n\n  private async onCommand(command: any, buffers: any) {\n    await this.processCommand(command, buffers);\n\n    this.forEachView((view: CanvasView) => {\n      view.updateCanvas();\n    });\n  }\n\n  private async processCommand(command: any, buffers: any) {\n    if (command instanceof Array) {\n      let remainingBuffers = buffers;\n\n      for (const subcommand of command) {\n        let subbuffers = [];\n        if (subcommand.n_buffers) {\n          subbuffers = remainingBuffers.slice(0, subcommand.n_buffers);\n          remainingBuffers = remainingBuffers.slice(subcommand.n_buffers)\n        }\n        await this.processCommand(subcommand, subbuffers);\n      }\n      return;\n    }\n\n    switch (command.name) {\n      case 'fillRects':\n        this.drawRects(command.args, buffers, 'fillRect');\n        break;\n      case 'strokeRects':\n        this.drawRects(command.args, buffers, 'strokeRect');\n        break;\n      case 'fillArc':\n        this.fillArc(command.args, buffers);\n        break;\n      case 'strokeArc':\n        this.strokeArc(command.args, buffers);\n        break;\n      case 'fillArcs':\n        this.drawArcs(command.args, buffers, 'fill');\n        break;\n      case 'strokeArcs':\n        this.drawArcs(command.args, buffers, 'stroke');\n        break;\n      case 'drawImage':\n        await this.drawImage(command.args, buffers);\n        break;\n      case 'putImageData':\n        this.putImageData(command.args, buffers);\n        break;\n      case 'set':\n        this.setAttr(command.attr, command.value);\n        break;\n      case 'clear':\n        this.clearCanvas();\n        break;\n      default:\n        this.executeCommand(command.name, command.args);\n        break;\n    }\n  }\n\n  private drawRects(args: any[], buffers: any, commandName: string) {\n    const x = getArg(args[0], buffers);\n    const y = getArg(args[1], buffers);\n    const width = getArg(args[2], buffers);\n    const height = getArg(args[3], buffers);\n\n    const numberRects = Math.min(x.length, y.length, width.length, height.length);\n\n    for (let idx = 0; idx < numberRects; ++idx) {\n      this.executeCommand(commandName, [x.getItem(idx), y.getItem(idx), width.getItem(idx), height.getItem(idx)]);\n    }\n  }\n\n  private fillArc(args: any[], buffers: any) {\n    this.ctx.save();\n\n    this.ctx.beginPath();\n    this.executeCommand('arc', args);\n    this.ctx.closePath();\n\n    this.ctx.fill();\n    this.ctx.restore();\n  }\n\n  private strokeArc(args: any[], buffers: any) {\n    this.ctx.save();\n\n    this.ctx.beginPath();\n    this.executeCommand('arc', args);\n    this.ctx.closePath();\n\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n\n  private drawArcs(args: any[], buffers: any, commandName: string) {\n    const x = getArg(args[0], buffers);\n    const y = getArg(args[1], buffers);\n    const radius = getArg(args[2], buffers);\n    const startAngle = getArg(args[3], buffers);\n    const endAngle = getArg(args[4], buffers);\n    const anticlockwise = getArg(args[5], buffers);\n\n    const numberArcs = Math.min(\n      x.length, y.length, radius.length,\n      startAngle.length, endAngle.length\n    );\n\n    this.ctx.save();\n\n    for (let idx = 0; idx < numberArcs; ++idx) {\n      this.ctx.beginPath();\n      this.ctx.arc(\n        x.getItem(idx), y.getItem(idx), radius.getItem(idx),\n        startAngle.getItem(idx), endAngle.getItem(idx),\n        anticlockwise.getItem(idx)\n      );\n      this.ctx.closePath();\n\n      this.executeCommand(commandName);\n    }\n\n    this.ctx.restore();\n  }\n\n  private async drawImage(args: any[], buffers: any) {\n    const [serializedImage, x, y, width, height] = args;\n\n    const image = await unpack_models(serializedImage, this.widget_manager);\n\n    if (image instanceof CanvasModel) {\n      this._drawImage(image.canvas, x, y, width, height);\n      return;\n    }\n\n    if (image.get('_model_name') == 'ImageModel') {\n      // Create the image manually instead of creating an ImageView\n      let url: string;\n      const format = image.get('format');\n      const value = image.get('value');\n      if (format !== 'url') {\n          const blob = new Blob([value], {type: `image/${format}`});\n          url = URL.createObjectURL(blob);\n      } else {\n          url = (new TextDecoder('utf-8')).decode(value.buffer);\n      }\n\n      const img = new Image();\n      return new Promise((resolve) => {\n        img.onload = () => {\n          this._drawImage(img, x, y, width, height);\n          resolve();\n        };\n        img.src = url;\n      });\n    }\n  }\n\n  private _drawImage(image: HTMLCanvasElement | HTMLImageElement,\n                     x: number, y: number,\n                     width: number | undefined, height: number | undefined) {\n    if (width === undefined || height === undefined) {\n      this.ctx.drawImage(image, x, y);\n    } else {\n      this.ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  private putImageData(args: any[], buffers: any) {\n    const [bufferMetadata, dx, dy] = args;\n\n    const width = bufferMetadata.shape[1];\n    const height = bufferMetadata.shape[0];\n\n    const data = new Uint8ClampedArray(buffers[0].buffer);\n    const imageData = new ImageData(data, width, height);\n\n    // Draw on a temporary off-screen canvas. This is a workaround for `putImageData` to support transparency.\n    const offscreenCanvas = document.createElement('canvas');\n    offscreenCanvas.width = width;\n    offscreenCanvas.height = height;\n    getContext(offscreenCanvas).putImageData(imageData, 0, 0);\n\n    this.ctx.drawImage(offscreenCanvas, dx, dy);\n  }\n\n  private setAttr(attr: string, value: any) {\n    (this.ctx as any)[attr] = value;\n  }\n\n  private clearCanvas() {\n    this.forEachView((view: CanvasView) => {\n      view.clear();\n    });\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  private executeCommand(name: string, args: any[] = []) {\n    (this.ctx as any)[name](...args);\n  }\n\n  private forEachView(callback: (view: CanvasView) => void) {\n    for (const view_id in this.views) {\n      this.views[view_id].then((view: CanvasView) => {\n        callback(view);\n      });\n    }\n  }\n\n  private resizeCanvas() {\n    const size = this.get('size');\n\n    this.canvas.setAttribute('width', size[0]);\n    this.canvas.setAttribute('height', size[1]);\n  }\n\n  static model_name = 'CanvasModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'CanvasView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  views: Dict<Promise<CanvasView>>;\n}\n\n\nexport\nclass CanvasView extends DOMWidgetView {\n  render() {\n    this.canvas = document.createElement('canvas');\n\n    this.el.appendChild(this.canvas);\n    this.ctx = getContext(this.canvas);\n\n    this.resizeCanvas();\n    this.model.on('change:size', this.resizeCanvas.bind(this));\n\n    this.updateCanvas();\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  updateCanvas() {\n    this.ctx.drawImage(this.model.canvas, 0, 0);\n  }\n\n  private resizeCanvas() {\n    const size = this.model.get('size');\n\n    this.canvas.setAttribute('width', size[0]);\n    this.canvas.setAttribute('height', size[1]);\n  }\n\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  model: CanvasModel;\n}\n\n\nexport\nclass MultiCanvasModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: MultiCanvasModel.model_name,\n      _model_module: MultiCanvasModel.model_module,\n      _model_module_version: MultiCanvasModel.model_module_version,\n      _view_name: MultiCanvasModel.view_name,\n      _view_module: MultiCanvasModel.view_module,\n      _view_module_version: MultiCanvasModel.view_module_version,\n      _canvases: [],\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n    _canvases: { deserialize: (unpack_models as any) },\n  }\n\n  static model_name = 'MultiCanvasModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'MultiCanvasView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n}\n\n\nexport\nclass MultiCanvasView extends DOMWidgetView {\n  render() {\n    this.container = document.createElement('div');\n    this.container.style.position = 'relative';\n\n    this.el.appendChild(this.container);\n\n    this.canvas_views = new ViewList<CanvasView>(this.createCanvasView, this.removeCanvasView, this);\n    this.updateCanvasViews();\n\n    this.model.on('change:_canvases', this.updateCanvasViews.bind(this));\n  }\n\n  private updateCanvasViews() {\n    this.canvas_views.update(this.model.get('_canvases'));\n  }\n\n  private createCanvasView(canvasModel: CanvasModel, index: number) {\n    // The following ts-ignore is needed due to ipywidgets's implementation\n    // @ts-ignore\n    return this.create_child_view(canvasModel).then((canvasView: CanvasView) => {\n      canvasView.el.style.zIndex = index;\n      canvasView.el.style.position = 'absolute';\n      this.container.appendChild(canvasView.el);\n\n      return canvasView;\n    });\n  }\n\n  private removeCanvasView(canvasView: CanvasView) {\n    this.container.removeChild(canvasView.el);\n  }\n\n  private container: HTMLDivElement;\n  private canvas_views: ViewList<CanvasView>;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","function getTypedArray(dataview: any, metadata: any) {\n  switch (metadata.dtype) {\n    case 'int32':\n      return new Int32Array(dataview.buffer);\n      break;\n    default:\n      throw 'Unknown dtype ' + metadata.dtype;\n      break;\n  }\n}\n\n// Scalar type\ntype Scalar = null | boolean | number | string;\n\nnamespace Scalar {\n  export\n  function isScalar(x: any): x is Scalar {\n      return x === null || typeof x === \"boolean\" || typeof x === \"number\" || typeof x === \"string\";\n  }\n}\n\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\n\n// Buffered argument\nexport\nabstract class Arg {\n  abstract getItem(idx: number) : any;\n\n  length: number;\n}\n\nclass ScalarArg extends Arg {\n  constructor(value: Scalar) {\n    super();\n\n    this.value = value;\n    this.length = Infinity;\n  }\n\n  getItem(idx: number) : any {\n    return this.value;\n  }\n\n  value: Scalar;\n}\n\nclass BufferArg extends Arg {\n  constructor(bufferMetadata: any, buffer: any[]) {\n    super();\n\n    this.value = getTypedArray(buffer, bufferMetadata);\n    this.length = this.value.length;\n  }\n\n  getItem(idx: number) : any {\n    return this.value[idx];\n  }\n\n  value: TypedArray;\n}\n\nexport\nfunction getArg(metadata: any, buffers: any) : Arg {\n  if (Scalar.isScalar(metadata)) {\n    return new ScalarArg(metadata);\n  }\n\n  if (metadata['idx'] !== undefined) {\n    return new BufferArg(metadata, buffers[metadata['idx']])\n  }\n\n  throw 'Could not process argument ' + metadata;\n}\n"],"sourceRoot":""}