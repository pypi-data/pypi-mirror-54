# -*- coding: utf-8 -*-

"""
bandwidth

This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class BandwidthCallbackMessageVoice(object):

    """Implementation of the 'BandwidthCallbackMessageVoice' model.

    TODO: type model description here.

    Attributes:
        call_id (string): TODO: type description here.
        start_time (string): TODO: type description here.
        direction (string): TODO: type description here.
        mfrom (string): TODO: type description here.
        to (string): TODO: type description here.
        digits (string): TODO: type description here.
        event_type (string): TODO: type description here.
        call_url (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "call_id": 'callId',
        "start_time": 'startTime',
        "direction": 'direction',
        "mfrom": 'from',
        "to": 'to',
        "digits": 'digits',
        "event_type": 'eventType',
        "call_url": 'callUrl'
    }

    def __init__(self,
                 call_id=None,
                 start_time=None,
                 direction=None,
                 mfrom=None,
                 to=None,
                 digits=None,
                 event_type=None,
                 call_url=None):
        """Constructor for the BandwidthCallbackMessageVoice class"""

        # Initialize members of the class
        self.call_id = call_id
        self.start_time = start_time
        self.direction = direction
        self.mfrom = mfrom
        self.to = to
        self.digits = digits
        self.event_type = event_type
        self.call_url = call_url

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        call_id = dictionary.get('callId')
        start_time = dictionary.get('startTime')
        direction = dictionary.get('direction')
        mfrom = dictionary.get('from')
        to = dictionary.get('to')
        digits = dictionary.get('digits')
        event_type = dictionary.get('eventType')
        call_url = dictionary.get('callUrl')

        # Return an object of this model
        return cls(call_id,
                   start_time,
                   direction,
                   mfrom,
                   to,
                   digits,
                   event_type,
                   call_url)
