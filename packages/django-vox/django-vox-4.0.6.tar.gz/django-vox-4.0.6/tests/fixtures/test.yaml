- model: contenttypes.contenttype
  fields: {app_label: auth, model: user}
- model: contenttypes.contenttype
  fields: {app_label: auth, model: group}
- model: contenttypes.contenttype
  fields: {app_label: tests, model: article}
- model: contenttypes.contenttype
  fields: {app_label: tests, model: subscriber}
- model: contenttypes.contenttype
  fields: {app_label: tests, model: comment}
## notification definitions
# user

- model: django_vox.notification
  pk: 1
  fields:
    codename: created
    object_type: [auth, user]
    from_code: true
    last_updated: 2001-1-1

- model: django_vox.notification
  pk: 2
  fields:
    codename: updated
    object_type: [auth, user]
    from_code: true
    last_updated: 2001-1-1
- model: django_vox.notification
  pk: 3
  fields:
    codename: deleted
    object_type: [auth, user]
    from_code: true
    last_updated: 2001-1-1
# subscriber
- model: django_vox.notification
  pk: 4
  fields:
    codename: created
    object_type: [tests, subscriber]
    from_code: true
    last_updated: 2001-1-1
- model: django_vox.notification
  pk: 5
  fields:
    codename: updated
    object_type: [tests, subscriber]
    from_code: true
    last_updated: 2001-1-1
- model: django_vox.notification
  pk: 6
  fields:
    codename: deleted
    object_type: [tests, subscriber]
    from_code: true
    last_updated: 2001-1-1
# article
- model: django_vox.notification
  pk: 7
  fields:
    codename: created
    object_type: [tests, article]
    actor_type: [auth, user]
    target_type: [tests, article]
    description: Notification that a new article was created
    from_code: true
    last_updated: 2001-1-1
    activity_type: Create
# comment
- model: django_vox.notification
  pk: 8
  fields:
    codename: created
    object_type: [tests, comment]
    actor_type: [tests, subscriber]
    description: Notification from subscriber to author that a comment was posted
    from_code: true
    last_updated: 2001-1-1
# film
- model: django_vox.notification
  pk: 9
  fields:
    codename: created
    object_type: [tests, film]
    description: Notification that a new film was created
    from_code: true
    last_updated: 2001-1-1
    activity_type: Create
## group entries
- model: auth.group
  pk: 1
  fields:
    name: Group
## user entries
- model: auth.user
  pk: 1
  fields:
    username: author@example.org
    first_name: Author
    email: author@example.org
    password: pbkdf2_sha256$36000$ecPczOo2GtrM$nzTODWfJmSJJixZC9dByTueTEkjm89MJq0So36Wbl9U=
    is_superuser: true
    is_staff: true
    is_active: true
    groups: [1]
- model: auth.user
  pk: 2
  fields:
    username: user@example.org
    first_name: Other user
    email: user@example.org
    password: pbkdf2_sha256$36000$ecPczOo2GtrM$nzTODWfJmSJJixZC9dByTueTEkjm89MJq0So36Wbl9U=
    is_superuser: false
    is_staff: true
    is_active: true
- model: auth.user
  pk: 3
  fields:
    username: steven.spielberg@example.org
    first_name: Steven
    email: steven.spielberg@example.org
    password: pbkdf2_sha256$36000$ecPczOo2GtrM$nzTODWfJmSJJixZC9dByTueTEkjm89MJq0So36Wbl9U=
    is_superuser: false
    is_staff: false
    is_active: true
- model: auth.user
  pk: 4
  fields:
    username: michael.crichton@example.org
    first_name: Michael
    email: michael.crichton@example.org
    password: pbkdf2_sha256$36000$ecPczOo2GtrM$nzTODWfJmSJJixZC9dByTueTEkjm89MJq0So36Wbl9U=
    is_superuser: false
    is_staff: false
    is_active: true
- model: tests.article
  pk: too_many
  fields:
    author: 1
    title: Why are there so many blog demos
    content: There are just too many
    created_at: 2000-1-1
- model: tests.subscriber
  pk: 1
  fields:
    name: Subscriber
    email: subscriber@example.org
- model: tests.subscriber
  pk: 2
  fields:
    name: Author Subscriber
    email: authorsubscriber@example.org
    author: 1
- model: django_vox.template
  pk: 1
  fields:
    notification: [tests, article, created]
    backend: "email-html"
    subject: "Subscriber email"
    content: "<p>Hi {{ contact.name }},</p>
      <p>A new article, <a href='http://127.0.0.1:8000/{{ object.pk }}/?token={{
      recipient.get_token | urlencode }}'>{{ object }}</a>, has been
      published at the awesome blog.</p>"
    recipients: c:sub
    enabled: true
    bulk: false
- model: django_vox.template
  pk: 2
  fields:
    notification: [tests, article, created]
    backend: email-md
    content: "{{ object.author.name }} has posted a new article.

    See at <a href='http://127.0.0.1:8000/{{ object.article.pk }}/'>{{
      object.article.name }}</a>."
    recipients: si
    enabled: true
    bulk: false
- model: django_vox.template
  pk: 3
  fields:
    notification: [tests, comment, created]
    backend: email
    content: "{% block html_body %}<p>Hi {{ recipient.name }},</p>\r\n
      <p>{{ object.poster.name }} has posted a comment on your article <a
      href='http://127.0.0.1:8000/{{ object.article.pk }}/'>{{
      object.article.name }}</a>. Go check it out!</p>{% endblock %}"
    recipients: c:author
    enabled: true
    bulk: false
- model: django_vox.template
  pk: 4
  fields:
    notification: [tests, subscriber, created]
    backend: email
    content: "A new subscriber {{ object }} has been added on the blog"
    recipients: si
    enabled: true
    bulk: false
- model: django_vox.template
  pk: 5
  fields:
    notification: [tests, comment, created]
    backend: activity
    subject: New comment posted
    content: "{{ object.poster.name }} has added a new comment to
      {{ object.title }}"
    recipients: c:author
    enabled: true
    bulk: false
- model: django_vox.template
  pk: 6
  fields:
    notification: [tests, film, created]
    backend: "email-html"
    subject: "Your film was published!"
    content: "<p>Hi {{ contact.name }},</p>
      <p>Your film, <a href='http://127.0.0.1:8000/{{ object.pk }}/?token={{
      recipient.get_token | urlencode }}'>{{ object }}</a>, has been
      published!</p>"
    recipients: c:director,c:screenwriter
    enabled: true
    bulk: false
- model: django_vox.templateattachment
  pk: 1
  fields:
    template: 1
    key: object.author.vcard
- model: django_vox.sitecontact
  pk: 1
  fields:
    name: admin
    protocol: email
    address: admin@example.org
- model: django_vox.sitecontactsetting
  pk: 1
  fields:
    site_contact: 1
    notification: [tests, subscriber, created]
    enabled: true
- model: django_vox.sitecontactsetting
  pk: 2
  fields:
    site_contact: 1
    notification: [tests, article, created]
    enabled: true
