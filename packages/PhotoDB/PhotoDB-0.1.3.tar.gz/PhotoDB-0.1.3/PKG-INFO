Metadata-Version: 2.1
Name: PhotoDB
Version: 0.1.3
Summary: App for cataloguing vintage cameras, lenses, films, negatives & prints
Home-page: https://github.com/djjudas21/photodb
Author: Jonathan Gazeley
Author-email: photodb@jonathangazeley.com
License: MIT
Description: # PhotoDB
        
        PhotoDB is a web app for film photography that can be used to track cameras, lenses, accessories, films, negatives and prints, to fully
        catalogue a collection of photographic equipment as well as the pictures that are made with them. Read the [Concepts](docs/CONCEPTS.md)
        section for full details on the capabilities of PhotoDB.
        
        It replaces an earlier command-line project, also called [PhotoDB](https://github.com/djjudas21/photodb-perl), which has now been deprecated.
        
        ## Installing PhotoDB
        
        There are several ways of installing PhotoDB, depending on your needs:
        
        * With Pip
        * [From source](docs/INSTALL_SOURCE.md)
        * [With Docker](docs/INSTALL-DOCKER.md)
        * [With Kubernetes](docs/INSTALL-KUBERNETES.md)
        
        ## Configuring PhotoDB
        
        PhotoDB requires no additional config to run with default settings. However it is **insecure** in this configuration so at least `SECRET_KEY` and
        `DJANGO_PROD` must be set if you are running in production.
        
        The following environment variables are supported:
        
        * `SECRET_KEY` - a large random value to be kept secret. Generate [here](https://miniwebtool.com/django-secret-key-generator/)
        * `DJANGO_PROD` - set to `true` to enable production mode. Defaults to `false` when running from source and `true` when running in Docker
        * `DB_ENGINE` - the database engine (default `django.db.backends.sqlite3`)
        * `DB_NAME` - the name of the database schema, or path to the SQLite db file (default `db/db.sqlite3`)
        * `DB_USER` - database username
        * `DB_PASS` - database password
        * `DB_HOST` - database hostname or IP address
        * `DB_PORT` - database port
        
        ## See also
        
        * [Concepts](docs/CONCEPTS.md)
        * [Screenshots](docs/SCREENSHOTS.md)
        * [Contributing](docs/CONTRIBUTING.md)
        
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Other Environment
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Requires-Python: >=3.6
Description-Content-Type: text/markdown
