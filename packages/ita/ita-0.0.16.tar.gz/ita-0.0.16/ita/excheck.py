import sys
import io
import math
import collections.abc

def excheck(f):
    if f.__name__ not in excheckdata().keys():
        print(f.__name__ + " cannot be checked by excheck")
        return
    g = excheckdata()[f.__name__][0]
    for i in excheckdata()[f.__name__][1]:
        if wrong(f, i[0], i[1], g):
            return
    print(f.__name__ + " passed the check")

def tplapp(f, arg):
    if isinstance(arg, tuple):
        return f(*arg)
    else:
        return f(arg)

def wrong(f, arg, out, g):
    if isinstance(arg, tuple):
        sarg = str(arg)
    else:
        sarg = "(" + str(arg) + ")"
    res = g(f, arg)
    if reseq(res, out):
        return False
    print(f.__name__ + sarg + " must result in " + str(out) +
          " but obtained " + str(res) + ".")
    return True

def reseq(a, b):
    if type(a) is float or type(b) is float:
        return abs(a - b) <= 0.1 ** 10
    if isinstance(a, collections.abc.Sequence) and not isinstance(a, str):
        return len(a) == len(b) and reslisteq(a, b)
    else:
        return a == b

def reslisteq(a, b):
    for i in range(0, len(a)):
        if not reseq(a[i], b[i]):
            return False
    return True

def cknml(f, arg):
    return tplapp(f, arg)

def ckprint(f, arg):
    temp = sys.stdout
    sys.stdout = io.StringIO()
    tplapp(f, arg)
    res = sys.stdout.getvalue()
    sys.stdout = temp
    return res

def ckfst(f, arg):
    tplapp(f, arg)
    return arg[0]

def ckround(n):
    return lambda f, arg: round(cknml(f, arg), n)
def excheckdata():
    return {
        "ex3_3" : (cknml,
                   [((2,3,5), 242.0),
                    ((0.2,0.3,10), 0.28571259860000003),
                    ((0.1,0.1,0), -0.0)]),
        "ex3_4" : (cknml,
                   [((4, 3, 6), 72.0), ((10, 2, 3), 7.5), ((2, 0, 1), 0.0)]),
        "ex3_5" : (cknml,
                   [(6, 36.0), (3, 18.0), (0, 0.0)]),
        "ex3_6" : (ckprint,
                   [((2.0,8.0), 'A = 2.0 B = 8.0\nArithmetic mean: 5.0\nGeometric mean: 4.0\n'),
                    ((9.0,36.0),'A = 9.0 B = 36.0\nArithmetic mean: 22.5\nGeometric mean: 18.0\n'),
                    ((0.0,6.25),'A = 0.0 B = 6.25\nArithmetic mean: 3.125\nGeometric mean: 0.0\n')]),
        "ex3_7" : (cknml,
                   [(0, 0.0), (180, 3.141592653589793), (36, 0.6283185307179586)]),
        "ex3_8_sin" : (cknml,
                       [(0, 0.0), (180, 1.2246467991473532e-16),
                        (36, 0.5877852522924731)]),
        "ex3_8_cos" : (cknml,
                       [(0, 1.0), (270, -1.8369701987210297e-16), (36, 0.8090169943749475)]),
        "ex3_9_x" : (cknml,
                     [((2, 1, 36), 1.0302487364574218),
                      ((3, -1, 210), -3.098076211353316),
                      ((-6, 28, 15), -13.04248822060499)]),
        "ex3_9_y" : (cknml,
                     [((2, 1, 36), 1.9845874989598937),
                      ((3, -1, 210), -0.6339745962155618),
                      ((-6, 28, 15), 25.493008865478785)]),
        "ex4_1" : (ckprint,
                   [(0, "0\n"), (3, "0\n1\n2\n3\n"), (5, "0\n1\n2\n3\n4\n5\n")]),
        "ex4_2" : (cknml,
                   [([2, 0, 5], 2), ([-2, -4, -1, -6], 2), ([-2, 8, -4, 10], 3)]),
        "ex4_3" : (cknml,
                   [([2, 0, 5], 7), ([-2, -4, -1, -6], 13), ([-2, 8, -4, 10], 24)]),
        "ex4_4" : (cknml,
                   [(([2, 0, 5], [3, 1, -2]), 7.14142842854285),
                    (([-2, -4, -1, -6], [3, 3, 0, 0]), 10.535653752852738),
                    (([-2, 8, -4, 10], [-2, -1, -7, -3]), 16.09347693943108)]),
        "ex4_5" : (cknml,
                   [([3, 1, -2], 308), ([-2, -4, -1, -6], -2416),
                    ([-2, 8, -7, -3], -1273)]),
        "ex4_7" : (cknml,
                   [((3, 1, -2), 1), ((4, -1, -6), -1), ((8, -7, -3), -3)]),
        "ex4_8" : (cknml,
                   [([3, 1, -2], 1), ([-2, -4, -1, -6], -2),
                    ([-2, 8, -7, -3], -2)]),
        "ex4_9" : (cknml,
                   [([[3, 1, -2]], 3), ([[3, 1, -2], [-2, 4, -1, -6]], 3),
                    ([[3, 1, -2], [-2, -4, -1, -6], [12, 8, -7, -3]], 12)]),
        "ex4_10" : (cknml,
                    [(([[3, 1, -2]], -1), 0),
                     (([[3, 1, -2], [-2, 4, -1, -6]], -1), 1),
                     (([[3, 1, -2], [-2, 4, -1, -6], [-1, 8, -1, -7, -3]], -1),
                      3)]),
        "ex5_1" : (cknml,
                   [(3, [1.0, 0.5, 0.3333333333333333]),
                    (6, [1.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666]),
                    (0, [])]),
        "ex5_2" : (cknml,
                   [((3, 2), [[0.0, 0.5], [0.0, 0.5], [0.0, 0.5]]),
                    ((6, 10), [[0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
                               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
                               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
                               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
                               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
                               [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]]),
                    ((0, 0), [])]),
        "ex5_3" : (cknml,
                   [(3, [[1, 0, 1], [0, 1, 0], [1, 0, 1]]),
                    (10, [[1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                          [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                          [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                          [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                          [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                          [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                          [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                          [0, 1, 0, 1, 0, 1, 0, 1, 0, 1],
                          [1, 0, 1, 0, 1, 0, 1, 0, 1, 0],
                          [0, 1, 0, 1, 0, 1, 0, 1, 0, 1]]),
                    (0, [])]),
        "ex5_4" : (cknml,
                   [(3, [[0, 0.5, 0], [0.5, 1, 0.5], [0, 0.5, 0]]),
                    (10, [[0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5],
                          [0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1],
                          [0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5],
                          [0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1],
                          [0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5],
                          [0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1],
                          [0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5],
                          [0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1],
                          [0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5, 0, 0.5],
                          [0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1, 0.5, 1]]),
                    (0, [])]),
        "ex5_5" : (ckfst,
                   [(([[0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0]], 2, 2, 4, 5, 0.5),
                     [[0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0.5, 0.5, 0.5, 0.5, 0, 0],
                      [0, 0, 0.5, 0.5, 0.5, 0.5, 0, 0],
                      [0, 0, 0.5, 0.5, 0.5, 0.5, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0]]),
                    (([[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]],
                      2, 7, 5, 7, [1, 0, 0.5]),
                     [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [1, 0, 0.5]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [1, 0, 0.5]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [1, 0, 0.5]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [1, 0, 0.5]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]]),
                    (([[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]],
                      3, 5, 3, 6, [0, 0.5, 0.5]),
                     [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0.5, 0.5], [0, 0.5, 0.5], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]]])]),
        "ex5_6" : (ckfst,
                   [(([[0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0]], 2, 2, 4, 5, 0.5),
                     [[0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0],
                      [0, 0, 0.5, 0, 0, 0],
                      [0, 0, 0, 0.5, 0.5, 0],
                      [0, 0, 0, 0, 0, 0.5],
                      [0, 0, 0, 0, 0, 0]]),
                    (([[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]]],
                      2, 5, 5, 5, [1, 0, 0.5]),
                     [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [1, 0, 0.5]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [1, 0, 0.5]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [1, 0, 0.5]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [1, 0, 0.5]]]),
                    (([[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]],
                       [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                        [0, 0, 0], [0, 0, 0]]],
                      3, 2, 3, 4, [0, 0.5, 0.5]),
                     [[[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0.5, 0.5], [0, 0.5, 0.5],
                       [0, 0.5, 0.5], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0]],
                      [[0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0],
                       [0, 0, 0], [0, 0, 0]]])]),
        "ex5_7" : (ckfst,
                   [(([[1, 1, 0, 1, 1, 0],
                       [1, 0, 0, 0, 1, 1],
                       [1, 0, 1, 1, 0, 0],
                       [0, 0, 1, 1, 1, 0],
                       [0, 0, 1, 1, 0, 0],
                       [0, 1, 1, 1, 1, 0]], 3),
                     [[0, 1, 1, 1, 1, 1],
                      [1, 1, 0, 1, 0, 0],
                      [0, 1, 1, 1, 1, 0],
                      [1, 0, 0, 0, 0, 0],
                      [1, 1, 0, 0, 0, 0],
                      [0, 1, 0, 0, 0, 0]]),
                    (([[0, 1, 1, 1, 0, 0],
                       [1, 0, 0, 1, 1, 0],
                       [0, 1, 0, 0, 0, 0],
                       [1, 1, 1, 1, 1, 1],
                       [1, 0, 0, 1, 1, 0],
                       [1, 0, 0, 1, 1, 1]], 10),
                     [[1, 1, 1, 1, 1, 1],
                      [0, 1, 0, 0, 0, 0],
                      [1, 1, 0, 0, 0, 0],
                      [1, 0, 0, 0, 0, 0],
                      [1, 0, 0, 0, 0, 0],
                      [1, 0, 0, 0, 0, 0]]),
                    (([[0, 0, 0, 1, 0, 0],
                       [1, 0, 1, 0, 1, 1],
                       [1, 1, 0, 1, 0, 1],
                       [0, 1, 0, 0, 1, 1],
                       [0, 0, 0, 1, 0, 0],
                       [1, 0, 0, 1, 1, 0]], 0),
                     [[0, 0, 0, 1, 0, 0],
                      [1, 0, 1, 0, 1, 1],
                      [1, 1, 0, 1, 0, 1],
                      [0, 1, 0, 0, 1, 1],
                      [0, 0, 0, 1, 0, 0],
                      [1, 0, 0, 1, 1, 0]])]),
        "ex6_1" : (cknml, [(2, 1), (36, 18), (62491, 5681)]),
        "ex6_2" : (cknml, [((4, 6), 2), ((144, 132), 12), ((62491, 14630), 209)]),
        "ex6_3" : (cknml, [(6, 3), (132, 8), (62491, 16)]),
        "ex6_4" : (cknml,
                   [((1, 0.2, 0.3, 0.01, 10),
                     [0.999, 0.998003997, 0.9970119690599161, 0.9960238943986897,
                      0.9950397513928476, 0.9940595185750775, 0.9930831746328185,
                      0.9921106984068677, 0.9911420688900013, 0.9901772652256107]),
                    ((1, 0.8, 0.2, 0.03, 10),
                     [1.018, 1.036214056, 1.054640755924888,
                      1.0732785313227384, 1.0921256552396943,
                      1.1111802402844506, 1.1304402368928859,
                      1.1499034318031964, 1.1695674467516366,
                      1.189429737398669]),
                    ((1, 0.5, 0.7, 0.5, 10),
                     [0.9, 0.8415, 0.8040322125, 0.7787765360668242,
                      0.7611981574886457, 0.748699774623369, 0.739681744896832,
                      0.7331070018142724, 0.7282776956296514, 0.7247111788539919])]),
        "ex6_5" : (cknml,
                   [((lambda x: x * x, 0.01, 0, 2), 2.646700000000006),
                    ((lambda x: math.cos(x),
                      0.0001, 0, 3.141592653589793), 9.265358959514573e-05),
                    ((lambda x: math.log(x), 0.01, 1, 10), 14.014330504503139)]),
        "ex8_3" : (cknml, [(0, 0), (20, 210), (1000, 500500)]),
        "ex8_4" : (cknml,
                   [((2, 10), 1024), ((3, 20), 3486784401), ((1, 1000000000), 1)]),
        "ex8_5" : (cknml, [(1, [1, 0, 1]),
                           (2, [1, 0, 1, 0, 0, 0, 1, 0, 1]),
                           (3, [1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
                                0, 1, 0, 1, 0, 0, 0, 1, 0, 1])]),
        "ex8_6" : (cknml,
                   [(1, [[0, 1, 0], [1, 1, 1], [0, 1, 0]]),
                    (2, [[0, 0, 0, 0, 1, 0, 0, 0, 0],
                         [0, 0, 0, 1, 1, 1, 0, 0, 0],
                         [0, 0, 0, 0, 1, 0, 0, 0, 0],
                         [0, 1, 0, 0, 1, 0, 0, 1, 0],
                         [1, 1, 1, 1, 1, 1, 1, 1, 1],
                         [0, 1, 0, 0, 1, 0, 0, 1, 0],
                         [0, 0, 0, 0, 1, 0, 0, 0, 0],
                         [0, 0, 0, 1, 1, 1, 0, 0, 0],
                         [0, 0, 0, 0, 1, 0, 0, 0, 0]]),
                    (3, [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,
                          1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
                          1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,
                          1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
                         [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
                          0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                         [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
                         [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
                          1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0],
                         [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
                          1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                         [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0,
                          1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0],
                         [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
                         [0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
                          0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0],
                         [0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,
                          1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
                          1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0,
                          1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                         [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
                          0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])]),
        "ex8_7" : (cknml, [(5, 5), (8, 21), (11, 89)]),
        "ex8_8" : (ckround(2),
                   [(10000, 0.78), (100000, 0.78), (50000, 0.78)]),
        "ex8_9" : (ckround(2),
                   [(10000, 1.0), (100000, 1.0), (50000, 1.0)]),
        "ex8_10" : (ckround(2),
                    [(10000, 0.61), (100000, 0.61), (50000, 0.61)]),
        "ex9_1" : (cknml,
                   [(([1, 3, 4, 10, 13, 15], 8), -1),
                    (([1, 3, 4, 10, 13, 15], 15), 5),
                    (([1, 3, 4, 10, 13, 15], 1), 0)]),
        "ex9_2" : (cknml,
                   [(([1, 3, 4, 10, 13, 15], 0, 8), 3),
                    (([1, 3, 4, 10, 13, 15], 4, 15), 4),
                    (([1, 3, 4, 10, 13, 15], 3, 11), 3)]),
        "ex9_3" : (cknml,
                   [(([1, 1, 1, 2, 2, 4, 4, 4, 4, 8, 9, 9], 9), 2),
                    (([1, 1, 1, 2, 2, 4, 4, 4, 4, 8, 9, 9], 4), 4),
                    (([1, 1, 1, 2, 2, 4, 4, 4, 4, 8, 9, 9], 0), 0)]),
        "ex9_4" : (cknml,
                   [(([1, 3, 4, 8, 9], [2, 3, 4, 9, 11]), [3, 4, 9]),
                    (([2, 3, 4, 9, 11], [1, 3, 4, 8, 9]), [3, 4, 9]),
                    (([1, 2, 3, 4, 9, 11], [1, 2, 3, 4, 9, 11]),
                     [1, 2, 3, 4, 9, 11])]),
        "ex9_5" : (cknml,
                   [(([1, 3, 4, 8, 9, 2, 3, 4, 9, 11], 3), [1, 2, 3]),
                    (([2, 3, 4, 9, 11, 1, 3, 4, 8, 9], 4), [1, 2, 3, 3]),
                    (([1, 2, 3, 4, 9, 11, 1, 2, 3, 4, 9, 11], 5),
                     [1, 1, 2, 2, 3])]),
        "ex9_6" : (cknml,
                   [([1, 3, 4, 8, 9, 2, 3, 4, 9, 11], [1, 2, 3, 4, 8, 9, 11]),
                    ([2, 3, 4, 9, 11, 1, 3, 4, 8, 9], [1, 2, 3, 4, 8, 9, 11]),
                    ([1, 2, 3, 4, 9, 11, 1, 2, 3, 4, 9, 11],
                     [1, 2, 3, 4, 9, 11])]),
        "ex11_1" : (cknml,
                    [((lambda x: x * x, 0.01, 2), 4.009999999999891),
                     ((lambda x: math.sin(x), 0.001, 3.141592653589793),
                      -0.9999998333332315),
                     ((lambda x: math.log(x), 0.0001, 2), 0.49998750041746476)]),
        "ex11_3" : (cknml,
                    [((0.3141592653589793, 0.5, 0.1, 10),
                      [0.30810253226923034, 0.2961020782830185,
                       0.2783824590703004, 0.2552767453300406,
                       0.22722177296249638, 0.19475147760962455,
                       0.1584881370100367, 0.11913141714530776,
                       0.0774452406972381, 0.034242654437896224]),
                     ((1.5707963267948966, 0.1, 0.5, 10),
                      [-0.8792036732051032, -1.4421371007892005,
                       0.42467976224454373, 1.2820255468405728,
                       -0.20918556029627666, -1.191621622640656,
                       0.10191988909840743, 1.1461897544654813,
                       -0.041982538242173906, -1.1273278244764509]),
                     ((0, 0.1, 1, 10),
                      [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])]),
        "ex12_1" : (cknml,
                    [([10, 4, 13, 7, 11, 10, 1, 12], False),
                     ([17, 9, 4, 16, 9, 6, 7, 19, 4, 17], True),
                     ([1, 14, 4, 8, 1, 9, 19, 17, 17, 1, 10, 16, 14, 14, 3],
                      True)]),
        "ex12_2" : (cknml,
                    [(([13, 5, 5, 9, 7, 1, 8, 8], 8), 33),
                     (([15, 8, 15, 7, 17, 14, 17, 19, 1, 1], 10), 67),
                     (([3, 2, 1, 2, 4, 14, 4, 1, 19, 10, 1, 17, 15, 16, 10], 15),
                      71)]),
        "ex12_3" : (cknml,
                    [((lambda i,j: max(110 + 20 * (j - i), 18 * (j - i) ** 2), 20),
                      1170),
                     ((lambda i,j:
                       max(110 + 10 * (j - i) ** 1.5, 18 * (j - i) ** 2), 20),
                      1110.284271247462),
                     ((lambda i,j:
                       max(110 + 10 * (j - i) ** 0.7, 18 * (j - i) ** 1.5), 20),
                      720.0)]),
        "ex12_4" : (cknml,
                    [((0.2, 0.8, 11, 3), 0.0),
                     ((0.2, 0.8, 12, 3), 0.04865392640000005),
                     ((0.4, 0.6, 13, 6), 0.12421693440000002)])
    }

