.\" Man page generated from reStructuredText.
.
.TH "WAAS_CUSTOM-PROTECTION-RULE_CREATE" "1" "Oct 15, 2019" "2.6.9" "OCI CLI Command Reference"
.SH NAME
waas_custom-protection-rule_create \- 
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH DESCRIPTION
.sp
Creates a new Custom Protection rule in the specified compartment.
.SH USAGE
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
oci waas custom\-protection\-rule create [OPTIONS]
.ft P
.fi
.UNINDENT
.UNINDENT
.SH REQUIRED PARAMETERS
.INDENT 0.0
.TP
.B \-\-compartment\-id, \-c [text]
.UNINDENT
.sp
The \fI\%OCID\fP <\fBhttps://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm\fP> of the compartment in which to create the Custom Protection rule.
.INDENT 0.0
.TP
.B \-\-display\-name [text]
.UNINDENT
.sp
A user\-friendly name for the Custom Protection rule.
.INDENT 0.0
.TP
.B \-\-template [text]
.UNINDENT
.sp
The template text of the Custom Protection rule. The syntax is based on ModSecurity Rule Language. Additionaly it needs to include two variables / placeholders which will be replaced during publishing.
.INDENT 0.0
.IP \(bu 2
\fB{{mode}}\fP \- rule action, defined by user in UI, like \fIOFF\fP, \fIDETECT\fP or \fIBLOCK\fP\&.
.IP \(bu 2
\fB{{id_1}}\fP \- unique rule ID which identifies a \fISecRule\fP, generated by the system. Multiple IDs can be used by increasing the number of the variable for every \fISecRule\fP defined in the template.
.UNINDENT
.sp
\fIExample usage:\fP   \fB\(ga   SecRule REQUEST_COOKIES "regex matching SQL injection \- part 1/2" \e           "phase:2,                                                 \e           msg:\(aqDetects chained SQL injection attempts 1/2.\(aq,        \e           id: {{id_1}},                                             \e           ctl:ruleEngine={{mode}},                                  \e           deny"   SecRule REQUEST_COOKIES "regex matching SQL injection \- part 2/2" \e           "phase:2,                                                 \e           msg:\(aqDetects chained SQL injection attempts 2/2.\(aq,        \e           id: {{id_2}},                                             \e           ctl:ruleEngine={{mode}},                                  \e           deny"   \(ga\fP   The example contains two \fISecRules\fP each having distinct regex expression to match   \fICookie\fP header value during second input analysis phase.   The disruptive \fIdeny\fP action takes effect only when \fI{{mode}}\fP is set to \fIBLOCK\fP\&.   The message is logged either when \fI{{mode}}\fP is set to \fIDETECT\fP or \fIBLOCK\fP\&.
.INDENT 0.0
.INDENT 3.5
For more information about ModSecurity\(aqs open source WAF rules, see \fI\%Mod Security\(aqs documentation\fP <\fBhttps://www.modsecurity.org/CRS/Documentation/making.html\fP>\&.
.UNINDENT
.UNINDENT
.SH OPTIONAL PARAMETERS
.INDENT 0.0
.TP
.B \-\-defined\-tags [complex type]
.UNINDENT
.sp
Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see \fI\%Resource Tags\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm\fP>\&.
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"Operations": {"CostCenter": "42"}}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-description [text]
.UNINDENT
.sp
A description for the Custom Protection rule.
.INDENT 0.0
.TP
.B \-\-freeform\-tags [complex type]
.UNINDENT
.sp
Free\-form tags for this resource. Each tag is a simple key\-value pair with no predefined name, type, or namespace. For more information, see \fI\%Resource Tags\fP <\fBhttps://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm\fP>\&.
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"Department": "Finance"}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This is a complex type whose value must be valid JSON. The value can be provided as a string on the command line or passed in as a file using
the \fI\%file://path/to/file\fP syntax.
.sp
The \fB\-\-generate\-param\-json\-input\fP option can be used to generate an example of the JSON which must be provided. We recommend storing this example
in a file, modifying it as needed and then passing it back in via the \fI\%file://\fP syntax.
.INDENT 0.0
.TP
.B \-\-from\-json [text]
.UNINDENT
.sp
Provide input to this command as a JSON document from a file using the \fI\%file://path\-to/file\fP syntax.
.sp
The \fB\-\-generate\-full\-command\-json\-input\fP option can be used to generate a sample json file to be used with this command option. The key names are pre\-populated and match the command option names (converted to camelCase format, e.g. compartment\-id \-\-> compartmentId), while the values of the keys need to be populated by the user before using the sample file as an input to this command. For any command option that accepts multiple values, the value of the key can be a JSON array.
.sp
Options can still be provided on the command line. If an option exists in both the JSON document and the command line then the command line specified value will be used.
.sp
For examples on usage of this option, please see our "using CLI with advanced JSON options" link: \fI\%https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/cliusing.htm#AdvancedJSONOptions\fP
.INDENT 0.0
.TP
.B \-\-max\-wait\-seconds [integer]
.UNINDENT
.sp
The maximum time to wait for the resource to reach the lifecycle state defined by \fB\-\-wait\-for\-state\fP\&. Defaults to 1200 seconds.
.INDENT 0.0
.TP
.B \-\-wait\-for\-state [text]
.UNINDENT
.sp
This operation creates, modifies or deletes a resource that has a defined lifecycle state. Specify this option to perform the action and then wait until the resource reaches a given lifecycle state. Multiple states can be specified, returning on the first state. For example, \fB\-\-wait\-for\-state\fP SUCCEEDED \fB\-\-wait\-for\-state\fP FAILED would return on whichever lifecycle state is reached first. If timeout is reached, a return code of 2 is returned. For any other error, a return code of 1 is returned.
.sp
Accepted values are:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ACTIVE, CREATING, DELETED, DELETING, FAILED, UPDATING
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B \-\-wait\-interval\-seconds [integer]
.UNINDENT
.sp
Check every \fB\-\-wait\-interval\-seconds\fP to see whether the resource to see if it has reached the lifecycle state defined by \fB\-\-wait\-for\-state\fP\&. Defaults to 30 seconds.
.SH GLOBAL PARAMETERS
.sp
Use \fBoci \-\-help\fP for help on global parameters.
.sp
\fB\-\-auth\fP, \fB\-\-cert\-bundle\fP, \fB\-\-cli\-rc\-file\fP, \fB\-\-config\-file\fP, \fB\-\-debug\fP, \fB\-\-defaults\-file\fP, \fB\-\-endpoint\fP, \fB\-\-generate\-full\-command\-json\-input\fP, \fB\-\-generate\-param\-json\-input\fP, \fB\-\-help\fP, \fB\-\-no\-retry\fP, \fB\-\-opc\-client\-request\-id\fP, \fB\-\-opc\-request\-id\fP, \fB\-\-output\fP, \fB\-\-profile\fP, \fB\-\-query\fP, \fB\-\-raw\-output\fP, \fB\-\-region\fP, \fB\-\-request\-id\fP, \fB\-\-version\fP, \fB\-?\fP, \fB\-d\fP, \fB\-h\fP, \fB\-v\fP
.SH AUTHOR
Oracle
.SH COPYRIGHT
2016, 2019, Oracle
.\" Generated by docutils manpage writer.
.
