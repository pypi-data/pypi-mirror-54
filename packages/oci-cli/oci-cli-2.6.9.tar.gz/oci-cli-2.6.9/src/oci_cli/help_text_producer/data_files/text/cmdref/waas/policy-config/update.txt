"update"
********


Description
===========

Updates the configuration for a WAAS policy. Only the fields specified
in the request body will be updated; all other properties will remain
unchanged.


Usage
=====

   oci waas policy-config update [OPTIONS]


Required Parameters
===================

--waas-policy-id [text]

The OCID of the WAAS policy.


Optional Parameters
===================

--certificate-id [text]

The OCID of the SSL certificate to use if HTTPS is supported.

--cipher-group [text]

The cipher group - **DEFAULT:** Cipher group supports TLS 1.0, TLS
1.1, TLS 1.2, TLS 1.3 protocols. It has the following ciphers enabled:
*ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-
AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-
SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256
:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA
:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-
AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-
AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-
AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-
SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA
:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-
DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA*

Accepted values are:

   DEFAULT

--client-address-header [text]

The HTTP header used to pass the client IP address from the CDN if
*isBehindCdn* is enabled. This feature consumes the header and its
value as the true client IP address. It does not create the header.
Using trusted chains (for example *X-Client-Ip: 11.1.1.1, 13.3.3.3*),
the last IP address in the list will be used as true client IP
address. In case of multiple headers with the same name, the first one
will be used. If the header is not present it will use the connecting
IP address as the true client IP address. It's assumed that CDN sets
the correct client IP address and prevents spoofing.

* **X_FORWARDED_FOR:** Corresponds to *X-Forwarded-For* header name.

* **X_CLIENT_IP:** Corresponds to *X-Client-Ip* header name.

* **X_REAL_IP:** Corresponds to *X-Real-Ip* header name.

* **CLIENT_IP:** Corresponds to *Client-Ip* header name.

* **TRUE_CLIENT_IP:** Corresponds to *True-Client-Ip* header name.

Accepted values are:

   CLIENT_IP, TRUE_CLIENT_IP, X_CLIENT_IP, X_FORWARDED_FOR, X_REAL_IP

--force

Perform update without prompting for confirmation.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id -->
compartmentId), while the values of the keys need to be populated by
the user before using the sample file as an input to this command. For
any command option that accepts multiple values, the value of the key
can be a JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our "using CLI with
advanced JSON options" link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--if-match [text]

For optimistic concurrency control. In the *PUT* or *DELETE* call for
a resource, set the *if-match* parameter to the value of the etag from
a previous *GET* or *POST* response for that resource. The resource
will be updated or deleted only if the etag provided matches the
resource's current etag value.

--is-behind-cdn [boolean]

Enable or disable the use of CDN. It allows to specify true client IP
address if clients do not connect directly to us.

--is-cache-control-respected [boolean]

Enable or disable automatic content caching based on the response
*cache-control* header. This feature enables the origin to act as a
proxy cache. Caching policies are usually defined using *cache-
control* header. For example *cache-control: max-age=120* means that
the returned resource is valid for 120 seconds. Caching rules will
overwrite this setting.

--is-https-enabled [boolean]

Enable or disable HTTPS support. If true, a *certificateId* is
required. If unspecified, defaults to *false*.

--is-https-forced [boolean]

Force HTTP to HTTPS redirection. If unspecified, defaults to *false*.

--is-origin-compression-enabled [boolean]

Enable or disable GZIP compression of origin responses. If enabled,
the header *Accept-Encoding: gzip* is sent to origin, otherwise -
empty *Accept-Encoding:* header is used.

--is-response-buffering-enabled [boolean]

Enable or disable buffering of responses from the origin. Buffering
improves overall stability in case of network issues, but slightly
increases Time To First Byte.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--tls-protocols [text]

A list of allowed TLS protocols. Only applicable when HTTPS support is
enabled. It affects client's connection to the edge nodes. The most
secure TLS version will be chosen. - **TLS_V1:** corresponds to TLS
1.0 specification.

* **TLS_V1_1:** corresponds to TLS 1.1 specification.

* **TLS_V1_2:** corresponds to TLS 1.2 specification.

* **TLS_V1_3:** corresponds to TLS 1.3 specification.

Enabled TLS protocols must go in a row. For example if TLS_v1_1 and
TLS_V1_3 are enabled, TLS_V1_2 must be enabled too.

Accepted values are:

   TLS_V1, TLS_V1_1, TLS_V1_2, TLS_V1_3

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, SUCCEEDED

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
to see if it has reached the state defined by "--wait-for-state".
Defaults to 30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth", "--cert-bundle", "--cli-rc-file", "--config-file", "--
debug", "--defaults-file", "--endpoint", "--generate-full-command-
json-input", "--generate-param-json-input", "--help", "--no-retry", "
--opc-client-request-id", "--opc-request-id", "--output", "--profile",
"--query", "--raw-output", "--region", "--request-id", "--version",
"-?", "-d", "-h", "-v"
