---
- name: Set the vm name
  set_fact:
    vm_name: "{{res_def['vm_name']}}"

- name: Set the vn name
  set_fact:
    vn_name: "{{res_def['vm_name']+ '-' + uhash + '_' }}" 

- name: Set resource group
  set_fact:
    resource_group: "{{ res_def['resource_group'] }}"

- name: Set subnet name
  set_fact:
    subnet_name: "{{ vn_name + uhash}}"

- name: Creating virtual network auomatically...
  include: provision_azure_virtual_network.yml name={{vn_name}} resource_group={{resource_group}}
  when: res_def['virtual_network_name'] is not defined

- name: Creating virtual subnet automatically...
  include: provision_azure_virtual_subnet.yml name={{subnet_name}} vs_vn_name={{vn_name}} resource_group={{resource_group}}
  when: res_def['virtual_network_name'] is not defined

- name: Make a default image
  set_fact: 
    default_img:
      offer: CoreOS
      publisher: CoreOS
      sku: Stable
      version: latest

- name: "Set public images when public image is defined"
  set_fact:
    pub_img: "{{res_def['public_image']}}"
  when: res_def['public_image'] is defined

- name: "Set default public images"
  set_fact:
    pub_img: "{{default_img}}"
  when: res_def['public_image'] is not defined  

- name: Set image
  set_fact:
    image: "{{pub_img}}"
    when: res_def['private_image'] is not defined   

- name: Set image
  set_fact: 
    image: "{{res_def['private_image']}}"
  when: res_def['private_image'] is defined     

- name: "Generate tempfile"
  tempfile:
    suffix: yml
  register: parsed_defaults

- name: "Parse default variable file"
  template:
    src: "../files/defaults.yml"
    dest: "{{ parsed_defaults.path }}"

- name: "Load default variables"
  include_vars: "{{ parsed_defaults.path }}"


- name: set public key
  set_fact:
    ssh_public_keys:
      - path: "/home/{{ res_def['vm_username'] | default(linchpinUsername) }}/.ssh/authorized_keys"
        key_data: "{{ res_def['public_key']}}"
  when: res_def['public_key'] is defined

- name: set public key
  set_fact:
    ssh_public_keys: null
  when: res_def['public_key'] is not defined

- name: "Provisioning Azure VM when not async"
  azure_rm_virtualmachine:
    client_id: "{{ auth_var['client_id'] | default(omit) }}"
    tenant: "{{ auth_var['tenant'] | default(omit) }}"
    secret: "{{ auth_var['secret'] | default(omit) }}"
    subscription_id: "{{ auth_var['subscription_id'] | default(omit) }}"
    admin_username: "{{ res_def['vm_username'] | default(linchpinUsername) }}"
    admin_password: "{{ res_def['vm_password'] | default(linchpinPassword) }}"
    resource_group: "{{ res_def['resource_group'] | default(omit) }}"
    ssh_public_keys: "{{ssh_public_keys}}"
    vm_size: "{{ res_def['vm_size'] | default('Standard_DS1_v2') }}"
    name: "{{ res_def['vm_name'] | default(omit) }}"
    virtual_network_name: "{{res_def['virtual_network_name']|default(vn_name)}}"
    image: "{{ image | default(omit) }}"
  register: res_def_output
  when: not _async
  no_log: "{{ not debug_mode }}"

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_azure_vm: "{{ topology_outputs_azure_vm + [res_def_output.ansible_facts.azure_vm] }}"
  when: res_def_output['changed'] == true and not _async

- name: "Async:: Provisioning Azure VM"
  azure_rm_virtualmachine:
    client_id: "{{ auth_var['client_id'] | default(omit) }}"
    tenant: "{{ auth_var['tenant'] | default(omit) }}"
    secret: "{{ auth_var['secret'] | default(omit) }}"
    subscription_id: "{{ auth_var['subscription_id'] | default(omit) }}"
    admin_username: "{{ res_def['vm_username'] | default(linchpinUsername) }}"
    admin_password: "{{ res_def['vm_password'] | default(linchpinPassword) }}"
    resource_group: "{{ res_def['resource_group'] | default(omit) }}"
    vm_size: "{{ res_def['vm_size'] | default('Standard_DS1_v2') }}"
    virtual_network_name: "{{res_def['virtual_network_name']|default(vn_name)}}"
    name: "{{ res_def['vm_name'] | default(omit) }}"
    image: "{{ image | default(omit) }}"
  async: "{{ async_timeout }}"
  poll: 0
  register: res_def_output
  when: _async
  no_log: "{{ not debug_mode }}"

- name: "Async:: Append outputitem to topology_outputs"
  set_fact:
    async_outputs_azure_vm: "{{ async_outputs_azure_vm + [res_def_output.ansible_facts.azure_vm] }}"
  when: _async


- name: "Add type to resource"
  set_fact:
    topology_outputs_azure_vm: "{{ topology_outputs_azure_vm | add_res_data(lookup('vars', 'role_name'), res_def['role']) }}"


- name: "Async:: Add type to resource"
  set_fact:
    async_outputs_azure_vm: "{{ async_outputs_azure_vm | add_res_data(lookup('vars', 'role_name'), res_def['role']) }}"
  when: _async
