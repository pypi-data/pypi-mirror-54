!function(a){"use strict";a.module("confidantApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap","confidant.common","confidant.routes"]).controller("ConfidantMainCtrl",["$scope","$http","common.userinfo","common.clientconfig",function(a,b,c,d){a.user=c.get(),d.get().$promise.then(function(c){a.clientconfig=c,b.defaults.xsrfCookieName=c.generated.xsrf_cookie_name})}]).config(["$httpProvider","$compileProvider",function(a,b){a.interceptors.push("common.HttpEventInterceptor"),b.debugInfoEnabled(!1)}])}(window.angular),function(a){"use strict";a.module("confidant.common",["confidant.common.controllers","confidant.common.directives","confidant.common.services"])}(window.angular),function(a){"use strict";a.module("confidant.common.constants",[]).constant("CONFIDANT_URLS",{USEREMAIL:"v1/user/email",DATAKEY:"v1/datakey",SERVICE:"v1/services/:id",SERVICES:"v1/services",GRANTS:"v1/grants/:id",ARCHIVE_SERVICES:"v1/archive/services",ARCHIVE_SERVICE_REVISIONS:"v1/archive/services/:id/:revision",CREDENTIAL:"v1/credentials/:id",CREDENTIAL_SERVICES:"v1/credentials/:id/services",CREDENTIALS:"v1/credentials",ARCHIVE_CREDENTIALS:"v1/archive/credentials",ARCHIVE_CREDENTIAL_REVISIONS:"v1/archive/credentials/:id/:revision",BLIND_CREDENTIAL:"v1/blind_credentials/:id",BLIND_CREDENTIAL_SERVICES:"v1/blind_credentials/:id/services",BLIND_CREDENTIALS:"v1/blind_credentials",BLIND_ARCHIVE_CREDENTIALS:"v1/archive/blind_credentials",BLIND_ARCHIVE_CREDENTIAL_REVISIONS:"v1/archive/blind_credentials/:id/:revision",ROLES:"v1/roles",VALUE_GENERATOR:"v1/value_generator",CLIENT_CONFIG:"v1/client_config"}).constant("common.APP_EVENTS",{START_REQUEST:"START_REQUEST",END_REQUEST:"END_REQUEST",SHOW_SPINNER:"SHOW_SPINNER",HIDE_SPINNER:"HIDE_SPINNER",STATE_READY:"eventStateInitComplete"})}(window.angular),function(a){"use strict";a.module("confidant.common.controllers.NavCtrl",["confidant.common.services.NavService"]).controller("common.NavCtrl",["$scope","common.NavService",function(a,b){a.getViewLocation=b.getViewLocation,a.$watch("getViewLocation()",function(b,c){b!==c&&(a.viewLocation=b)}),a.getHistoryView=b.getHistoryView,a.$watch("getHistoryView()",function(b,c){b!==c&&(a.historyView=b)})}])}(window.angular),function(a){"use strict";a.module("confidant.common.controllers",["confidant.common.controllers.NavCtrl"])}(angular),function(a){"use strict";a.module("confidant.common.directives",["confidant.common.directives.loadingSpinner"])}(window.angular),function(a){"use strict";a.module("confidant.common.directives.loadingSpinner",["confidant.common.constants","confidant.common.services.$body","confidant.common.services.SpinOn"]).directive("loadingSpinner",["$body","common.APP_EVENTS","common.SpinOn",function(a,b,c){return{restrict:"A",link:function(d,e,f){var g=!1,h=f.loadingSpinner,i=new c(e,function(){h&&a.addClass(h),e.show(),g=!0},function(){h&&a.removeClass(h),e.hide(),g=!1},{length:5,width:3,radius:11,zIndex:8e3,position:"fixed",top:"50%",left:"50%"}),j=function(){g||i.start()},k=function(){g&&i.stop()};d.$on(b.START_REQUEST,j),d.$on(b.SHOW_SPINNER,j),d.$on(b.END_REQUEST,k),d.$on(b.HIDE_SPINNER,k)}}}])}(window.angular),function(a){"use strict";a.module("confidant.common.services.NavService",[]).service("common.NavService",["$rootScope",function(a){var b=this;this.viewLocation="",this.historyView="",a.$on("$stateChangeSuccess",function(a,c){c.data&&(b.viewLocation=c.data.viewLocation,b.historyView=c.data.historyView)}),this.getViewLocation=function(){return b.viewLocation},this.getHistoryView=function(){return b.historyView}}])}(window.angular),function(a){"use strict";a.module("confidant.common.services.$body",[]).service("$body",["$document",function(a){return a.find("body")}])}(window.angular),function(a){"use strict";a.module("confidant.common.services.clientconfig",["ngResource","confidant.common.constants"]).factory("common.clientconfig",["$resource","CONFIDANT_URLS",function(a,b){return a(b.CLIENT_CONFIG)}])}(window.angular),function(a,b){"use strict";a.module("confidant.common.services.http",["confidant.common.constants"]).factory("common.HttpEventInterceptor",["$q","$window","$rootScope","$log","common.APP_EVENTS",function(a,c,d,e,f){function g(a){return b.isUndefined(a.notify)||!!a.notify}function h(a){j+=1,g(a)&&(k=!0,d.$broadcast(f.START_REQUEST))}function i(){j>0&&(j-=1)<1&&k&&(d.$broadcast(f.END_REQUEST),k=!1)}var j=0,k=!1;return{request:function(a){return h(a),a},requestError:function(b){return i(),a.reject(b)},response:function(a){return i(),a},responseError:function(b){var c=b.status;return i(),401==c&&(window.location.href="loggedout"),a.reject(b)}}}])}(window.angular,window._),function(a){"use strict";a.module("confidant.common.services",["confidant.common.services.clientconfig","confidant.common.services.http","confidant.common.services.NavService","confidant.common.services.SpinOn","confidant.common.services.userinfo"])}(angular),function(a,b){"use strict";a.module("confidant.common.services.SpinOn",[]).service("common.SpinOn",["$window",function(a){return function(c,d,e,f){var g=b.assign({lines:13,length:4,width:2,radius:4,corners:1,rotate:0,direction:1,color:"#fff",speed:1,trail:60,shadow:!1,hwaccel:!0,className:"spinner",zIndex:2e9,top:"50%",left:"calc(100% - 25px)"},f||{}),h=new a.Spinner(g);return{start:function(){return d&&d(c),h.spin(c[0]),this},stop:function(){return h.stop(),e&&e(c),this},spinner:h}}}])}(window.angular,window._),function(a){"use strict";a.module("confidant.common.services.userinfo",["ngResource","confidant.common.constants"]).factory("common.userinfo",["$resource","CONFIDANT_URLS",function(a,b){return a(b.USEREMAIL)}])}(window.angular),function(a){"use strict";a.module("confidant.history.controllers.BlindCredentialHistoryCtrl",["ui.router","ngResource","xeditable","confidant.resources.services","confidant.history.services"]).controller("history.BlindCredentialHistoryCtrl",["$scope","$stateParams","$filter","$q","$log","$location","blindcredentials.credential","blindcredentials.archiveCredentialRevisions","history.ResourceArchiveService",function(b,c,d,e,f,g,h,i,j){function k(a,b){var c=e.defer(),d=a.get({id:b},function(){c.resolve(d)});return c.promise}b.$log=f,b.revisions=[];var l=c.blindCredentialId.split("-");b.blindCredentialRevision=parseInt(l.pop(),10),b.blindCredentialId=l.join("-"),i.get({id:b.blindCredentialId}).$promise.then(function(a){if(b.revisions=d("orderBy")(a.revisions,"revision",!0),b.currentRevision=parseInt(b.revisions[0].revision,10),b.isOnlyRevision=!1,b.isCurrentRevision=!1,1===b.currentRevision)b.isOnlyRevision=!0,b.diffRevision=b.currentRevision,h.get({id:c.blindCredentialId}).$promise.then(function(a){b.currentBlindCredential=a,b.diffBlindCredential=a},function(){b.currentBlindCredential=null,b.diffBlindCredential=null});else{b.blindCredentialRevision===b.currentRevision?b.diffRevision=b.currentRevision-1:b.diffRevision=b.blindCredentialRevision;var f=k(h,b.blindCredentialId+"-"+b.currentRevision),g=k(h,b.blindCredentialId+"-"+b.diffRevision);e.all([f,g]).then(function(a){b.currentBlindCredential=a[0],b.diffBlindCredential=a[1]},function(){b.currentBlindCredential=null,b.diffBlindCredential=null})}b.currentRevision===b.credentialRevision&&(b.isCurrentRevision=!0)}),b.revertToDiffRevision=function(){var c=e.defer();return a.equals(b.diffBlindCredential.name,b.currentBlindCredential.name)&&a.equals(b.diffBlindCredential.credential_keys,b.currentBlindCredential.credential_keys)&&a.equals(b.diffBlindCredential.credential_pairs,b.currentBlindCredential.credential_pairs)&&a.equals(b.diffBlindCredential.metadata,b.currentBlindCredential.metadata)&&a.equals(b.diffBlindCredential.enabled,b.currentBlindCredential.enabled)?(b.saveError="Can not revert to revision "+b.diffBlindCredential.revision+". No difference between it and current revision.",c.reject(),c.promise):(h.update({id:b.blindCredentialId},b.diffBlindCredential).$promise.then(function(a){c.resolve(),j.updateResourceArchive(),g.path("/history/blind_credential/"+a.id+"-"+a.revision)},function(a){500===a.status?(b.saveError="Unexpected server error.",f.error(a)):(b.saveError=a.data.error,"conflicts"in a.data&&(b.blindCredentialPairConflicts=a.data.conflicts)),c.reject()}),c.promise)}}])}(window.angular),function(a){"use strict";a.module("confidant.history.controllers.CredentialHistoryCtrl",["ui.router","ngResource","xeditable","confidant.resources.services","confidant.history.services"]).controller("history.CredentialHistoryCtrl",["$scope","$stateParams","$filter","$q","$log","$location","credentials.credential","credentials.archiveCredentialRevisions","history.ResourceArchiveService",function(b,c,d,e,f,g,h,i,j){function k(a,b){var c=e.defer(),d=a.get({id:b},function(){c.resolve(d)});return c.promise}b.$log=f,b.revisions=[];var l=c.credentialId.split("-");b.credentialRevision=parseInt(l.pop(),10),b.credentialId=l.join("-"),i.get({id:b.credentialId}).$promise.then(function(a){if(b.revisions=d("orderBy")(a.revisions,"revision",!0),b.currentRevision=parseInt(b.revisions[0].revision,10),b.isOnlyRevision=!1,b.isCurrentRevision=!1,1===b.currentRevision)b.isOnlyRevision=!0,b.diffRevision=b.currentRevision,h.get({id:c.credentialId}).$promise.then(function(a){b.currentCredential=a,b.diffCredential=a},function(){b.currentCredential=null,b.diffCredential=null});else{b.credentialRevision===b.currentRevision?b.diffRevision=b.currentRevision-1:b.diffRevision=b.credentialRevision;var f=k(h,b.credentialId+"-"+b.currentRevision),g=k(h,b.credentialId+"-"+b.diffRevision);e.all([f,g]).then(function(a){b.currentCredential=a[0],b.diffCredential=a[1]},function(){b.currentCredential=null,b.diffCredential=null})}b.currentRevision===b.credentialRevision&&(b.isCurrentRevision=!0)}),b.revertToDiffRevision=function(){var c=e.defer();return a.equals(b.diffCredential.name,b.currentCredential.name)&&a.equals(b.diffCredential.credential_pairs,b.currentCredential.credential_pairs)&&a.equals(b.diffCredential.metadata,b.currentCredential.metadata)&&a.equals(b.diffCredential.enabled,b.currentCredential.enabled)?(b.saveError="Can not revert to revision "+b.diffCredential.revision+". No difference between it and current revision.",c.reject(),c.promise):(h.update({id:b.credentialId},b.diffCredential).$promise.then(function(a){c.resolve(),j.updateResourceArchive(),g.path("/history/credential/"+a.id+"-"+a.revision)},function(a){500===a.status?(b.saveError="Unexpected server error.",f.error(a)):(b.saveError=a.data.error,"conflicts"in a.data&&(b.credentialPairConflicts=a.data.conflicts)),c.reject()}),c.promise)}}])}(window.angular),function(a){"use strict";a.module("confidant.history.controllers.ResourceHistoryCtrl",["ui.router","ngResource","xeditable","confidant.resources.services","confidant.history.services"]).controller("history.ResourceHistoryCtrl",["$scope","$log","$location","credentials.list","blindcredentials.list","history.ResourceArchiveService",function(a,b,c,d,e,f){a.showCredentials=!0,a.showBlindCredentials=!0,a.showServices=!0,d.get().$promise.then(function(b){a.credentialList=b.credentials},function(){a.credentialList=[]}),e.get().$promise.then(function(b){a.blindCredentialList=b.blind_credentials},function(){a.blindCredentialList=[]}),a.reformatId=function(a){return a.split("-")[0]},a.resourceRegexFilter=function(a,b){return function(c){return new RegExp(b,"ig").test(c[a])}},a.resourceTypeFilter=function(b){return function(c){return!("credential"!=c[b]||!a.showCredentials)||(!("blind_credential"!=c[b]||!a.showBlindCredentials)||!("service"!=c[b]||!a.showServices))}},a.gotoResource=function(a){"credential"===a.type?c.path("/history/credential/"+a.id):"blind_credential"===a.type?c.path("/history/blind_credential/"+a.id):"service"===a.type&&c.path("/history/service/"+a.id)},a.$log=b,a.getResourceArchive=f.getResourceArchive,a.$watch("getResourceArchive()",function(b,c){b!==c&&(a.resourceArchive=b)}),f.updateResourceArchive()}])}(window.angular),function(a,b){"use strict";a.module("confidant.history.controllers.ServiceHistoryCtrl",["ui.router","ngResource","xeditable","confidant.resources.services","confidant.history.services"]).controller("history.ServiceHistoryCtrl",["$scope","$stateParams","$filter","$q","$log","$location","services.service","services.archiveServiceRevisions","history.ResourceArchiveService",function(c,d,e,f,g,h,i,j,k){c.$log=g,c.revisions=[];var l=d.serviceId.split("-");c.serviceRevision=parseInt(l.pop(),10),c.serviceId=l.join("-"),j.get({id:c.serviceId}).$promise.then(function(a){c.revisions=e("orderBy")(a.revisions,"revision",!0),c.currentRevision=parseInt(c.revisions[0].revision,10),1===c.currentRevision?(c.isOnlyRevision=!0,c.diffRevision=c.currentRevision):c.serviceRevision===c.currentRevision?c.diffRevision=c.currentRevision-1:c.diffRevision=c.serviceRevision,c.currentRevision===c.serviceRevision&&(c.isCurrentRevision=!0)}),c.getServiceByRevision=function(a){return e("filter")(c.revisions,{revision:a})[0]},c.getCredentialName=function(a){var d="";return c.$parent.credentialList?d=b.result(b.find(c.$parent.credentialList,function(b){return 0===b.id.indexOf(a)}),"name"):d},c.getBlindCredentialName=function(a){var d="";return c.$parent.blindCredentialList?d=b.result(b.find(c.$parent.blindCredentialList,function(b){return 0===b.id.indexOf(a)}),"name"):d},c.revertToDiffRevision=function(){var b=c.getServiceByRevision(c.diffRevision),d=c.getServiceByRevision(c.currentRevision),e=f.defer();return a.equals(b.credentials,d.credentials)&&a.equals(b.blind_credentials,d.blind_credentials)&&a.equals(b.enabled,d.enabled)?(c.saveError="Can not revert to revision "+b.revision+". No difference between it and current revision.",e.reject(),e.promise):(i.update({id:c.serviceId},b).$promise.then(function(a){e.resolve(),k.updateResourceArchive(),h.path("/history/service/"+a.id+"-"+a.revision)},function(a){500===a.status?(c.saveError="Unexpected server error.",g.error(a)):(c.saveError=a.data.error,"conflicts"in a.data&&(c.credentialPairConflicts=a.data.conflicts)),e.reject()}),e.promise)}}])}(window.angular,window._),function(a){"use strict";a.module("confidant.history.controllers",["confidant.history.controllers.BlindCredentialHistoryCtrl","confidant.history.controllers.CredentialHistoryCtrl","confidant.history.controllers.ResourceHistoryCtrl","confidant.history.controllers.ServiceHistoryCtrl"])}(angular),function(a){"use strict";a.module("confidant.history",["confidant.history.controllers","confidant.history.services"])}(window.angular),function(a){"use strict";a.module("confidant.history.services.archive",["ngResource","confidant.resources.services"]).service("history.ResourceArchiveService",["$q","credentials.archiveList","blindcredentials.archiveList","services.archiveList",function(a,b,c,d){function e(b){var c=a.defer(),d=b.get(function(){c.resolve(d)});return c.promise}var f=this;this.resourceArchive=[],this.updateResourceArchive=function(){var g=e(b),h=e(c),i=e(d);a.all([g,h,i]).then(function(a){for(var b=a[0].credentials,c=a[1].blind_credentials,d=a[2].services,e=b.length;e--;)b[e].type="credential";for(var e=c.length;e--;)c[e].type="blind_credential";for(e=d.length;e--;){d[e].type="service";var g=d[e].id.split("-");g.pop(),d[e].name=g.join("-")}f.resourceArchive=b.concat(c),f.resourceArchive=f.resourceArchive.concat(d),f.resourceArchive.forEach(function(a){a.modified_date=new Date(a.modified_date)})},function(){f.resourceArchive=[]})},this.getResourceArchive=function(){return f.resourceArchive}}])}(window.angular),function(a){"use strict";a.module("confidant.history.services",["confidant.history.services.archive"])}(angular),function(a){"use strict";a.module("confidant.resources.controllers.BlindCredentialDetailsCtrl",["ui.router","ngResource","xeditable","confidant.resources.services"]).controller("resources.BlindCredentialDetailsCtrl",["$scope","$stateParams","$q","$log","$filter","$location","blindcredentials.credential","blindcredentials.services",function(a,b,c,d,e,f,g,h){a.$log=d,b.blindCredentialId?(h.get({id:b.blindCredentialId}).$promise.then(function(b){a.blindCredentialServices=b.services}),g.get({id:b.blindCredentialId}).$promise.then(function(b){a.blindCredential=b,a.shown=!1})):(a.blindCredential={name:"",enabled:!0},a.shown=!0)}])}(window.angular),function(a){"use strict";a.module("confidant.resources.controllers.BlindCredentialDocsCtrl",["ngResource","confidant.resources.services"]).controller("resources.BlindCredentialDocsCtrl",["$scope","$stateParams","$log","blindcredentials.credential",function(a,b,c,d){a.$log=c,d.get({id:b.blindCredentialId}).$promise.then(function(b){a.blindCredential=b})}])}(window.angular),function(a){"use strict";a.module("confidant.resources.controllers.CredentialDetailsCtrl",["ui.router","ngResource","xeditable","confidant.resources.services"]).directive("lowercase",["$parse",function(b){return{require:"ngModel",link:function(c,d,e,f){var g=function(b){void 0===b&&(b="");var c=a.lowercase(b);return c!==b&&(f.$setViewValue(c),f.$render()),c};f.$parsers.push(g),g(b(e.ngModel)(c))}}}]).controller("resources.CredentialDetailsCtrl",["$scope","$stateParams","$q","$log","$filter","$location","credentials.credential","credentials.credentials","credentials.services","credentials.valueGenerator",function(b,c,d,e,f,g,h,i,j,k){var l=null;b.$log=e,b.saveError="",b.credentialPairConflicts=null,c.credentialId?(j.get({id:c.credentialId}).$promise.then(function(a){b.credentialServices=a.services}),h.get({id:c.credentialId}).$promise.then(function(c){var d=[],e=[];a.forEach(c.credential_pairs,function(a,b){this.push({key:b,value:a})},d),c.credentialPairs=d,a.forEach(c.metadata,function(a,b){this.push({key:b,value:a})},e),c.credentialPairs=d,c.mungedMetadata=e,b.credential=c,l=a.copy(b.credential),b.shown=!1})):(b.credential={name:"",enabled:!0,credentialPairs:[{key:"",value:""}],mungedMetadata:[]},l=a.copy(b.credential),b.shown=!0),b.showValue=function(a){return a.shown?a.value:"***************"},b.toggleCredentialMask=function(a){a.shown?a.shown=!1:a.shown=!0},b.filterCredentialPair=function(a){return!0!==a.isDeleted},b.filterMetadata=function(a){return!0!==a.isDeleted},b.getCredentialByID=function(a){return f("filter")(b.$parent.credentialList,{id:a})[0]},b.getBlindCredentialByID=function(a){return f("filter")(b.$parent.blindCredentialList,{id:a})[0]},b.deleteCredentialPair=function(a){var c=f("filter")(b.credential.credentialPairs,{$$hashKey:a});c.length&&(c[0].isDeleted=!0)},b.addCredentialPair=function(){b.credential.credentialPairs.push({key:"",value:"",isNew:!0})},b.deleteMetadata=function(a){var c=f("filter")(b.credential.mungedMetadata,{$$hashKey:a});c.length&&(c[0].isDeleted=!0)},b.addMetadata=function(){b.credential.mungedMetadata.push({key:"",value:"",isNew:!0})},b.cancel=function(){b.credentialPairConflicts=null,b.saveError="",b.credential=a.copy(l)},b.saveCredential=function(){var c={},f=d.defer();b.credentialPairConflicts=null,c.name=b.credential.name,c.enabled=b.credential.enabled,c.documentation=b.credential.documentation,c.credential_pairs={},c.metadata={},b.saveError="";for(var j=b.credential.credentialPairs.length;j--;){var k=b.credential.credentialPairs[j];if(k.isDeleted)b.credential.credentialPairs.splice(j,1);else{if(k.key in c.credential_pairs)return b.saveError="Credential pair keys must be unique.",b.saveError;c.credential_pairs[k.key]=k.value}}for(var j=b.credential.mungedMetadata.length;j--;){var m=b.credential.mungedMetadata[j];if(m.isDeleted)b.credential.mungedMetadata.splice(j,1);else{if(m.key in c.metadata)return b.saveError="Metadata keys must be unique.",b.saveError;c.metadata[m.key]=m.value}}return a.equals(l,b.credential)?(b.saveError="No changes made.",f.reject(),f.promise):(b.credential.id?h.update({id:b.credential.id},c).$promise.then(function(c){var d=[],e=[];a.forEach(c.credential_pairs,function(a,b){this.push({key:b,value:a})},d),a.forEach(c.metadata,function(a,b){this.push({key:b,value:a})},e),c.credentialPairs=d,c.mungedMetadata=e,b.credential=c,l.name===b.credential.name&&l.enabled==b.credential.enabled||b.$emit("updateCredentialList"),l=a.copy(c),f.resolve()},function(a){500===a.status?(b.saveError="Unexpected server error.",e.error(a)):(b.saveError=a.data.error,"conflicts"in a.data&&(b.credentialPairConflicts=a.data.conflicts)),f.reject()}):i.create(c).$promise.then(function(a){b.$emit("updateCredentialList"),f.resolve(),g.path("/resources/credential/"+a.id)},function(a){500===a.status?(b.saveError="Unexpected server error.",e.error(a)):(b.saveError=a.data.error,"conflicts"in a.data&&(b.credentialPairConflicts=a.data.conflicts)),f.reject()}),f.promise)},b.generateValue=function(a){k.get().$promise.then(function(b){a.value=b.value})}}])}(window.angular),function(a){"use strict";a.module("confidant.resources.controllers.CredentialDocsCtrl",["ngResource","confidant.resources.services"]).controller("resources.CredentialDocsCtrl",["$scope","$stateParams","$log","credentials.credential",function(b,c,d,e){b.$log=d,e.get({id:c.credentialId}).$promise.then(function(c){var d=[];a.forEach(c.credential_pairs,function(a,b){this.push(b)},d),b.credentialPairKeys=d})}])}(window.angular),function(a){"use strict";a.module("confidant.resources.controllers.ResourceCtrl",["ui.router","ngResource","xeditable","confidant.resources.services"]).controller("resources.ResourceCtrl",["$scope","$stateParams","$q","$log","credentials.CredentialListService","blindcredentials.BlindCredentialListService","services.ServiceListService",function(a,b,c,d,e,f,g){a.$log=d,a.showDisabled=!1,a.getCredentialList=e.getCredentialList,a.$watch("getCredentialList()",function(b,c){b!==c&&(a.credentialList=b)}),a.$emit("updateCredentialList"),a.getBlindCredentialList=f.getBlindCredentialList,a.$watch("getBlindCredentialList()",function(b,c){b!==c&&(a.blindCredentialList=b)}),a.$emit("updateBlindCredentialList"),a.getServiceList=g.getServiceList,a.$watch("getServiceList()",function(b,c){b!==c&&(a.serviceList=b)}),a.$emit("updateServiceList"),a.resourceRegexFilter=function(a,b){return function(c){return new RegExp(b,"ig").test(c[a])}},a.resourceTypeFilter=function(b){return function(c){return!("credential"!=b||!a.showCredential)||(!("blind-credential"!=b||!a.showBlindCredential)||!("service"!=b||!a.showService))}}}])}(window.angular),function(a){"use strict";a.module("confidant.resources.controllers.ServiceDetailsCtrl",["ui.router","ngResource","xeditable","confidant.resources.services"]).controller("resources.ServiceDetailsCtrl",["$scope","$stateParams","$q","$log","$filter","$location","services.service","services.services","roles.list","services.grants",function(b,c,d,e,f,g,h,i,j,k){var l=null;b.showGrants=b.clientconfig.generated.kms_auth_manage_grants,b.$log=e,b.saveError="",b.newService=!1,b.credentialPairConflicts=null,b.aws_account_options=b.clientconfig.generated.aws_accounts,j.get().$promise.then(function(a){b.roles=a.roles},function(){b.roles=[]}),c.serviceId?(h.get({id:c.serviceId}).$promise.then(function(c){b.service=c,""!==b.aws_account_options[0]&&null!==b.service.account?b.aws_account_options.unshift(""):""===b.aws_account_options[0]&&null===b.service.account&&b.aws_account_options.shift(""),b.service.credentials||(b.service.credentials=[]),b.service.blind_credentials||(b.service.blind_credentials=[]),l=a.copy(b.service)}),b.showGrants?k.get({id:c.serviceId}).$promise.then(function(a){b.grants=a.grants}):b.grants=null):(b.shown=!0,b.service={id:"",credentials:[],blind_credentials:[],enabled:!0,account:null},l=a.copy(b.service),b.newService=!0,b.grants=null),b.getCredentialByID=function(a){return f("filter")(b.$parent.credentialList,{id:a})[0]},b.getBlindCredentialByID=function(a){return f("filter")(b.$parent.blindCredentialList,{id:a})[0]},b.filterCredentials=function(a){return!0!==a.isDeleted},b.filterCredentialOptions=function(c){var d=!1;return a.forEach(b.service.credentials,function(a){c.id===a.id&&(d=!0)}),!0===c.enabled||d},b.filterBlindCredentialOptions=function(c){var d=!1;return a.forEach(b.service.blind_credentials,function(a){c.id===a.id&&(d=!0)}),!0===c.enabled||d},b.deleteCredential=function(a){var c=f("filter")(b.service.credentials,{$$hashKey:a});c.length&&(c[0].isDeleted=!0)},b.deleteBlindCredential=function(a){var c=f("filter")(b.service.blind_credentials,{$$hashKey:a});c.length&&(c[0].isDeleted=!0)},b.addCredential=function(){b.service.credentials.push({id:"",name:"",isNew:!0})},b.addBlindCredential=function(){b.service.blind_credentials.push({id:"",name:"",isNew:!0})},b.cancel=function(){for(var c=b.service.credentials.length;c--;){var d=b.service.credentials[c];d.isDeleted&&delete d.isDeleted,d.isNew&&b.service.credentials.splice(c,1)}for(var c=b.service.blind_credentials.length;c--;){var e=b.service.blind_credentials[c];e.isDeleted&&delete e.isDeleted,e.isNew&&b.service.blind_credentials.splice(c,1)}b.credentialPairConflicts=null,b.saveError="",b.service=a.copy(l)},b.ensureGrants=function(){var a=d.defer();return b.grantUpdateError="",k.update({id:b.service.id}).$promise.then(function(c){b.grants=c.grants,a.resolve()},function(c){500===c.status?(b.saveError="Unexpected server error.",e.error(c)):b.grantUpdateError=c.data.error,a.reject()}),a.promise},b.checkNewServiceSave=function(a){var c=d.defer();return b.newService?h.get({id:a}).$promise.then(function(){b.saveError="Service with id "+a+" already exists. Cannot create new service."},function(a){404!==a.status&&(b.saveError="Failed to check if service already exists.")}).finally(function(){""!==b.saveError?c.reject():c.resolve()}):c.resolve(),c.promise},b.saveService=function(){var c={},f=d.defer();c.id=b.service.id,c.account=b.service.account,c.enabled=b.service.enabled,c.credentials=[],c.blind_credentials=[],b.credentialPairConflicts=null,b.saveError="";for(var i=b.service.credentials.length;i--;){var j=b.service.credentials[i];if(j.isDeleted)b.service.credentials.splice(i,1);else{if(c.credentials.indexOf(j.id)>-1)return b.saveError="Credentials must be unique.",b.saveError;c.credentials.push(j.id)}}for(var i=b.service.blind_credentials.length;i--;){var k=b.service.blind_credentials[i];if(k.isDeleted)b.service.blind_credentials.splice(i,1);else{if(c.blind_credentials.indexOf(k.id)>-1)return b.saveError="Credentials must be unique.",b.saveError;c.blind_credentials.push(k.id)}}return a.equals(l,b.service)?(b.saveError="No changes made.",f.reject(),f.promise):(h.update({id:b.service.id},c).$promise.then(function(c){b.$emit("updateServiceList"),b.service=c,l=a.copy(b.service),f.resolve(),b.newService&&g.path("/resources/service/"+c.id)},function(a){500===a.status?(b.saveError="Unexpected server error.",e.error(a)):(b.saveError=a.data.error,"conflicts"in a.data&&(b.credentialPairConflicts=a.data.conflicts)),f.reject()}),f.promise)}}])}(window.angular),function(a){"use strict";a.module("confidant.resources.controllers",["confidant.resources.controllers.BlindCredentialDetailsCtrl","confidant.resources.controllers.BlindCredentialDocsCtrl","confidant.resources.controllers.CredentialDetailsCtrl","confidant.resources.controllers.CredentialDocsCtrl","confidant.resources.controllers.ResourceCtrl","confidant.resources.controllers.ServiceDetailsCtrl"])}(angular),function(a){"use strict";a.module("confidant.resources",["confidant.resources.controllers","confidant.resources.services"])}(window.angular),function(a){"use strict";a.module("confidant.resources.services.blindcredentials",["ngResource","confidant.common.constants"]).factory("blindcredentials.list",["$resource","CONFIDANT_URLS",function(a,b){return a(b.BLIND_CREDENTIALS)}]).factory("blindcredentials.archiveList",["$resource","CONFIDANT_URLS",function(a,b){return a(b.BLIND_ARCHIVE_CREDENTIALS)}]).factory("blindcredentials.credential",["$resource","CONFIDANT_URLS",function(a,b){return a(b.BLIND_CREDENTIAL,{id:"@id"},{update:{method:"PUT",isArray:!1}})}]).factory("blindcredentials.archiveCredentialRevisions",["$resource","CONFIDANT_URLS",function(a,b){return a(b.BLIND_ARCHIVE_CREDENTIAL_REVISIONS,{id:"@id"})}]).factory("blindcredentials.services",["$resource","CONFIDANT_URLS",function(a,b){return a(b.BLIND_CREDENTIAL_SERVICES,{id:"@id"})}]).service("blindcredentials.BlindCredentialListService",["$rootScope","blindcredentials.list",function(a,b){var c=this;this.blindCredentialList=[],a.$on("updateBlindCredentialList",function(){b.get().$promise.then(function(a){c.blindCredentialList=a.blind_credentials})}),this.getBlindCredentialList=function(){return c.blindCredentialList}}])}(window.angular),function(a){"use strict";a.module("confidant.resources.services.confidantservices",["ngResource","confidant.common.constants"]).factory("services.list",["$resource","CONFIDANT_URLS",function(a,b){return a(b.SERVICES)}]).factory("services.archiveList",["$resource","CONFIDANT_URLS",function(a,b){return a(b.ARCHIVE_SERVICES)}]).factory("services.service",["$resource","CONFIDANT_URLS",function(a,b){return a(b.SERVICE,{id:"@id"},{update:{method:"PUT",isArray:!1}})}]).factory("services.grants",["$resource","CONFIDANT_URLS",function(a,b){return a(b.GRANTS,{id:"@id"},{update:{method:"PUT",isArray:!1}})}]).factory("services.archiveServiceRevisions",["$resource","CONFIDANT_URLS",function(a,b){return a(b.ARCHIVE_SERVICE_REVISIONS,{id:"@id"})}]).factory("services.services",["$resource","CONFIDANT_URLS",function(a,b){return a(b.SERVICES,{},{create:{method:"POST",isArray:!1}})}]).service("services.ServiceListService",["$rootScope","services.list",function(a,b){var c=this;this.serviceList=[],a.$on("updateServiceList",function(){b.get().$promise.then(function(a){c.serviceList=a.services})}),this.getServiceList=function(){return c.serviceList}}])}(window.angular),function(a){"use strict";a.module("confidant.resources.services.credentials",["ngResource","confidant.common.constants"]).factory("credentials.list",["$resource","CONFIDANT_URLS",function(a,b){return a(b.CREDENTIALS)}]).factory("credentials.archiveList",["$resource","CONFIDANT_URLS",function(a,b){return a(b.ARCHIVE_CREDENTIALS)}]).factory("credentials.credential",["$resource","CONFIDANT_URLS",function(a,b){return a(b.CREDENTIAL,{id:"@id"},{update:{method:"PUT",isArray:!1}})}]).factory("credentials.archiveCredentialRevisions",["$resource","CONFIDANT_URLS",function(a,b){return a(b.ARCHIVE_CREDENTIAL_REVISIONS,{id:"@id"})}]).factory("credentials.services",["$resource","CONFIDANT_URLS",function(a,b){return a(b.CREDENTIAL_SERVICES,{id:"@id"})}]).factory("credentials.credentials",["$resource","CONFIDANT_URLS",function(a,b){return a(b.CREDENTIALS,{},{create:{method:"POST",isArray:!1}})}]).factory("credentials.valueGenerator",["$resource","CONFIDANT_URLS",function(a,b){return a(b.VALUE_GENERATOR)}]).service("credentials.CredentialListService",["$rootScope","credentials.list",function(a,b){var c=this;this.credentialList=[],a.$on("updateCredentialList",function(){b.get().$promise.then(function(a){c.credentialList=a.credentials})}),this.getCredentialList=function(){return c.credentialList}}])}(window.angular),function(a){"use strict";a.module("confidant.resources.services.roles",["ngResource","confidant.common.constants"]).factory("roles.list",["$resource","CONFIDANT_URLS",function(a,b){return a(b.ROLES)}])}(window.angular),function(a){"use strict";a.module("confidant.resources.services",["confidant.resources.services.blindcredentials","confidant.resources.services.confidantservices","confidant.resources.services.credentials","confidant.resources.services.roles"])}(angular),function(a){"use strict";a.module("confidant.routes.history",["ui.router","confidant.history"]).config(["$stateProvider",function(a){a.state("history",{url:"/history",views:{main:{controller:"history.ResourceHistoryCtrl",templateUrl:"/modules/history/views/resources.html"}},data:{viewLocation:"history"}}).state("history.credential-history",{url:"/credential/:credentialId",views:{details:{controller:"history.CredentialHistoryCtrl",templateUrl:"/modules/history/views/credential-history.html"}},data:{viewLocation:"history"}}).state("history.blind-credential-history",{url:"/blind_credential/:blindCredentialId",views:{details:{controller:"history.BlindCredentialHistoryCtrl",templateUrl:"/modules/history/views/blind-credential-history.html"}},data:{viewLocation:"history"}}).state("history.service-history",{url:"/service/:serviceId",views:{details:{controller:"history.ServiceHistoryCtrl",templateUrl:"/modules/history/views/service-history.html"}},data:{viewLocation:"history"}})}])}(window.angular),function(a){"use strict";a.module("confidant.routes.resources",["ui.router","ui.bootstrap","confidant.resources"]).config(["$stateProvider",function(a){a.state("resources",{url:"/resources",views:{main:{controller:"resources.ResourceCtrl",templateUrl:"/modules/resources/views/resources.html"}},data:{viewLocation:"resources"}}).state("resources.newCredential",{url:"/new/credential",views:{details:{controller:"resources.CredentialDetailsCtrl",templateUrl:"/modules/resources/views/credential-details.html"}},data:{viewLocation:"resources"}}).state("resources.newService",{url:"/new/service",views:{details:{controller:"resources.ServiceDetailsCtrl",templateUrl:"/modules/resources/views/service-details.html"}},data:{viewLocation:"resources"}}).state("resources.credential-details",{url:"/credential/:credentialId",views:{details:{controller:"resources.CredentialDetailsCtrl",templateUrl:"/modules/resources/views/credential-details.html"},docs:{controller:"resources.CredentialDocsCtrl",templateUrl:"/custom/modules/resources/views/credential-docs.html"}},data:{viewLocation:"resources"}}).state("resources.blind-credential-details",{url:"/blind_credential/:blindCredentialId",views:{details:{controller:"resources.BlindCredentialDetailsCtrl",templateUrl:"/modules/resources/views/blind-credential-details.html"},docs:{controller:"resources.BlindCredentialDocsCtrl",templateUrl:"/custom/modules/resources/views/blind-credential-docs.html"}},data:{viewLocation:"resources"}}).state("resources.service-details",{url:"/service/:serviceId",views:{details:{controller:"resources.ServiceDetailsCtrl",templateUrl:"/modules/resources/views/service-details.html"}},data:{viewLocation:"resources"}})}])}(window.angular),function(a){"use strict";a.module("confidant.routes",["confidant.routes.history","confidant.routes.resources"]).config(["$urlRouterProvider",function(a){a.otherwise("/resources")}])}(window.angular);