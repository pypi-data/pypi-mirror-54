# Stubs for mahdiyeh_mbca.assembler (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

# Python Standard Library
from typing import Any
from typing import Dict
from typing import Iterable
from typing import Optional
from typing import Tuple
from typing import Union

# Mahdiyeh Mano Basic Computer Assembler
from mahdiyeh_mbca.util.base import MemoryWord

AdrsTable = Dict[str, int]
CacheUni = Union[bytes, AdrsTable]
ParsedLine = Tuple[Optional[str], str, Optional[str], bool]

class Assembler(MemoryWord):
    _source_code_hash: Any = ...
    mri: Any = ...
    rri: Any = ...
    io: Any = ...
    preudomstruction: Any = ...
    source: Any = ...
    def __init__(self, source_code: str, word_count: int=..., word_bits_width: int=...) -> None: ...
    @property
    def source(self) -> str: ...
    _source: Any = ...
    @source.setter
    def source(self, value: str) -> None: ...
    address_table: Any = ...
    @property
    def address_table(self) -> AdrsTable: ...
    _address_table: Any = ...
    @address_table.setter
    def address_table(self, value: AdrsTable) -> None: ...
    assembled: Any = ...
    @property
    def assembled(self) -> bytes: ...
    _assembled: Any = ...
    @assembled.setter
    def assembled(self, value: bytes) -> None: ...
    def _create_address_table(self) -> AdrsTable: ...
    def _assemble(self) -> bytes: ...
    def _precompile_lines(self) -> Iterable[ParsedLine]: ...
    @staticmethod
    def _parse_line(line: str) -> ParsedLine: ...
