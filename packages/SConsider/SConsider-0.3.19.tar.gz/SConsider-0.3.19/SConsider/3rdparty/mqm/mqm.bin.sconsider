# vim: set et ai ts=4 sw=4:
# -------------------------------------------------------------------------
# Copyright (c) 2011, Peter Sommerlad and IFS Institute for Software
# at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or
# modify it under the terms of the license that is included with this
# library/application in the file license.txt.
# -------------------------------------------------------------------------

import pkg_resources
pkg_resources.require(["SConsider"])
Import('*')

_sconsider_dist = pkg_resources.get_distribution("SConsider").parsed_version
if _sconsider_dist < pkg_resources.parse_version("0.5"):
    from SConsider import createTargets
    from ThirdParty import getBinaryDistDir
    buildSettings = {
        packagename: {
            'linkDependencies': [
                packagename + '.mqic',
                packagename + '.mqiz',
                packagename + '.mqmcs',
            ],
            'targetType': 'IncludeOnly',
            'public': {
                'includeSubdir': 'inc',
            },
        },
        'mqic': {
            'sourceFiles': [getBinaryDistDir(packagename).File('mqic')],
            'targetType': 'PrecompiledLibrary',
        },
        'mqiz': {
            'sourceFiles': [getBinaryDistDir(packagename).File('mqiz')],
            'targetType': 'PrecompiledLibrary',
        },
        'mqmcs': {
            'sourceFiles': [getBinaryDistDir(packagename).File('mqmcs')],
            'targetType': 'PrecompiledLibrary',
        },
    }

    createTargets(packagename, buildSettings)
elif _sconsider_dist >= pkg_resources.parse_version("0.5"):
    from TargetMaker import EnvBuilder
    from TargetHelpers import installPrecompiledLibraries

    includeTarget = EnvBuilder(export=[EnvBuilder().include(Dir('inc'))]).build().RegisterPackageTarget(
        packagename=packagename, targetname='include')

    libnames = [('mqic', 'lib_mqic'), ('mqiz', 'lib_mqiz'), ('mqmcs', 'lib_mqmcs')]
    libs_installed = installPrecompiledLibraries(packagename, libnames)
    libs = EnvBuilder().depend(libs_installed).build().RegisterPackageTarget(packagename=packagename,
                                                                             targetname='libs')

    EnvBuilder().depend(includeTarget, libs).build().RegisterPackageTarget(packagename=packagename,
                                                                           targetname=packagename)
